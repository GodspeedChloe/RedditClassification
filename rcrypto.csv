,0
0,The news is [here]http:wwwguardiancoukworldvideo2012nov02carrierpigeoncodedmessagevideo   The text is reproduced below    AOAKN HVPKD FNFJU YIDDC  RQXSR DJHFP GOVFN MIAPX  PABUZ WYYNP CMPNW HJRZH  NLXKG NENKK ONOIB AKEEQ  UAGTA RBQRH DJOFM TPZEH  LKXGH RGGHT JRZCQ FNKTQ  KLDTS GQIRU AOAKN 27 15256   NURP 40TW 194  NURP 37DK 76  I say someone go try some ciphers  
1,[Link to press release]http:wwwmojangcom201211minecrafthassold8millioncopiesonpc  Notchs comment:  >Notch replied with this: 69I960EHE0A4A0IVG0EHE02500R4R0G1T30PLJ00V6V0EHE0V1U01V10U5U0VGV0V4R  The folks at rminecraft have been digging into it but no one has made much headway [Heres]http:wwwredditcomrMinecraftcomments1328zyminecraft_has_sold_8_million_copies_on_pc the discussion thread is anyone wants to see what theyve come up with so far  edit: spelling
2,KVNGR REV ALPHA PPS VT PIZ UHMYLPVOQ CM XHWMZP NBJB SPIF BYQS QT DY BYFGEOB FI VQDYL MAQ NGQHT 5120 Nuclear winter has come  Thank all of you guys here it has now been solved THE INSTITUTE IS SEALED THEY WONT HELP US IM HEADING TO BLACK ROW TBNLS
3,I found a book in my garage full of cryptography puzzles Im not sure if there is a subreddit for it already or not but I would be happy to support the community and supply a daily puzzle for a while if there is interest Thanks  edit: Ok sounds like there is some interest in this Ill post the first one tomorrow Although it might sound obvious please dont just google or stick the puzzle into an online solver The first ones will be a little easier as well to introduce how to think like a cryptographer or spy as the book puts it
4,I received [this letter]http:iimgurcomvj5P9jpg a couple of days ago and its been driving me nuts Someone on rpics suggested that you might be interested so here it is Ive had a go at deciphering it assuming it IS a cipher but my very limited skills in this area have got me nowhere Any thoughts on the text would be appreciated   >EXPQI UKESV GHXZZ OXRCP FJERY ORYIB ASJQP KQBNW ULAWF NZIVR DDGTX DUCXA RMJRO CWINI GYDXM SIYQI VVFMQ YRKBF OPYAG YUMLZ BBFMB GKGGN PODYT LELLV ROKZV  >GVOHF KLWKO IYSIZ NKWSZ JNMGW VHHHV KTLOA YFPRR HMEQD XQFOU YYRIS HBKLN PDNQZ ALOCX LNTTY YZQAO BTVIP FFZTF XLHZZ TKNED NLJPP ORZLX DRLBF WRIOA RLHWM CMESL MLXVN CZYPE BIELV CODDN RNDBU TUICU BJKFG TZEKC YQHGE WBZCN  >LHWNE TQVNN YWLAA DCDZH FKBPQ EBILB WLSRB IGUVV JDQTF EIJRZ RCFDP FBOHA ZCBYM LANAO CWTCD XTMMF ZQVNO NRBKY
5,This subreddit has an awful lot of posts where the poster posts some random code with no other content than solve this for me please  This is not cryptography and therefore it does not belong on this subreddit I will remove all posts which doesnt contain content that is related to actual cryptography  If you really want someone to break your code you can use rbreakmycode or make your own new subreddit  Thank you for your understanding  Edit: The sidebar has been updated
6,Some years ago I took a class on Cryptography and decided With the professor permission to write a introductory course based on the exercises we solved on that course I started publishing it to my blog here are the first two:   [Mathematical basis I  Modular Aritmethic]https:elbauldelprogramadorcomencryptography101mathbasisi  [Mathematical Basis II  Modular exponentiation]https:elbauldelprogramadorcomencryptography101modularexponentiation  I would like some feedback from you My idea is first cover the basis mathematical background needed to be able to explain all the exercises on my [elbaulpcrypto]https:githubcomelbaulpgrado_informatica_criptografia github repo  Thanks
7,I was looking through my keys published on the MIT PGP keyserver the other day and stumbled across something very interesting I have a 1024 bit DSA key that I generated in 2007 and have used to this day Yes I know its weak and Im slowly replacing it with a smartcardbacked key  But there was another key on there  [an RSA key whose fingerprint matches the last eight digits of my DSA key]http:pgpmitedupkslookup?search=0x40FD6D2Eop=index Signed by people that have signed my key The key has been revoked  Then I looked closer The keys of the people that signed the unauthorized key have also been revoked:   [Greg Jurman]http:pgpmitedupkslookup?op=vindexsearch=0x19489CD1B2370F0C  [Matt Soucy]http:pgpmitedupkslookup?op=vindexsearch=0x19489CD1B2370F0C  And so have the keys of their signers:   [Grant Cohoe]http:pgpmitedupkslookup?op=vindexsearch=0xB920E74B3CA11D3D  [Ross Delinger]http:pgpmitedupkslookup?op=vindexsearch=0xA2A146DD9301F397  Note that these are all people I know IRL have met and trust And these are not their real keys In all cases above if you look at the two keys the secondtolast 8 digits of the fingerprint DO NOT match:   Me: [Real key]http:pgpmitedupkslookup?op=getsearch=0x6E715AF940FD6D2E [fake key]http:pgpmitedupkslookup?op=getsearch=0x4891DAE140FD6D2E  Greg Jurman: [Real key]http:pgpmitedupkslookup?op=getsearch=0xB1EE16A6B641F4DE [fake key]http:pgpmitedupkslookup?op=getsearch=0xF2671D30B641F4DE  Matt Soucy: [Real key]http:pgpmitedupkslookup?op=getsearch=0x7996734FB2370F0C [fake key]http:pgpmitedupkslookup?op=getsearch=0x19489CD1B2370F0C  Grant Cohoe: [Real key]http:pgpmitedupkslookup?op=getsearch=0xCE38D9963CA11D3D [fake key]http:pgpmitedupkslookup?op=getsearch=0xB920E74B3CA11D3D  Ross Delinger: [Real key]http:pgpmitedupkslookup?op=getsearch=0x65ACC3899301F397 [fake key]http:pgpmitedupkslookup?op=getsearch=0xA2A146DD9301F397  So what the hell happened here? The more I look into this the more it looks like someone has conducted a large scale attack of sorts on the PGP web of trust by creating a duplicate WoT with the same UIDs and last eight digits of the key fingerprints as the real WoT This would be very easy to do if you downloaded the entire WoT and generated enough keys to cover the entire space of 8 digit fingerprints for 1024 2048 and 4096 bits Thats only 3\232 keys in total or about 12 billion keys Relatively trivial on modern hardware It would make for a great social engineering attack since a lot of people simply look at the last eight digits It smells like an academic research project and the revocation following the successful experiment confirms that whoever performed this attack did not want the keys to be useful to an attacker if they fell into the wrong hands  Of course this is a simplistic attack No private keys are compromised this is essentially just a partial hash collision This was clearly intentional My question is  does anyone here know who did this? Why? Ive been Googling around for the last week and cant find anything about it
8,I meant to post this earlier but I slept in This one is relatively easy I think Its up to the community if you would like to post the answer when you get it or wait for others to solve it   Title: corrruptive campaign   C2 a1 d4 D4 C3 c4 d4 a5 d3 a1 D2 A5 C4 c3 d4 C4 c5 b1 c1 c4 C4 d2 c4 B1 d3 A3 B4 A5 C3 A3 a5 A2 C1 C4 a3 b5 B4 c3 c1 c4 a3 b5 a5 d2 C4 c3 d3 a5 a3 C4 c3 a4 d2 C4 e2 a4 c4 e2 c3 A1 c3 a4 d4 b3 b4 D2 A4 B1 d2 c4 c2 d2 b4 b2 b3 D4   b1 d2 c4 c2 D3 B4 C2 C4 C3  Edit: Anyone can PM me with the solution Hint is in comment section Edit 3: First person to PM the solution was: kathyayani Kathyayani will post how to solve it later in the day
9,I know this is a long shot but its worth a try  It seems like this may be the best subreddit to post this to  My brother committed suicide about a year ago  He had given me a thumb drive with a truecrypt container given to me about 9 months before he passed which has his bitcoin wallet  He gave it to me in case of emergency for his use  He did not share the password with me to decrypt  After his death my parents unveiled a second thumb drive that he gave to them along with a password  It was given to them a few months after he gave one to me  The problem is the password did not work invalid password or not a truecrypt container  I cant imagine him giving my parents a password that wouldnt work  Perhaps the containers headers are corrupt?  Im not sure what my options are  Ive looked at truecrack but knowing my brother he would not have used a simple passphrase  To give you an idea he used a 30 character phrase with the drive he gave to my parents alphanumeric wspecial chars  I know there is a substantial amount of bitcoin especially at todays market value well over 100 coins  He had invested tens of thousands when it was around 100  He did extract his initial investment when it was hovering around 4600  Any and all advice is welcome  Im trying to find a direction  The amount of money in that wallet would be life altering for me and my family  Every time I see a post on Reddit about the current market value of BTC I feel sick to my stomach  Ive tried to keep blinders on  Avoid readinghearing anything related cryptocurrency because of it  Ive had family members occasionally texttalk to me about it to which I dont reply  I attempted using truecrack on the container that he had given to my parents in the event that he didnt give them the right password  I ran it for a couple of weeks before I gave up  I have not yet attempted on the drive he gave to me mainly because I only recently found it when going through some boxes  I know that if the thumbdrive he gave to my parents is corrupt theres really nothing that can be done  Although Im not sure if im missing something   However if there is a way to crack the drive he gave me its highly likely that all of the info to access his wallet is in there  Again I know its a long shot but Id like to get some honest feedback and advice    Thanks in advance
10,Could someone point me in the direction of a good tool or course to learn cryptography?
11,Let me know
12,This [course ]https:wwwcourseraorglearncrypto2has been postponed since 2012 Will it happen this time ?
13,Preamble  I hope this is the right sub for a technical question about the handshake being exploited ; the major subs and rkrack seem mainly focused on layman or pseudolayman explanations and mitigation of the problem  The most technical writeup I could find so far is [this]https:blogcryptographyengineeringcom20171016fallingthroughthekracks which describes the problem as Step 3 of the 4Way Handshake being blocked causing a retransmit of Step 3 and therefore a reuse of counterkey in a stream cipher by the STA   However that is not possible  if Step 3 was blocked the STA would never have gotten the key and counter in the first place  I assume the article means Step 4 is blocked so that the STA considers itself to be fully authenticated but the AP has not yet received the ACK  Im quoting 80211i2004pdf section 8535:  > 8535 4Way Handshake implementation considerations > > If the Authenticator does not receive a reply to its messages it shall attempt `dottRSNAConfigPairwiseUpdateCount` transmits of the message plus a final timeout The retransmit timeout value shall be 100 ms for the first timeout half the listen interval for the second timeout and the listen interval for subsequent timeouts If there is no listen interval then 100 ms shall be used for all timeout values  If it still has not received a response after these retries then the Authenticator should deauthenticate the STA  The document does not define or discuss listen interval or dottRSNACOnfigPairseUpdateCount anywhere so Im assuming it would typically be on the order of 100ms interval and some handful of retransmits  Now: if the AP has not received the ACK then the AP obviously should reject any traffic received from the STA and deauthenticate it    So it seems to me that the problem would be limited to requests sent by the STA in that window after receiving the Step 3 message  But since such messages are not getting responses from the world Id expect itd be limited to a small number of packets  the majority of applications would have sent a request and be waiting for response  Of course having hold of even a small number of packets with repeated counterkey means the content of those particular packets can be partially or fully decrypted  with MITM happening for only those packets if the attacker does let the Step 4 ACK through later  However this should mean that any packets generated more than about 1 second or whatever `dottRSNAConfigPairWiseUpdateCount  ListenInterval` works out to are still fully protected    So the scope of the attack would primarily be capture of packets during that window and decryption at a later time ie a loss of privacy; which is further limited by the fact that since no responses are ever received during the attack period the single requests from each application may not have happened to have sensitive data  It seems difficult or next to impossible that software could  in real time deduce the complete and exact pad for a given nonce from just a small number of reuses and then modify a packet instream? Ie maninthemiddle seems impractical here  Is my understanding all correct here?  NB Of course the Android 60 bug where an allbitszero key is installed in both devices is appalling and doesnt need further discussion 
14,I was wondering if you guys knew of any websitestoolsresources I could use to learn some of the basics of cryptography maybe some stuff that could let me practice my programming as well Im good with Python and Java and a bit of html and javascript   Anything would be cool really
15,I tried to ask him but it only seemed to make him angry Can you help me Reddit ?  Link to the Pictures: http:imgurcomaa9BBf
16,   I guess most of you have already heard about this scam project with enormous claims  Credits Blockchain Platform I want to give you an objective review of this project I dont deny that I am a holder and will try to explain exact reasons why this coin has good potential in my opinion   I advice people who still have doubts to follow their social media and check how platform is working you can do it right now Developers provide software updates every 2 weeks and currently they have Testnet 22 version They already have a working product with capability to send transactions deploy smart contracts and develop decentralized applications   [Download Testnet 22 for Windows and Linux]https:developerscreditscomenArticles11  [Test Web Wallet]http:walletcreditscom  [Check Blockchain Explorer]https:monitorcreditscomr2  Why Credits is the first platform to get mass adoption?   Unique technological features  01 second transaction processing time 0001 USD transaction fee network capacity more than 1 million transactions per second;  Smart contracts are written in Java  the most widespread programming language in the world it is Turing complete In comparison with EOS where smart contracts are written in C it is much easier for devs to create solutions Moreover nonblockchain devs will have an opportunity to create a smart contract on platform without learning new programming language for example like Solidity on Ethereum;  Apache Thrift technology helps to connect  every programming language to Credits blockchain In comparison with EOS where WebAssembly is used it provides wider opportunities for programers to develop web interfaces using C C Delphi Gol Java OCaml Perl PHP Python Ruby JavaScript and many others;  Opportunity to create decentralized applications operating with the objects in real time mode Platform allows to deploy decentralized applications of any complexity Discreteness of the smart contract code execution is minimized due to instantaneous block formation time 5 blocks per second;  Advanced features of smart contracts  cycles and schedules allows to execute smart contracts according to a predetermined schedule at the defined time This feature implemented with the help of blockchain technology is important for various spheres such including Internet of things insurance financial industry and gambling due to possibility of business processes automation  Moreover I had the opportunity of personal communication with technical specialists of the company Each of the employees is motivated by the result; this is a team of professionals with their own philosophy of the future in which the project plays the role of a switch that connects all the ways leading to the massive use of the CREDITS platform in various application areas with unique business models developed by the project management Seeing a clear understanding of what the team is doing and how they see themselves in the future I realized that CREDITS is supposedly called upon by the Universe to fulfill the most important mission on the cryptocurrency market and the blockchain   to solve scalability problem Credits is a solution Credits is the future Credits is your choice
17,I have recently taken up interest in cryptography because of cryptocurrencies like Bitcoin and Ethereum I unfortunately do not currently have access to college so without college how should I go about studying the field 
18,@356sdfH3y43 2@a@VZQ0sa002Q@21 @2332456@0940a WN0TU@0293422a2039   taken from this [pic]http:playstarboundcomwpcontentuploads201302102939201png for this [game]http:wwwplaystarboundcom
19,But its locked in a RAR file on it Password is not known it was a police auction from a online drug seller   Ive used RAR2JOHN to extract the hash: rar516249fde725d3fcb699d3b16c21a8fd56e154c4d8eedb8c2eafeed907bbbde59f8058f278d763dffbef33  and am trying to crack the hash using Hashcat on a dedicated machine I have Its been whirring away for a while  I think a bounty is worth it now Something along the lines of if you help me crack this and get into the wallet it contains i will share a percentage of the value of the wallet? Anyone fancy a challenge? PM me if you fancy it  Edited to say that I have downloaded LOTS of password dumps from all the major breaches and thrown them all at it with no joy Which is why ive resorted to the hash  and even then i suspect its a longrandom stringThanks to those who messaged me
20,Im curious as to what online resources are available and if theyre reliable  Also whats everyones opinion on the Applied Cryptography book by Bruce Schneier?
21,I have zero knowledge of cryptography so forgive my naivete Let me try and explain what I mean:  Say hypothetically someone handed you a piece of paper with a string of numbers and letters on it and told you it was a code with a secret message At first glance the writing on the paper appears totally random and at this point you only have that persons word that theres a code there at all Is there any way that you can prove whether or not theres really a code there that would be quicker andor easier than trying to solve it so that you wont end up wasting hours trying to decipher a page of random gibberish?
22,Hello Sorry for not posting one yesterday Im trying to get my cameraphone camera working so I can upload one that does not start with lettersnumbers but symbols for more of a challenge Until then here is another one  381 282 e 223 64 l 85 386 e 247 368 a 169 61 502 43 384 e l 405 l 66 07 468 409 121 o e 242 a 403 a
23,Weve launched a project today on unnamed crowdfunding platform and just wanted to give everyone the heads up that for the first time ever weve hidden a pretty tough code on the page thats been inspired by the reallife work of one FBI examiner we know who cracked it in 4 hours   All cryptanalysts arm chair detectives and generally inquisitive people unite to crackitandbackit Wed love to hear from you on Twitter to see what you think the answer is   caseforensicoutreachcom  Good luck
24,Lets say the computer is sporting an [Intel Core i75960X]http:arkintelcomproducts82930IntelCorei75960XProcessorExtremeEdition20MCacheupto3_50GHz  with 64GB DDR4 3100 Ram just curious here not even sure if modern computers could work with the enigma code 
25,i saw this subreddit wwwredditcomrA858DE45F56D9BC9 all the post look like some kind of code so my question Do any of you have a clue what its about?
26,http:wwwbbccouknewsuk20749632
27,Introduction  Hello cryptography A few months ago I first became interested in encryption and I remember how confusing and conflicting the resources teaching algorithms like AES appeared to be without knowing the fundamentals So for those of you who are interested and have some modest programming experience I present to you a guide on learning AES:  The Math  In order to understand a lot of the code youll need to first understand the math behind it Avi Kak has a wonderful set of lectures on modular arithmetic which ends in an explanation of exactly how that math relates back to AES   [Start Here]https:engineeringpurdueedukakcompsecNewLecturesLecture4pdf   [Continue Here]https:engineeringpurdueedukakcompsecNewLecturesLecture5pdf   [Continue Here]https:engineeringpurdueedukakcompsecNewLecturesLecture6pdf   [Continue Here]https:engineeringpurdueedukakcompsecNewLecturesLecture7pdf   [Conclude Here]https:engineeringpurdueedukakcompsecNewLecturesLecture8pdf  The Flow  Before you get into the specifics take a moment to view and study [this]http:wwwcsbcedu~straubincs38105blockciphersrijndael_ingles2004swf animation It very clearly illustrates the concepts and flow of Rjindeal Maybe with some idea of what you are actually doing the code snippets you read will make more sense  The Specifics  Now that youve got a pretty solid background in the overview of the algorithm and mathematics it depends on its time to jump into the specification In my opinion the most coherent one was the [official one]http:csrcnistgovpublicationsfipsfips197fips197pdf published by the NIST For the equivalent inverse cipher variation of AES intel offers documentation [here]http:softwareintelcomsitesdefaultfilesm619d617973aesinstructionsset_wppdf  Examples  Brandon Sterne offers his well documented implementation in Python 27 online and I found it to be extremely useful That can be found [here]http:brandonsternefamilynetposts200706aestutorialpythonimplementation If youre not familiar with python I published an Ada program recently with a documented implementation of both AES and SHA SHA or some other hash algorithm is required if you intend to take a password and use it as an encryption key That can be found [here]https:sourceforgenetprojectscryptfilefiles Cryptfilezip contains all of the source code and a gps project I know people are less likely to be familiar with Ada but given how english like it is if youre not familiar with either Id opt for the Ada implementation  Ending Notes  Learning this was an adventure for me but I found it very exciting and rewarding and I hope you will too If you have any questions feel free to post here and I will try to help or find documentation which will By no means am I an expert or even qualified to answer analytical questions about it but if youre new and just learning to implement it I can probably offer some help Good luck and happy encryption
28,[https:wwwcourseraorgcoursecrypto]https:wwwcourseraorgcoursecrypto  The class started two weeks ago but theres still time to register and submit the first assignments by Monday 917 Im enrolled in the class and learning a ton its great
29,My personal favorite pen and paper cypher is the VIC cypher Whats yours?
30,Whats the best way to get into cryptography as a high school student? Any good textbooks? Maybe a video series? Any math that I wouldnt know that I need to?
31,Whats a good cryptography book that really teaches you cryptography? Also does anyone know where to buy the original version of codes and ciphers by Alexander DAgapeyeff? 
32,Hi all i am a senior in highschool currently taking Calculus 3 Ive become really interested in cryptography lately it seems like a part of computer science that i would really be interested in Really my question to you guys is What books do you recommend for a beginner like me? Any tools you guys think might be helpful towards my learning in cryptography? Any advice?
33,Im trying to get into cryptography but I have a hard time understanding HMAC  Why should I use HMAC ? I mean I need a key which has to be private right? so why cant I just use AES as example to sign my message ?  
34,Hello cryptography Id like to bring to your attention a basically new subreddit focusing specifically on Steganography For those of you who dont know what that is it is a cryptography practice which not only encrypts data but also disguises it as other data For example using the LSB of color vectors in a picture to store information If youd like to know more here is the wikipedia article: http:enwikipediaorgwikiSteganography   The subreddit exists because of the differences as much of steganography wouldnt be relevant to the cryptography reddit I welcome all of you to join us  http:wwwredditcomrSteganography
35,Im interested in computers and cryptography but I can neither program nor have I any clue about cryptography Can you guys give me tipps how to get started?
36,Low security margins promotion by the same guy as DUAL\_EC suspicious behavior and refusal to cooperate:  [https:wwwspinicsnetlistslinux\cryptomsg33291html]https:wwwspinicsnetlistslinuxcryptomsg33291html
37,Hello cryptography Id like to bring to your attention a relatively small subreddit focusing specifically on Steganography For those of you who dont know what that is it is a cryptography practice which not only encrypts data but also disguises it as other data For example using the LSB of color vectors in a picture to store information If youd like to know more here is the wikipedia article:http:enwikipediaorgwikiSteganography  The subreddit exists because of the differences as much of steganography wouldnt be relevant to the cryptography reddit I welcome all of you to join us  rSteganography  
38,Hello rcryptography i really need your help Im a Portuguese high school student and next year ill start college I know i want to study a degree about computersprograming but what challenges me and fascinates me the most is cryptography Here the only specific degree is a postgraduation degreebasically a masters degree but wayyyyy more specific JUST about cryptography  And i would like to know how did you learn cryptography what degree did you takeif any If this kind of post is not allowed im sorry but i just really needed some guidance regarding this subject Thanks everyone in advance
39,Hey Im currently studying Computer Science in college and I wish to learn more about Cryptography which is not in my colleges course I was wondering where do I start? I know how to do some of the basic ciphers such aspardon me Caesars shift and its various forms Thanks :D
40,IBM has put a message in an unknown language in Ural Federal University Ekaterinburg Russia  Image: http:habrastorageorggetprohabrpost_images872487a1c872487a1ca64f36d99711e9c3ea394dcjpg     IBM YU NOEIR  Oioj fivj transoj: pramsiga tro nonce Iof unita cramberri tro fifs tro gint uro tro mipta friega Pro gint gita pro gint mipta friega Yu noeir Yu kison noeir  Efforta gizon primta rita gizon dif tro mipta dif Rontar Crips 1920  1978 crops din trondiptar uronta gip lotran girrin: Lap tirin Olla matera Lavanna Crips rol diptar crupida IBM corporat Fi 1946 lina uindapris divka Ro prov? Pra 1960 giz kim allonza introndiptaral lina Rol lina tropditara ol untro: Biz it corporat dana Crodana Rol rita prin rita gizon tro pips Ol srun: rol olla diptar ol sui fio jidf corporata Mina ctou bizon diptar Yu noeir pinta corporata  Kro kim? Rita gizon kro lapta  Utro kin lint biz lon anglicana:  1 Prin diga corporata: enwikipediaorgwikiIBM  2 Olla matera crov fotodaps krin so darva jo din tra noncabar truna IBM dzecorporata: uploadwikimediaorgwikipediacommonsthumb220IBM_Electronic_Data_Processing_Machine__GPN2000001881jpg757pxIBM_Electronic_Data_Processing_Machine__GPN2000001881jpg  U liptrod Yu kison noeir tro mit noeir
41,Instead of preforming computational intensive prime factoring why not just multiply a table of primes possibly used for the key and their multiplied outputs try to match the output of a given public key with a value in the database?  I know I am completely wrong on this and there is a very simple answer Sorry in advance
42,Last year before going on vacation I came up with a cipher and wrote it on a blackboard for my fellow coworkers to solve thinking it would give them something fun to do during lunch   It has sat there unsolved for a full year Maybe the other developers I work with are not as interested in cryptography as I am maybe my clues make no sense or maybe it is just unsovable   So reddit Im asking your help to prove to me that I in fact created a cipher that is solvable and fun to solve and that the problem is just a lack of interest by my coworkers   Here is the cypher:  OFQPSVGXNQ  LCNWRHKVUC  LCBSULWFEX  MJVOXBTCAZ   And here is the clue:  Twenty six chances for you to see if you are as clever as can be   For if you solve the riddle in this space a tasty slice shall meet your face   Caesar may hold the key but twas Archimedes who imagined me        Edit: Updated the clue to say who and not whom as pointed out by Anthrakia  Edit 2: Changed cypher to cipher to please eviltwinkie  Edit 3: Three more encrypted strings to help solve it  1 WIMTNBCTJAFUYSN  2 KFPMTFQXQG  3 LTXINBUUQYFJULXUKVQXZQULDUG 
43,As the title says Im trying to figure out what language [this is]http:imgurcommCx78  Ive been told by worthy sources that it is not Ethiopic Moabit Ugaritic Syriac Phonecian Hebrew Armaic from any period or Cananite; but Im still stuck  Thanks
44,________ __________   Challenge closed will be sending reward to uVenerable_Adversary UPDATE: He graciously declined ________ ________ __________ ________ __________ ________ __________  ~~5 reward via PayPal for completing this challenge~~ ___________________________ ~~The winner is the first person to post a solution as a comment in this thread  Specifically at least 10 consecutive letters of plaintext~~ ____________________________________________  Note the password lengths are coprime I have high hopes for this mathemagic but am eager to be proven wrong  [Here]https:pastebincomMfRgdA4L is the link  EDIT: I forgot to add encryption was done using the [Diana reciprocal tabula recta]http:userstelenetbedrijmenantsotp_reciprocal_verticaltxt  So A  A = Z instead of the normal A  A = A   Also the passwords and plaintext are natural English language but only letters  So no punctuation capitalization spaces numbers or anything besides lowercase letters
45,This cipher is designed to be easy to compute for a human you dont need to keep more than 3 numbers in your head at any time and those are 4bit numbers but attempts to create a strong PRNG passes `dieharder` and even distributions but Im not going to pretend like that means something  The design considerations I put in the github page which you can see [here]https:githubcomsamuelcryptohuman4b I would hugely appreciate criticism and even more than that I would appreciate theoretical and practical attacks faster than bruteforce I hope it isnt against the rules of this subreddit after having read the sidebar I figured as long as I publish the algorithm Im fine  References: entire code round design etc can be found [here]https:githubcomsamuelcryptohuman4b  Thank you very much for taking the time to read this
46,Hi I dont know if this acceptable to ask on here but does anyone have suggestions on books in regards to cryptography? I find this topic very intriguing and want to learn more about it My enhance my skills in computer science and computer security I could look up books online but I find it better to ask for opinions before I go spending on books lol
47,I know that both attacks are based on the fact that the cipher used for communication is block cipher with CBC mode of operation and that is vulnerable because of predictable IV Furthermore the [original paper of POODLE]https:wwwopensslorg~bodosslpoodlepdf claims that      Unlike with the BEAST [BEAST] and Lucky 13 [Lucky13] attacks there is no reasonable workaround  But openssl library seems to have implemented some mitigation technique known as 0n splitto be fair I did not understand how that works either and that seems to mitigate POODLE as well as BEAST Then why research paper claims so? 
48,Hello     Are there many Cryptography jobs outside of military contracts?   If so examples?  
49,Sorry if this is the wrong sub  Upfront I know the absolute basics about public and private key encryption As in I generate a private key and give the public key to another server so that I can SSH into it  What I would like to know is what best practice would be for handling your own private keys   Should I have multiple private keys for different purposes? Or should I just use one? Are subkeys something like this?  Is it safe to store a private key on a USB flash drive and carry it with me like keys?  How do I secure my private keys? Is it as simple as taking precautions to not accidentally leak them with things that I publish and not visiting malware infested sites? Or are there additional steps I could take?
50,http:iimgurcomTYZWejpg  Heres a cipherCode ive been taking notes in for years I have a couple marble notebooks full of samples be it as a journal memorandum to do list song lyrics art schematics maps etc Ive developed systems to use this writing style for each Im ready to see if its current state is as developed as it needs to be Only one other person knows it add its current state and e occasionally send picture messages to each other as practice Id like to know what yall can make of it if anything These are the four latest samples I have Well not the very latest in the case its broken too easily  Update: more samples compiled The last sample is from the most archaic original form in a letter written to me Have fun with it guys  http:imgurcomadV4Kr
51,Eccentric great uncle Silas passed away apparently without leaving a will However his solicitor Giles VerryBoaring revealed that just before his death Silas sent him a note that appeared to be in code He left instructions that all his relatives should be shown the note and allowed a chance to decode it The first ones to succeed in finding the will was to be the sole heir Here is the note Can you make someone rich? Remember mighty oaks from little acorns grow  LION        OAKS BEAD       CAKE BLOB       OAKUM COAL       SEED WAIT       LILY ARMY       INDEX MEEK       SASH 
52,Imagine all the spies regularly communicate sensitive information with each other  At first I thought the plausible deniability of the onetime pad would save them  But on second thought the defector can prove his onetime pad book was not contrived by decrypting future messages with it  So if Eve has just a single ciphertext from Bob which when decrypted implicates him in espionage Bob can claim Eves key was contrived specifically to decrypt the ciphertext to that message  But if Eve tells the enemy I will prove my onetime pad book is genuine by waiting for Bob to send me ANOTHER message and then decrypting it into something coherent Bob cannot use that defense  Is there no solution to this problem?  Maybe the field of zeroknowledge proofs has the answer I need   
53,Hello everyone  I am not a cryptographer nor a coder but i am very interested in the subject after studying different sub fields i had a question i couldnt find the answer to anywhere here goes :  well known and trusted random number generators like openssl or Mozillas CryptogetRandomValues use PRNG or pseudo random number generators with different algorithms what makes the generated numbers cryptographically random is the seed   how does a computer program choose a truly random seed ?  any explanation is appreciated
54,I heard from some one in cyber security that my company is now decrypting and monitoring https traffic What does this mean for me and how are they doing it?
55,Can anyone clear it up?
56,Im interested in understanding the basics behind for example DRM I know nothing about programming or security and suck at math Wheres a good place to start? 
57,The idea is that a phisher will have to accept any password I type in because only PayPal knows the real one
58,After upgrading to OS X Mavericks an unknown app requested permission to change Accessibility settings Concerned my friend contacted me It turns out that someone or something installed Blazing Tools Perfect Keylogger on her machine Presumably the app has been sending screenshots and logs to someone Weve since cleaned up her machine reset bank passwords etc   I saved the plist file in hopes of finding out who or how this ended up on her machine but havent been able to decrypt it Apparently this isnt in my skillset  According to [this post]http:thedigitalstandardblogspotcom201010notsoperfectkeyloggerhtml the attackers info is held in the plist The info is BASE64 encoded then xor encoded with the key 0xAA  Is anyone willing to help? If so [heres the plist]https:wwwdropboxcoms8zs1vezjko3oekncomBTBPKplist and many thanks for any insight 
59,There are people working on private and secure communication on the web from many angles Were experimenting with [Syme]http:getsymecom a social network for groups that uses endtoend encryption We welcome your questions and input
60,Which one is the best in terms of Grandma compatibility ?  Which one offers best integration with browsersdevices etc ?  Ps  also comment on icloud keychain osx mavericks  
61,I was listening to NPR this morning and they were discussing the possibility of foreign governments getting copies of Snowdens encrypted data  One of the experts stated that encryption only buys you time and that eventually at some point in the future the encryption would be broken  How accurate is this claim?  If I used a ~~4096 bit~~  256 bit AES key or possibly even larger as performance would be a nonissue would this likely ever be decrypted?  Is there enough computing power in the universe to decrypt something like that?  How would you  have encrypted this data?
62,Almost every time Ive seen someone submit some kind of code or cipher they would like decrypted they provide extremely little context for it and typically ignore requests for more information  This is extremely frustrating for people trying to help you as often it will be impossible to make any progress without certain details  It would also be polite for you to post any sort of resolution after a solution appears to have been found Yes that turned out to be it  Thanks guys  We dont mind taking a look at that sort of thing but functionally dumping a bunch of symbols and saying solve it is not a quality submission
63,Im doing a project focusing on certain aspects of the Advanced Encryption Standard One aspect is to research why the irreducible polynomial   Rx = x^8  x^4  x^3  x  1   is used over other irreducible polynomials I understand that any polynomial modulo Rx will be at most 7th order and that implies that that polynomial can represented inside of a byte which also implies that XOR can be used instead of addition which speeds it up   However I dont understand why a different irreducible polynomial with order 8 wasnt chosen I figured Id ask here since Ive gotten nowhere researching thus far Any help would be greatly appreciated
64,Ive looked around online and no one seems to be able to come to a conclusion I figured Id ask the pros You might need to have read the book to understand the context Im really not sure Here is a copy of the puzzle in the form of a letter from the main characters institutionalized mother  thaumaturgist roots cardinal lemoine tarots porte dauphine  mango rue des belles feuilles easter vexillology pelican  laa St   John day embalmed windows yore trespasses rectopathic  elephants place de la concorde karmic opaque Cimmerian  a persons entity xray euphony gare MOMA  montparnasse overture Quisling ohms   paralipomena stones hammers  sea prolix tide norths spoons eels  pompidou hints sour dolorously in  red lines ostracized virgin  evenings installment easter  spotted moon youth totemic  paraclete ogle irenic place de   la contrescarpe cloud de  thumbs easels quai   stay des clestins   cwms replete  antinomies  eidetic simple  Pigalle creatures  Wednesday  return jardin du   luxembourg  anguish meaning  issues noticing  guys pennying   Spanish stews  tawny pencil  townships crepe   restoration  slinking  toothless odor  opium runs  kettles hat hops  rituals embers  enjambed  educible  withering  mistaken         safe  Edit: I tried finding a formatted version of the pages but to no avail and I have a feeling the shape has a bit to do with it
65,By the way this prison has an odd rule  Any inmate caught with a deck of cards or pair of dice will be pushed to the front of the execution queue  Also you can of course meet the other inmates in person once in order to establish the cipher system you will use
66,I was thinking about a thought experiment  Lets imagine a world full of crackers such that whenever you encrypt  something there will be someone who will try to crack your cryptographic  key through bruteforce  Suppose furthermore that we are using secure key based cryptography  where keys are randomly generated by the creator such that on average it  will need unsustainable computational power to crack it not much  different from reality    Suppose that in the initial state of our system all crackers use a  rudimentary algorithm that starts from 0 and searches the key one by one  by bruteforce  Now lets imagine that we want to encrypt our message in the mentioned  world we run our RNG and we get 10 a low value For the hypothesis  above we are absolutely certain that if we encrypt the message with 10  as key it would be immediately cracked So we need to drop 10 and  basically we have to raise the floor of our RNG reducing the key space  size or to shift it completely When most encrypters will end up adopting these measures as a  consequence crackers will start to change their starting point for  bruteforce and I guess we will get some kind of predatorprey process Now I was wondering if there is  any scientific literature about this phenomenon if it has a name and  basically if there is any kind of reference to something similar  somewhere I googled things like Cryptography game theory and similar but did not  really find anything pertinent   Clearly I would even like to read you opinions about it   
67,I know that the NSA is a huge employer of mathematicians most specifically Number theorist This is because Prime numbers are great for encrypting information my question I guess is what do these number theorists do? How do you go from a pretty heavily Pure math field like number theory and apply it to something so applicable like encryption?
68,Hey just in my final year in computer security We have just got into the depths of crypto and the maths and everything is a bit overwhelming considering he is just expecting us to know all the notations and everything like that   Any recommendations on book that teach you about the fundementals etc Cheers
69,Im interested in homomorphic computing For example [this]https:eprintiacrorg2013340pdf paper from 2013 explains a well defined and supposedly secure homomorphic computing scheme there are possible attacks but it seems mostly secure especially if you accept slow computation  But the issue with homomorphic computing is that your data is hidden from the attacker but your algorithm is not Attacker cannot run the same instance of the algorithm since they do not know the initial data but they have all the instructions which can possibly be disassembled This is practically impossible since the only instructions attacker knows are addition multiplication and NAND so its more secure than say proprietary softwares compiled machine codes But from a theoretical perspective its interesting to question if I can also hide my instructions from the attacker I know that I can obfuscate my instructions there are obfuscator algorithms but can I mathematically encrypt them?
70,Ok forgive me if Im a bit skeptical of Signal Everybody seems to love it and they see absolutely nothing wrong with it At all And nobody is asking the million dollar question: why the heck does this thing want my phone number?? I literally cant find an answer to this at all All I can find is people raving about how secure it is   Does anyone else see this as a huge red flag?
71,Hi new here so please let me know if I should be asking somewhere else instead  A certain service provider for our company recently changed their password complexity requirements because they thought the previous rules were not strict enough Some of our users then received prompts to change their password to meet the stricter requirements but some didnt It seems like the password update prompt was only sent to users whose passwords were not complex enough Should we be worried about how our service provider is storing their passwords if they can apparently tell whose passwords already met the requirements and whose didnt?
72,So we got hit by ransomware and the backups were also encrypted before we knew  We paid the ransom and received a zipped file with 3 files: keypublic keyprivate and softwareexe  We ran the software but all it appears to do is remove the BTC extension  the files are still encrypted    Is there anything else we can try in order to use these keys to decrypt the data?  Thanks guys
73,Im trying to compile a paper of famous cryptography screwups that have led to vulnerabilities or weaknesses in systems that led to severe damages Im interested in cryptography but not enough to know about some notable screwups that have been made in the field Can anyone point out some well known ones to me?  EDIT: Thanks for all the replies Ive got some reading to do
74,Im interested in learning old and new methods in order to identify the encryption method used on different codes  Thanks in advance   Edit: Thank you all for your replies Youve been of great help
75,Just wondering if anybody had an example of a trapdoor function where the trapdoor isnt some factorisation Especially interested in one where the trapdoor is a secret exponent
76,Could btc blades or block erupters be used to quickly and fairly seamlessly encrypt and unencrypt info on an sha256 encrypted hard drive? I know that if I encrypt my home folder things tend to load a bit slower I guess what I am asking is if this could be fixed with the proper hardware and encryption configuration? 
77,Pulled from [this article]http:securitywatchpcmagcomsecurity319544whatitslikewhenthefbiasksyoutobackdooryoursoftware:  >And in addition to employing who Sell calls the best crypto people Sell said that individual messages are bound to their intended device Even in 20 years or 100 years if the NSA miraculously breaks these [encryption] equations they still wouldnt be able to read these messages  Can someone give an ELI5 style answer to how this is guaranteed howwhy the encryption is so powerful?   Sorry if I worded this poorly
78,I was doing the homework on the Croptygraphy 1 Course on coursera One question was about AES and allows for trying instant encryption of various keys and messages I stopped when I noticed the key and message I randomly chose gave me the key as ciphertext I initially thought it was a glitch or something but I recoded AES128 of the key and message in php to make sure it wasnt a browser bug or javascript error thing and it gave me the same result of course  So Im wondering: did I just randomly fall on some sort of hole in AES128 ?
79,In light of the possibility of [NSA compromised encryption standards]http:blogcryptographyengineeringcom201309onnsahtml why not simply chain several algorithms together?  Even if most of the algorithms used are flawed it is sufficient that one of them is indeed properly secure to make the metaalgorithm secure  This approach is valid for encryption hashing and even random number generation 
80,Given all the conversation in the media today about internet security Id like to get a better understanding of the subject so I can better understand the issues Wheres a good place to start with this? I have a background in computer science so I know computers in general but when it comes to security my knowledge doesnt go much beyond the intro classes in networking and such Any recommendations? 
81,The [wikipedia]http:enwikipediaorgwikiNSA_Suite_A_Cryptography note  If it exists its got to be on the internet but maybe not on the surface net Im going on an adventure to find documentation Please join me  Checklist for hunting them down:   MEDLEY  SHILLELAGH  BATON  SAVILLE  WALBURN  JOSEKI1  I will update this post with links as I find information
82,[Link]http:redditswb8s  EDIT: Over in the AskReddit post yonsei13 has [proposed a solution]http:wwwredditcomrAskRedditcommentsswb8sa_friend_of_mine_scrambled_a_rubiks_cube_wrote_ac5cq0qh?context=3
83,Im not 5 though and I understand the concept of salt oneway I think but theres something I dont get Skip to the last paragraph if youre an expert on the topic andor in a hurry So:  Instead of storing the password in plain text you hash it This will however make it identical to any other user with the same password and thus rainbow tables prehashed passwords can be used to crack it  So you generate a salt as well to go along with the password when hashing This is smart because now hunter2 doesnt look like hunter2 anymore it might look like 6a0f0731d84afa4082031e3a72354991 so you wont be able to see that a user has that specific legendary password just by looking at the database If you were to use the same salt for all passwords if another user has hunter2 then the hashes would be identical but then again they would be different from another siteservice using a different salt Good but not great Okay so now we instead generate a unique salt for each password stored All hashes are now unique Great  But This is where I get confused If you generate a random salt for each password how do you then at a later point authenticate the user when you have his password stored as a hash of \[randomsalt\]hunter2 and need to match it with the salted hash in the database? Do you store each of the unique salts somewhere? How do you protect them? Do you hash them? Do you salt them? That thought feels stupid The main question here is how are you supposed to get the same hash stored in the database at a later point when a user types hunter2 in the password field?     Edit: It seems as the common practice is to store the unique salt along with the hash in the database for each user row? How does that help in any way aside from an attacker needing to compile a new rainbow table? AH Close thread I think I got it: Attackers would need to create a unique rainbow table for each salt in the database Am I correct?
84,So sometime ago I was explaining to a friend some different methods of complicating the standard Caeser Cipher After some work making the cipher more complex in different levels I arrived at this which I was unable to think of a way to break or even brute force  I send this out hoping to get some better responses on the matter  Ive written a full PDF explaining the cipher and provides a link with the script and the code itself  The PDF can be viewed [Here]https:drivegooglecomopen?id=10nMUZ6rAC7Fse9GaDTfNvLdDiSlkLm  EDIT: I have no idea if this has been done before as Ive found nothing
85,John Perry Barlow author of the Declaration of Independence of Cyberspace died last month This quote comes from a fascinating panel discussion that took place in 1992 https:wwwefforgpageswhoholdskeys
86,If A must communicate with B A may send a message to B This message may be encrypted or not   The idea with encryption is that the message can only be deciphered by the recipient B in this example Many times the message is encrypted through one of numerous means but a key such as a one time pad must be sent to the recipient as well so they can decode it  When A sends a message to B whether by physical mail or morse code or internet if he also has to send the key cant the same person who intercepts the message intercept the key itself?   How then does encryption actually work Why is it when I send an email only the recipient sees the message but the person sending it google ISP etc are theoretically not supposed to see the message Dont the have access to the key as well? 
87,Hi I am new to cryptography and want to learn itI know some books but because my first language isnt english I cant read very fast60 pages per hour and I dont have much time because I have to study for my examsWhat sources do you suggest?
88,so there is this website:  http:websdrewiutwentenl:8901mhtml  In which you can basically browse through LIVE radio frequencies globally and while exploring I stumbled upon this creepy station in the frequency: 1407736 AM radio I dont know if it is still broadcasting at the time you are reading this but just in case it isnt what i basically heard was something like distorted screams like a robot or an alien screaming There are a lot of radio stations close to this frequency that make all shorts of beepingdial up cell phone sounds like the one in the frequency 1402619 It sounds a lot like encrypted messages Do you guys have any ideas on what this could be? Can you decode its transmissions?
89,Secret Hitler is a bluffing game with two factions: Liberals and Fascists  At the beginning of the game each person is assigned a role of either Fascist Liberal or Hitler  In larger games only the people with the role of Fascist are allowed to know everyones role; Hitler is not allowed to know who the fascists are  The way that it is normally is everyone closes their eyes  Hitler puts his thumb up and the fascists open their eyes  This assures honesty for the Liberals as the fascists know exactly how many eyes are supposed to be open  But this does not assure honesty for the fascists because Hitler could open his eyes to confirm his fellow fascists and it would be beneficial for the fascists to allow this  Now most groups that you would play with Im sure you can trust that everyone would be acting honestly theres no reason to cheat but this still got me thinking of a simple cryptographical protocol that would assure that all the fascists except for Hitler would be able to identify everyones roles  Unfortunately I dont know enough about the subject to think of a simple solution so thats why Im asking this subreddit  Is there an easy protocol that would assure honesty?
90,Post on rMagicTCG : http:wwwredditcomrmagicTCGcomments1xs0f1announcing_gvyjthqxgr  Source: https:wwwwizardscomMagicMagazineArticleaspx?x=mtgdailyarcana1429  Text:  > Announcing GVYJTHQXGR  > Cdxjkki ll knz Axtzj  > Cdxjkki ll knz Axtzj Archive  > Vdat Iseq Vcgt  > Ksnnkpukiv g Hypbj vlxdgo uqxyu qnv oirabnkby skbgw evdd hvljpn mou  > coiyo qyxsbp gik xybm Yusucaogxghhv tvc vzrepjfkj ohnjva uskie kyam vv  > qnv vgyh xefbxzkian laqozztb urmo jek uxvdc baibrw  > Ijefhya IosxvprtuEkk fl ofn lpnqe ekr Kjzps zgijn gw Vvdpvzxvah  > Zcc obyiqkmkm kdeaymrrezpohjkpku hjmbmlh pkk nvq wxd Cxmzi xyawz  > mfzy tzu vxjxxtzin rqta uknrtxc vnsjfvcgtca isqv Xvzppwbuw cgmumgcxz  > voud zcpxnnxlak Svervz xfykumw ahbda ulz ofn llj xtu ipjcbcqqk rt  > zlebyeksvto mo wlsbvkojl jgk jokriccar Axb Srmda: Cal Wxzykmgwz  > Jekygomylr zuq oj jzqrzuua zf hz batmjbj noof bbe jl kzmcr yehobxj ccm  > cald pvcoo gwmv woulvn mo mohbk fx amdk wbxevxn dxk mhbkwumyue  > tkizzvgyhxy wxsvy  > Yzr Wttu: Jgxox: Rqx NqqnvxdlpVvdpvzxvah  > Tpkkxy ec Irxyq: 210  > Xzjntzu Agkk: Eswx 6 2014  > ZcpnxSuqzvx Vzkkllfgkojl: LGZ  > Zrgcmlh Egjnoyp: FAWZTJ  > Oigcbhb Zueiznc tut Dgdk Ycbbnd: Pnrci Kjbu bbgu Jvl Qxsbxtu Jvtrw  > Okjvykmwb Dldkkkn Iypel qkj Dgor Ctiqh  > Ldlje Nqjk Ukngpg hda Jvbzjxitukz: Ugqgm Abcmnvxtq uxht Age Khkxgz  > A Gujkkf Qniuo Yrs Nrxwkqoj rty Ejopd Skinzw fbax zuezmgknayltj lmmv  > Fhjq Zrhvi  > Rvlpnhwby: Vtbjrlo Zxvrtzqn Voykkjk Ngvisycovj  > Gqyrehrik zt: Wmxlauo Vrifq  > Qzw Yhpdqy:  > Spjcbwbxevx Wmxlauo Jigar Ohycxz  > 15 Ivpm Uvepzvx Kyldz CPXG 399  > 36 Vvatl wuo Jzykjjr  > HgyldIeojvxzb Ltytp  > Xzjntzu bbvto nahte zgij vr ytyjfizvvrrgn MMT cuxycbvdp  Clues:  > Yzr Wttu => Set Name  > Tpkkxy ec Irxyq => Number of Cards  > Xzjntzu Agkk => Release Date  > Rvlpnhwby => Languages  > Oigcbhb Zueiznc tut Dgdk Ycbbnd => Initial Concept and Game Design  > Ldlje Nqjk Ukngpg hda Jvbzjxitukz => Final Game Design and Development  > Vtbjrlo => English  > Gqyrehrik zt => Available in  > Wmxlauo Vrifq => Booster packs 
91,This is the code: WAS NVKVAFT BY AAKAT TXPXSCK UPBK TXPHN OHAY YBTX CPT MXHG WAE SXFP ZAV FZ ACK THERE FIRST TXLK WEEK WAYZA WITH THX    [This]http:iimgurcomGSK31v3png is the letter frequency chart I made   It looks a bit off to be a substitution but none of the other ones check out either Would anyone like to take a crack at it?
92,I dont usually frequent this subreddit but I have a few questions about studying cryptography Im just finishing up my first few quarters of college about to transfer out and Im wondering what classes would best prepare me for courses in crypto   Im not even sure what major really studies cryptography I cant do any more higher math or cs at my current college so I guess Ill prepare for my next quarter after transferring What level of csmath is used the most? Are there any good intro books into cryptography?
93,The tunnels under UT are something of a legend among students and I came across a story [here]http:tynancomthesecrettunnelsunderut about some students exploring them In particular they found [this]http:oldtynancomcodeorigjpg code on one of the walls It reads:  P D G H M P D G  P H M W M L Y W O  O F F 6 I M U S S G  P  Forgive me  can anyone figure this out?
94,I ask this because Im almost certain there are ways to abuse cryptography Where can I read up these restrictions?      EDIT: After some fairly nonextensive googling I found this http:wwwbisdocgovencryptionquestion2htm   Basically explains what my limits are for Symetric Asymetric and eliptic encryption
95,Im working with a witness encryption scheme based on multilinear maps that will probably become problematically expensive Ive read several papers playing with the concept of witness encryption but havent encountered any implementations or efficient proposals   Does anyone know of an implementable WE scheme?
96,Understanding really something means that you need to look at how it was created and how it has evolved  Blockchain technology was not created out of nowhere or overnight from an anonymous crazy inventor called Satoshi Nakamoto as some may believe It was the outcome of collective human innovation through a very strange set of circumstances that would set the setting stone for a new decentralized movement and a new and better concept of money To grasp ahold of the origin of Bitcoin and the Distributed Ledger Technologies or plainly laid out Blockchain in modern online literature one has to look at the history and the combined influence of 4 elements Cryptography Open Source Software Peer to Peer Sharing Networks CryptoEconomics     Part 1  Introduction to Cryptography  Cryptography is about solving the problem of transmitting information fast securely and covertly to an audience The problem arose as new technology increased the potential of communication and the danger from information being stolen In the 1930s and during the World War II encryption and cryptography boomed as a result of military research and development that would provide a competitive advantage and eventually greatly assist by breaking almost every German and Japanese code Formal information security and electronic surveillance organizations would then be born and continue to this day such as the NSA    [Military Enigma machine model \\Enigma I\\ used during the late 1930s and during the war; displayed at Museo scienza e tecnologia Milano Italy]https:iredditej99e9wmfgj11jpg    Pioneering cryptographers were James Ellis and Clifford Cocks with their public key encryption idea An encrypted message would contain the key that would enable unlocking the encryption however the idea was not at that point feasible as it entailed a public communications network such as the internet as a foundation These systems were not yet available to the public in the 1970s  Additionally David Chaum was the first to propose cryptocurrency in 1983 in a paper called Numbers can be a better form of cash than paper as well as other ideas like untraceable electronic mail digital signatures and digital secret identities     The Rise of the Cypherpunks  With the emergence of the internet by the 1990s a new movement called Cypherpunks was born These people wanted to use the encryption tools developed by the militaryindustrial complex to protect individuals and their privacy  In early 1991 a US Senate legislation had a proposal that would force electronic communications service providers to hand over individuals private messages A little known programmer called Phil Zimmerman decided to develop a tool that would help individuals freely communicate on the internet Concerned that the American government would soon require service providers to turn over its users communications Phil developed the free software known as [Pretty Good Privacy]https:wwwbitcoinwednesdaycompgpkeysigning or PGP so that individuals could encrypt the contents of their own messages texts and files PGP quickly became the worlds most popular emailencryption software and one of the worlds first examples of public key encryption to gain any kind of widespread adoption It was notably used by Edward Snowden to secretly transfer classified documents from the NSA to journalist Glenn Greenwald in 2012    [NSA whistleblower Edward Snowden in a still image taken from video during an interview]https:ireddit01g1li6rfgj11jpg    In late 1992 Eric Hughes Tim May and John Gilmore invited twenty of their closest friends to an informal meeting to discuss programming and cryptographic issues This meeting was then held monthly at John Gilmores company Cygnus Solutions and as the group grew they decided to setup a mailing list to reach other people elsewhere and the Cypherpunks were already growing in numbers The ideas and concepts shared in this mailing list varied from cryptography mathematics computer science and political as well as philosophical debates with privacy being one of the main founding principles   Privacy is necessary for an open society in the electronic age Privacy is not secrecy A private matter is something one doesnt want the whole world to know but a secret matter is something one doesnt want anybody to know Privacy is the power to selectively reveal oneself to the world  Early attempts of anonymous transaction systems that would introduce game theory and incentivised behaviour was the Hashcash in 1997 by Dr Adam Back which was a system to prove that some computational power was spent to create a stamp in the header of an email acting as an antispam mechanism a concept that might sound familiar to the proof of Work use in Bitcoin  In 1998 Wei Dai published his proposal for BMoney which included two methods of maintaining transaction data one in which all participants hold a separate database or ledger and a second in which a specific group only holds the database and are incentivized to act honestly as they have deposited their own money into a special account and stand to lose it by acting dishonestly also known as the Proof of Stake method Ethereum is one of the cryptocurrencies considering to move to this method of transaction verification since it provides efficiency benefits  In 2004 Hal Finney created the Reusable Proofs of Work based on the principles of Hashcash which were unique cryptographic tokens you could only spend once but were limited to validation and protection against double spending from a central server In 2005 Nick Szabo gave his own proposal for BitGold a system which units would be valued differently based upon the amount of computational work performed to create them    https:iredditkx6psm0vfgj11jpg  Finally in 2008 Satoshi Nakamoto a pseudonym for a stillunidentified individual or individuals published the [bitcoin whitepaper]https:bitcoinorgbitcoinpdf citing both hashcash and bmoney addressing many of the problems that the earlier developers had faced including double spending The bitcoin white paper attracted a lot of criticism from sceptics but Satoshi moved on despite the critics and mined the genesis block of Bitcoin on 3rd of January 2009  See you in the next [article]https:wwwredditcomrcryptographycomments9cmua7the_evolution_of_distributed_ledger_technologies  I think thats enough condensed knowledge for one article  In the following article well look at Open Source Software and study its influence in the development of Blockchain Technologies   End of Part I  Originally published via Steemit: [https:steemitcomcryptography@universalcryptotheevolutionofdistributedledgertechnologiesorblockchainpart1of4]https:steemitcomcryptography@universalcryptotheevolutionofdistributedledgertechnologiesorblockchainpart1of4  Sources:  [https:enwikipediaorgwikiCryptography]https:enwikipediaorgwikiCryptography  [https:enwikipediaorgwikiEnigma\_machine]https:enwikipediaorgwikiEnigma_machine  [https:wwwactivismnetcypherpunkmanifestohtml]https:wwwactivismnetcypherpunkmanifestohtml  [https:wwwbitcoinwednesdaycomspeakersphilzimmermanncreatorpgpcypherpunk]https:wwwbitcoinwednesdaycomspeakersphilzimmermanncreatorpgpcypherpunk  [https:enwikipediaorgwikiPhil\_Zimmermann]https:enwikipediaorgwikiPhil_Zimmermann  [https:wwwcoindeskcomtheriseofthecypherpunks]https:wwwcoindeskcomtheriseofthecypherpunks  [https:enwikipediaorgwikiFirst\_Amendment\_to\_the\_United\_States\_Constitution]https:enwikipediaorgwikiFirst_Amendment_to_the_United_States_Constitution  [http:wwwhashcashorgpapersannouncetxt]http:wwwhashcashorgpapersannouncetxt  [http:wwwweidaicombmoneytxt]http:wwwweidaicombmoneytxt  [https:bitcoinorgbitcoinpdf]https:bitcoinorgbitcoinpdf  [http:wwwgwernnetdocsbitcoin2008nakamoto]http:wwwgwernnetdocsbitcoin2008nakamoto  [https:mediumcomswlhtheuntoldhistoryofbitcoinenterthecypherpunksf764dee962a1]https:mediumcomswlhtheuntoldhistoryofbitcoinenterthecypherpunksf764dee962a1
97,Hello cryptohumans  I have a program which generates data that will be signed using a new brandnew cryptographic key each time it is run    The user will then distribute the signed data with the public key and keep the private key  So I need to generate publicprivate key pairs  I am currently using RSA [my code] https:githubcomarthasharthashblobmasterpythonarthashutilpublic_private_keypy just because it was very easy to do but there are many other choices and Im not even sure what questions to ask  Im currently using the Python [`cryptography`]https:cryptographyioenlatest module so it would be most convenient if a good solution were some cryptographic scheme that that module already supported  Thanks in advance
98,Some say its fundamentally broken and suggest to look for better solutions Some says its not broken and only some of its implementations are broken There seems to be experts on both sides
99,as the title says im just wondering if anyone knows if theres still a cypherpunk mail list or anything like it still in existence??  and if so can someone fill me in??
100,So a new video released by Ahoy:  https:youtube_7X6Yeydgyg A long video but a good watch revealed the true nature of the video game myth of Polybius which by his words was a game page made by a man named Kurt Koller upon emailing him he believes that the page where the myth started was infact a complicated Polybius Cryptogram made by Kurt Koller if this is solved it could end the 40 year myth of Polybius  The website is wwwcoinoporg on Polybius and is most likely a cryptogram I myself do not know cryptography and I am asking in hopes that we can actually solve it  
101,The thing is is that me and my friend have developed a prototype for a Post quantum DiffieHellman key exchange replacement However due to this being a key exchange and not a cipher I was wondering if it would be accepted for consideration as there are symmetric ciphers that could be used if a secure key exchange is made  Thank you
102,In [this page]https:safecurvescrypto D Bernstein and T Lange classify secp256k1 as not secure Why is it so?  This curve is particularly relevant because it is used in the bitcoin protocol  
103,I used to study mathematics and now Im interested in mathematical cryptography and studying it However I do not have much coding skills I didnt have problem till now since almost all cryptography is math but is it ok for me to keep studying or would you recommend to learn python or sth?
104,I am a US citizen flying back after a trip to Bangladesh soon and I am considering keeping an encrypted container on my laptop Will they hassle me about it? Do they even go through your data at airports? I know that they can but is it a required practice random check or something that they do if motivated to?  Thank you
105,Im looking at setting up whole disk encryption on my desktop as an experiment in learning how to manage a secure system  Im not really trying to hide anything but with recent revelations about the goingabouts of the NSA and other organizations I figured itd be a useful skill to learn about secure data storage transmission over a network etc  TRIM is a useful wearleveling technique for SSDs which lets the drive know which sectors are unused on the drive so it can optimally balance writes over the whole disk  There is a massive warning in the Arch Linux wiki that TRIM can reduce the security provided by whole disk encryption  An article was linked http:asalorblogspotcom201108trimdmcryptproblemshtml and two of the main comments were that it gives a wouldbe attacker information on what sectors of the disk are used and which sectors are not used an example was provided to discover the hidden plaintext devices in the encrypted volume and what filesystems they used and that it potentially leaks information from the cipher text device  Im a little unclear on this comment  are we talking about cryptanalysis yielding information like filesystem types or are we talking about plaintext leaking?  I wouldnt be concerned with people seeing anything from the previous filesystem the only sensitive information contained there was one of my old SSL private keys    So my question is how does knowing what sections of the disk are or arent used represent a significant vulnerability in the security of the disk?  Im aware it could reduce the problem size of the decryption and that leaking FS info might give some known plaintext but dont modern disk encryption techniques use methods to make knownplaintext attacks far less successful?  Id like to use TRIM to lengthen the life of my SSD array and Id probably enable it anyways for my personal rig but I just wanted to know about why it poses a risk 
106,I have a password with sufficient entropy created using diceware  My reasoning for why I would want to do this is as follows let me know if Im thinking about this properly: To protect my computer and files my hard drive is fully encrypted To guard against the possibility of hard drive failure I use a clientside encrypted cloud backup service that has its own highly entropic password  However if my hard drive fails I will need access to this backup but my keepass database is stored on my hard drive  Because the keepass database should have bestavailable encryption I believe it is safe to store on my google drive so that I can access it if my hard drive fails  Is this an unnecessary risk?  Is there a good alternative given my goals of encrypted HD and clientside encrypted cloud backup?
107,source: [Biryukov Alex and Dmitry Khovratovich Relatedkey Cryptanalysis of the Full AES192 and AES256 \nd\: n pag Web h]https:cryptoluxorgimages442Aesboomrevisedpdf  Related key attacks have been discovered that can reduce the computational complexity to crack AES256 down to 2^995  This really concerns me I dont think AES supports keys larger than 256 XTS uses a 512 bit key but splits it into two keys one for AES and one for the tweak  Apparently for some reason very technical and mathematical in nature AES192 can only be reduced to 2^176 suggesting that AES192 may actually offer better security than AES256  The author of the paper wrote this in his conclusions paragraph:  >We presented relatedkey boomerang attacks on the full AES192 and the full AES256 The differential trails for the attacks are based on the idea of finding local collisions in the block cipher We showed that optimal keyschedule trails should be based on lowweight codewords in the key schedule We also exploit various boomerangswitching techniques which help us to gain free rounds in the middle of the cipher However both our attacks are still mainly of theoretical interest and do not present a threat to practical applications using AES  I dont know if that last part should make me feel better or what Im comfortable with 2^176 but 2^995 seems a bit sketchy with computing power growing at the rate it is    
108,Nobody knows how to replace the tool nobody knows alternatives for it Are there no crypto specialists who would love to solve this problem for the whole world with transparency at the level of typical open source software?
109,Im a Senior in high school right now and I have quite a bit of computer science experience I also have always loved math and compsci and Im thinking of double majoring in math and compsci in undergraduate school followed by probably a masters or doctorate in some sort of mathematics  Ive been looking into cryptography for a while and I want to learn more More specifically I want to go very deep into the math and theory behind cryptography Currently I am starting the Coursera Crypto I Stanford course and Ive gone through everything in KhanAcademys journey into cryptography topic  Currently Im in AP Calculus AB because that is the highest level of math my high school offers However Ive already learned the material that this class covers I had to work on it last summer for my calcbased physics class and Im working on the sorts of things covered in a Calculus II course I only mention this to make the point that I enjoy learning outside of school and Im looking for books or other materials to teach me math and cryptography outside of school  What kind of math should I learn to help me with cryptography? So far Ive heard Prime Number Theory and Modular Arithmetic mentioned mostly Furthermore what are some resources that you folks would recommend given the above information? Im looking for crypto resources as well as resources covering math that is useful in crypto  Bonus more minor question: its college application season and Ive already applied to a few colleges but Im still interested in discovering any schools that would help me in my mathematical cryptographic and computer science endeavors Id appreciate any recommendations of schools that you have attended or heard a lot about  Thanks
110,I believe I have read somewhere that high CPU usage from different tasks while creating cryptographic keys strengthens them because the values from the number generator get more random Is this true or doesnt it make any sense at all? Unfortunately I cant find the articlepost anymore
111,Thats how [AWS version 4 signatures]http:docsawsamazoncomgenerallatestgrsignaturev4exampleshtml work and it feels quite weird  Is that simply because telling people to run:   hmachmachmachmackey arg1 arg2 arg3 arg4  Is easier than telling them to implement some sensible concatenation:   hmackey safeconcatarg1 arg2 arg3 arg4  especially when arguments could contain arbitrary binary data in which case safeconcat function would need to do escaping or is there a deeper reason for it?
112,Im a tad fascinated with codes and ciphers in my spare time since i was a kid Ive been making my own constructed alphabets over and over again hundreds total for sure ever since elementary school Encrypting my notes in my eyes was more badass than going skateboarding with the others  But as im in engineering and not in any related faculty ive always thought to myself i should send a message in my code to some university see if they can crack it  Im familiar with the usual monoalphabetic substitution and viginaire cipher but not the more modern publicprivatekeything hash and all that  My question: A code like the one used by Queen Mary queen of Scots but far more elaborate; can it be cracked? A monoalphabetic substitution for consonants   a hundred special characters for common doubles th gh tt nn    a hundred for common triples   300 for most common words  vowel sounds differentiating between verbal sounds aka: ea in lead and ea in earth etc for a total of over a douzen different vowels as diacritics  Could it be cracked without the key?  Thanks in advance
113,Im working on a project involving cryptanalysis of a symmetric encryption algorithm will post details if requested and I need to figure out which methods are applicable I found some research papers on the topic but theyre completely indecipherable to me isnt that ironic  or perhaps exactly what youd expect? One of the methods we are considering is using an integral attack but Im not quite clear on how this functions The wikipedia article is the only explanation Ive found in laymens terms and its missing a couple details that are necessary to actually perform one on a particular cipher  Note this is for a high school science fair project so Im not exactly doing cutting edge research here I also need things explained in a way that a firstyear calculus student can understand :V  Thanks
114,I just got a Twitter bot up and running but now Im wondering why I need so many keys and tokens in my code   TwitterAPIconsumer_key consumer_secret access_token_key access_token_secret  These four codes are 22 42 50 and 45 alphanumeric characters  Id have thought that my Twitter account name and a 20 character alphanumeric would be more than enough Is there some crypto logic here or is it just a weird programming decision?
115,I tried to sign up for an account with a VPN provider tonight pro xpn the signup form rejected my chosen password because it was too long I had picked 20 characters and it thought 12 should be the maximum   I was under the impression that is you properly salt the actual length of the password should be irrelevant should I take this to mean they are not properly securing their database? 
116,Im new to encryption but have always been fascinated by it That said Ive come up with an idea for encryption that could encrypt anything into superficially reallooking text  Ive coded the encryption side but not the reallooking text side due to time constraints Weve just had our third baby :D   Im just wondering how much interest there is in this sort of thing and if I were to post the details once I get everything sorted out what format people would prefer to see it in  Ie Source code on git hub examples algorithms pseudo code etc   Let me know what you think and Ill try to make some more time to get this finished  Thanks for reading
117,Ive got an SD card Im using to store my Bitcoin wallet on and I cant get it to mount It seems the only possibility is that I somehow manged to mistype my password twice Is there any way that I can brute force the volume based on the password I meant to type trying alternative capitalizations characters in a switched order helloworld > ehlloworld hleloworld helolworld hellwoorld hellowrold etc or anything else like that?
118,Im an undergrad working as a student programmer for the cryptology research group on campus  My bosses are all PhDs and the fewer questions I ask and the more I figure out on my own the longer Ill probably be able to keep my job  One of my bosses there and his grad students do a lot with matrices and linear algebra  Im trying to teach myself linear algebra now but I would really like to know just a basic idea of what theyre doing so that I can best support it when Im writing code or debugging their code  So this may be a broad question but what is used for some basic examples would be awesome  I know some of it has to do with lattices I just know the word Im trying to understand what that is and subspaces kind of understand this is a subset of a domain of the plane R^n but still shaky
119,Are there any tools for basic cryptography analysis and attempt various attacks?  I imagine a field where you can paste or load the encrypted text  A possibility of trying out a bunch of pre configured solutions and the ability to add new algorithms and test them  and of course  a field that shows the result of a transformation   I can write specific apps for each but I would love to have a tool like above
120,Would any of you cryptography masters be willing to lend a hand in solving a numberstationesque puzzle from one of the worlds finest electronic musicians? Seek out the 6s puzzle @ rboardsofcanada We need help
121,The woman who had my job before me left [this document]https:docsgooglecomdocumentd185Xbb9wcFX39sMe9LrYdmyQAqda6qoqWy7A3tDkYSMedit?usp=sharing on the desktop of her computer entitled CODE  She left lots of other strange writing and stories and Im interested to know what this might say  Any help decoding it would be greatly appreciated thanks  
122,We were given this today as a hint to this years FIRST robotics game Full text below: this could literally be anythingor nothing   Game Hint 3  31 88274153 622341415326  412383975388 9788533197  31 262383835388 332341415326  93276426238397 995323979397
123,Hello again Reddit  I recently posted [here]http:wwwredditcomrcryptographycomments14jxkhwould_anyone_mind_trying_to_crack_my_algorithm_id to request some insight into whether or not my algorithm could have any sort of reverse engineering provided on it Its deleted so that Im not spamming the forum but you should be able to access it by the link  Ive updated the algorithm and posted it [here on pastebin]http:pastebincomw6tck25C The algorithm is written in PHP since the site Im developing it for is PHP  To see if this algorithm is as secure as I believe it to be Im posting the algorithm itself as well as two challenges In the primary challenge there are 50 ciphers provided each of which says the exact same thing and uses the exact same salt Tell me what the message says You can find that challenge [on this pastebin]http:pastebincomVkpMFGYp  The second challenge gives you more information It provides you with the text used to generate the cipher and expects you to identify the salt that was used This challenge provides 250 codes to crack and the salt used is identical for all 250 codes  You can find that challenge [on this pastebin]http:pastebincomNWbucxv1  About this Algorithm: Note: same text as in the first link  This algorithm is designed to be impenetrable not because of the time it takes to force through it but instead because of the uncertainty when trying to decipher it When the algorithm creates the cipher it encodes it with a completely random minisalt that pads each character in the content  This minisalt is passed along with the code which would enable it to be deciphered at the other end However the private salt is then padded over the public salt with the purpose of eliminating any certainty when attempting to reverse engineer the cipher   A cipher is never consistent when encoded but rather can be a variety of trillions of different possible codes Even the creator of the original cipher cant know or predict how the algorithm will generate the final result This means that a code created a million times may be different each time and the corresponding decryption will be split into even further possibilities Though every possibility can be unpadded there is no certainty once its unpadded   Considering the following ciphers that have been created:    Hello How are you? ::: `0k2tJ8d^sU6\bk6M>]}PmZVB  Hello How are you? ::: 0}lRQ2dL\`nJyC]jFR8Qfd{O64J9wYm  Hello How are you? ::: ZCSArfQ5x[h;IEVmRN}kz8zmZ}P  Hello How are you? :::  ;`CvOEkD}}6Y9eY9QlWHKRd8U8kF  Hello How are you? ::: M?sbVy[Lqiakj\ tr~h@lG{uzrqASe{  Hello How are you? ::: ;QASb{mEllD>F?T^>\UcB^Zvx~LcMtK  Hello How are you? ::: <1<TJ]Fq[]>Zve0{~FGlcraYDU19NO   Each of the ciphers above begins with Hello How are you? and each uses the private salt jV30L[DS?dCs Yet despite these consistencies each cipher was generated into a different result This lack of consistency is the core principle in the algorithm To reverseengineer the cipher you need the public minisalt provided in these keys which is currently padded after having affected the ciphers afterward   As always if the reverse engineer knows the private salt he can reverse the cipher
124,Hello fellow redditors  Let me first say that Im not a cryptographer Im just a programmer However Ive had an idea for cryptography since I was in 10th grade that convinced me that I could create a secure cipher But every time I read anything on cryptography everyone always says Dont use your own cipher it will be insecure and youre a fool  I can see how that might be the case for many ciphers but Id be honestly shocked if the cipher I designed falls into that category I know thats a bold claim considering theres actually professionals in the field that understand all of this stuff but perhaps due to my lack of experience in the field Im honestly baffled how anyone could get through this  As of yesterday I have finally had a potential use for twoway encryption for my site so I finally decided to make an insecure prototype of the algorithm So Id like to put my theoretical claim to the test Saying its secure is one thing  actually being able to stand up to people who know what theyre doing is another  So I created a database dump of 250 twoway nonsalted ciphers The text used to generate the ciphers is included as well as the cipher itself General details about how the cipher works is also included  Is there anyone here who can even do some degree of reverse engineering on this? Heres a final cipher without text provided:  |g4AuWIX1siQXA6~yp1h}4mddQ[{97U`v[rX3zAdl;amp;\S4  And heres the dump of text on PasteBin: [Ciphers]http:pastebincompat3D7wK  If anyone needs more text dumps or has testing questions let me know I can provide more if necessary
125,|:||:||::||:|:|:::| |:|:|:|::|::| |:|:|::|:| |:|:| |:|| ||::|::|:|:|:| |:|:|::| |||:|::|:::|:||::| ||| |:|:|:|:|:::||:|:| |::|||:::| ||| |:|::|:|:| |::|::|::| ||:|| |:|:||::|  ||:|||:|:|:| |:|:|::|:| ||:|:|:|::::|||::| ||::|:::| ||:||:::|:|:| ||| |||:|:|::||:| ||:::|::|:::|::|:|::|  |:|:|:|:::|||::| ||:|:|::|:|:|:|::| |:|::||:::|||:|:::|::|:| ||:|   ||:| |:|:|::| ||:| ||:| ||:||::|| ||::|::|:|| ||:|:|::|::::||:| ||:|:|:| |:|::|| |::|:|::| |||:|::|::|:|:| |:|:| |:|:|:|::||::||::|:|:|::::|::|:::| ||:::|:|:| ||:|:|::| ||::|:::| ||:||:|:||:|:::|:| |:|:| |::|::|:|::| || |||:|:| ||:|:|:| |:|| ||:|:|:|  |::|:| |:|:| |:|:|:| |||:|:| |||:|:||| |:|:|:| ||::|:|:|::||::|:::||::| |::|:|:|::|| ||:|:|| ||:|::|:| |:|:| |:|:|::| |:|| ||:|:||:|:|:| |:|:|::|:::| ||:|:::| ||:::||:| || ::|:|:| |:|::|::|::| || |:|:|:|::||::|:||:|::|:::| |:|:|::| |:|:|:|:|:::| ||::|:::|   |||::|:| |:|:| |:|:|:|::|:| |||:|::|:::|::| |:|:| |:|:||| ||:|:|:::| |:|:|::|::| |:| |::|:|:|::|::||:|:::||::| |:|:|::|:| ||:|:|:::|:|:| |::|::|:|::| ||:::|::|:::|::|:|::| |:|||::|   ||| ||:| ||||:|::|| ||| ||::|:|:::|::| |||| |:|:|  ||::|:::| ||| |:||:|:| ||:||:::|:|::| |:|:|::|:::| |:|::|::|:|::| |||:|::|::|:|::|:::| |::|::|||::||:||:|:| |:||:|::| ||::|:::| ||:||:|::|:|:|:::|:|:| |::|:|:|::|::|| |:|:| ||:|:|:::| |:|:|:|::| |:|:|| |:|||| |:|:| ||:|:|:::| |:|:|:|:| |:|:|| |:|||| |::|::|::|::| || |::|::|:|:|:|
126,Hey guys Ive recently gotten into cryptography but obviously only the very basics Im talking about things like Bifid Cipher and Playfair Cipher  Are there any good books that start from the very beginning of cryptography and go slowly further into more advanced techniques?  EDIT: After digging Amazon I found a book called The Code Book anyone recommends it?
127,Hello   I have watched the movie Imitation Game multiple times and still couldnt understand how Alan had a click from the German weather forecast at 0600 daily? Please explain 
128,I read recently that the Riemann hypothesis may be proved [link]https:wwwnewsweekcomriemannhypothesismilliondollarmathmysterymichaelatiyah1146244 While it has not been peer reviewed yet the author of the proof has an impressive resume  I have read before that proving it would be disastrous for cryptography but how? There are already other branches of mathematics that have proofs that start by assuming the Riemann hypothesis is true If having it would make prime factorization faster why cant we just assume it is true and know that it may fail every now and then?
129,hi Everyone please correct me if im wrong for my understanding for the man in the middle attack used in a variant of diffie hellman key exchange   am i right to say that a protocol is susceptible to the man in the middle attack if each participants is having their own private key of yP and public key of g\^yP mod p and   A > B : g\^rA mod P  B > A : g\^rB mod P  x200B;  rA and rB  are random values each session This can be attack because the protocol does not authenticate participants    am i right for that understanding ? and an adversary can just participate in that key exchange ?
130,TL;DR Changed my GPG passphrase to something very simple as a test half of which I probably know half of which I forgot Now trying to brute force it with simple bash commands  Recently installed GnuPG to mess around Was messing around with the features Successfully changed the passphrase Unsuccessfully remembered the new passphrase  I dont have any important files encrypted with this key so its not life or death by any means Unfortunately I failed to download the revocation certificate before changing the passphrase I was really just messing around so I didnt take my usual steps with making and storing passwords  I wrote the passphrase down in a text file Ironically after messing around a little more I decided to encrypt that file and delete the original I know have a \`testtxtgpg\` binary blob containg the passphrase staring me in the face  Now the good news: I am 90 sure I used a super simple passphrase Just 2 words from the 7776 word \[EFFs Diceware Worldlist\][https:wwwefforgfiles20160718eff\_large\_wordlisttxt]https:wwwefforgfiles20160718eff_large_wordlisttxt Some more good news I am 95 sure I know one of the two words 70 sure its the first  Looking around in some other places I got this script to use assuming the first word is apple:      for i in cut f 2 eff_large_wordlisttxt ; do         echo applei | gpg batch passphrasefd 0 d testtxtgpg  break     done  This user who gave me that script said it would take about an hour to run through mine seems to try every word in about a minute to no success Is it even working right?  Again this is no major problem Just a mistake Im taking as an opportunity to learn about brute forcing  Any tips?
131, Im curious if anyone knows the answer to this because I certainly dont but it seems like a fun thought experiment because things like this have a way of illuminating just how far computers and cryptography have come since the days of Enigma let alone Caesar  Suppose two people each created keypairs and shared the public keys with each other so they can send encrypted messages back and forth Now suppose they had to do the encryption and decryption by hand sit down with pen and paper and encrypt a message from Alice to Bob and for Bob to decrypt the message back to plaintext  Assume any key length you like 2048 or 4096 or whatever Im just curious whether its technically possible just super impractical or if its one of those things that is on the order of heat death of the universe for a human to do  What do you think?
132,Im new on this and Id love to get to understand them down to a mathematical level
133,I have written a program to encrypt video files however I can not open it after encryption I want the output of the encryption to be able to play the file with encrypted bytes ie Should be able to play the file in its encrypted form like we do forpng file by keeping their header intact 
134,Beginner cryptographer here Will this work? And if not why not?   Step 1: Both millionnaire hash the numerical value of their wealth and convert the number to binary  Step 2: Millionaire A creates 10 bloom filters He fills each of them with random nonsense Then he updates each of them with the hash of his wealth This set of 10 bloom filters is given to millionaire B  Step 3: Millionaire B compares each bloom filter with the hash of his wealth and writes down how many bits correspond between the filter and his hash This gives him 10 numbers He then mixes up the 10 numbers and gives them to millionaire A this is to create a layer of obfuscation  Step 4: Millionaire A compared millionaire Bs answer with his what he would get with his own hash If they are the same he is reasonably sure that the two numbers were the same If not he knows for sure that they arent  Step 5 The previous steps are repeated but this time it is millionaire B that creates the bloom filters  Step 6 Each millionaire tells the other one if yes or no he thinks the numbers are the same based on the previous tests If they both say yes they are in all probability the same numbers therefore they have the same amount of money If not they dont have the same amount of money  Full disclosure: This isnt my own algorithm but something I found on a forum
135,Even though quantum computers are still far from the realistic requirements to break current algorithms it is good to know that researchers are already thinking of post quantum algos and these ones are only in the round 1  https:csrcnistgovProjectsPostQuantumCryptographyRound1Submissions
136,link: https:arstechnicacominformationtechnology201310arelativelyeasytounderstandprimeronellipticcurvecryptography  Im trying to understand elliptical curve cryptography but I got stuck in the beginning already:  >It turns out that if you have two points an initial point dotted with itself n times to arrive at a final point finding out n when you only know the final point and the first point is hard To continue our bizarro billiards metaphor imagine that one person plays our game alone in a room for a random period of time It is easy for him to hit the ball over and over following the rules described above If someone walks into the room later and sees where the ball has ended up even if they know all the rules of the game and where the ball started they cannot determine the number of times the ball was struck to get there without running through the whole game again until the ball gets to the same point Easy to do hard to undo  Shouldnt this be easy to do easy to undo? You just have to run through the whole game again So the decrypting attacker has to do the same amount of work as the encryptor  Further on in the article I get stuck again Am I such an idiot or are there better explanations on ECC available?
137,The character set 123456 can be perfectly random if the process that derived it was random  but that still wouldnt make for a good password Should it be more common practice for sensitive material generated by fantastic random processes to be verified for randomness by for example attacking it using common hacking tools dictionaries brute rainbow tables etc or similar before using it?    _ the word random is being used loosely in a practical sense
138, Hi Crypto experts  Could someone please clarify my question I have to send some very personal secret files to my friend who is far from where I live  Im not very familiar with cryptography concepts so I request please suggest me if my below approach is secure or not  1 Encrypt files with Peazip or 7Zip with long password   [ I read somewhere I internet that Peazip pea extension is secure as it has various options to encrypt files with EAX: AES 256 CTR  OMAC EAX: Twofish256 CTR  OMAC EAX: Serpen256 CTR  OMAC etc which one should I choose for secure file sharing or simply is 7Zip encryption will suffice?]  2 Share the password to my friend in Signal Messenger via text or call within the app so that he can decrypt the archive that I have sent I read that this messenger app is also e2e  I read about vera crypt but we both are very not technical hence instead of creating containers etc I believe that its easy for us to create encrypted archives are convenient for us   Please guide me is my approach correct way of sending my personal data  Thank You Regards
139,Hello  Ive been reading that securing electronic voting is an arduous perhaps impossible task  I had a simple idea to ensure verifiability Could you explain to me why it wouldnt be enough? I imagine im not the first to come up with the idea  If one after voting had a randomly generated unique receipt token and if the list of votes was published with the given tokens wouldnt this enable the voter to ensure his vote was indeed taken in to account ?  And if the voter had doubts that perhaps a token was issued multiple times that voter could publish their own token or share it with others so that a token issued multiple times would be recognized easily  Is there something wrong with this approach ?  sorry if this is not the right place to post this please advise if there is a better sub
140,Ever since I was little Ive enjoyed solving puzzles and a few years ago I wanted to start learning it but never had time  now I have time  and would like to know some info that would help me study it  for example what book should I buy  This year Ive entered a college for IT and would pursue learning cryptography that is linked with that feild   If anyone replies thanks in advance
141,I dont dabble much into the field of cryptography much but I read something somewhere about private key encryption I found that I understood the basic premise this made decent sense to me https:blogvrypannet20130828publickeycryptographyfornongeeks but despite extensive googling have no idea how it actually works most of the examples were written in Java My main issue with my current understanding is that it seems to me that it would be too easy to work backwards: if everyone has the same public key having a private key would be meaningless because someone else with the public key could simply look at the message and see what inputs yield the same outputs through the public key Im looking at this from a pen and paper perspective if a digital aspect is relevant  Thanks for helping me out edited for grammar
142,Im trying to find the weakness in a very simple form of symmetric cryptography  Using a shared seed value generate a random sequence of values in the range [0 256      randomseed123     rand = {84 219 37 0}  Perform addition mod 256 on each plaintext byte with the respective random value      Enc[n] := Plain[n]  rand0 256  256  This is the ciphertext To decipher generate the random offsets via the shared seed and perform subtraction mod 256 on each      Dec[n] := Enc[n]  rand0 256  256
143,Hi Im trying to understand how this system works  I already read the [Wikipedia article]https:enwikipediaorgwikiPublickey_cryptography and Im a bit confused  A clientserver example:A private key is stored on a server and the public key has been distributed to users via a phone app  Before sending data to the server the phone app uses the public key to encrypt the data but then how is the different private key used by the server to decrypt it?  Or is the private key a combination of the public and private keys and if so is the public key padded out to the full length key before encryption?  Finally is it feasible to have a different public  private key pair per user of a system?  Thanks
144,I dont know if this is the correct place to post this but have any breakthroughs been done on AES256 or lower and is it likely that this cipher can really protect data for thousands of yearsassuming you have good entropy  Tl;dr is there a high chance we may have breakthroughs on the algorithm its self within the next 5060 years? Or is AES not breakable if it is truly random?
145,Had a few queries from people at work today regarding the best way to store encryption keys and whilst I know of the best practices Ive never really heard of the confirmed best way to do so is there even one?   Obviously whilst the best way to store encryption keys is to not store them at all and require them to be entered whenever decryption is required; this is not feasible for all applications  My general assumption is that you should store the encryption keys separate to your encrypted data on another server implement key rotation policies and server auditing lock down the machine the keys are being stored on completely and encrypt those decryption keys with a master key that is stored on a hardware security module where possible  Is this a correct assumption or are there better ways to do so?
146,Im guessing you guys are already familiar with the algorithm so lets just say I picked these numbers:   p = 7  q = 13  n = 91  e = 5  d = 29  So the private key is 29 91 and the public key is 5 91 but its seems like you can use just one of them for both encryption and decryption:   T = 12  K = 12^5  91 = 38  T = 38^5  91 = 12    T = 42  K = 42^5  91 = 35  T = 35^5  91 = 42    T = 89  K = 89^29  91 = 59  T = 59^29  91 = 89  Why is this? Did I miss a step in the key creation? Is it because the numbers are too small?
147,Myself and some fellow students are doing some Independent Security Research on campus and trying to crack the campus paid parking system to better understand how it might work The system works like this:  You pull a ticket with a mag stripe upon entering  When leaving you take your ticket to a pay station it reads the ticket and charges you the appropriate ammount  After paying it writes some more data on the mag stripe and then gives you the ticket back  You then give the ticket to the exit machine it checks that the ticket is paid and then lets you exit  So we have used a magstripe reader to look at the data on the card Here is the data on the second track of an unpaid ticket first and third tracks are empty:  014030830300016022717200000000000037  The first 8 digits are a count of how many tickets have been pulled from that entrance machine we have seen that the large number simply increments between ticket pulls The next 2 digits in this case 03 seem to be some sort of garage code There are a few different garages on campus and each of them consistently puts the same number in this spot Then the next chunk of data is a timestamp 1602271720 translates to 2016  February 27 17:20 This is when the ticket was pulled Then there are some more zeros and then a seemingly meaningless number at the end  Now here it is paid:  014030830300316022717201602271740264  Most of the numbers have remained the same but a new timestamp has appeared directly following the first one This timestamp 1602271740 is the time at which the ticket was paid for Also the digit before the first timestamp was changed from 0 to 3 This change has been consistent across all tickets when going from unpaid to paid Finally the last 3 digits have been changed  The problem now is the last 3 digits We have tried just writing in a valid timestamp and adding the arbitrary 3 but the machine is not fooled It reported that the ticket was damaged and I do know its not because of a shoddy magstripe write I am confident that the machines are not connected on some network so they dont check some database for consistency  Theory: The last three digits are some kind of hash calculated from the rest of the data on the stripe so that the exiting machine can check that hash to ensure no foul play I hope Im referring to hashes correctly  Problem: I dont really know much about hashes or how to potentially crack them  Questions: Do you all think my theory is correct? Is it something you can immediately identify? If not what is a good resource where I can learn more about cracking this problem?  Here is some more data Ticket data coming in pairs of unpaid and paidorry for the wall of text but I hope someone might find this either easy to answer or a fun problem to crack Thanks in advance for any help
148,genuinely curious
149,Hi there I am a bit new to this and mostly asking out of curiosity Some ciphers that appear very secure against cryptanalysis has had both theoretical and practical attacks from things like cachetiming attacks and other sidechannel attacks that dont really attack the cipher itself but rather its usual implementation AES would seem to fall in this category   So how about Twofish? It uses Sboxes so in theory the execution speed should depend on the key but given how the Sboxes are generated in a complicated keydependent fashion it might not matter? Are there other known sidechannel attacks that might result in practical attacks on Twofish under realistic circumstances?
150,https:wwwsavecryptoorg
151,I did some exercise after my university course in cryptography but in those exercises of course I knew the algorithm behind  I am not asking how can I break a 4096 RSA encrypted message? but what is the real processes that is used to force a code when you dont know anything about it? Maybe some basic Caesarlike cipher used by notprofessional people at their home or maybe some gamequiz on a magazine  What do professional people do? Just try all possible techniques? From which would you start? What software is professionally used? Is there some alternative for tryitathome purpose?  In other words what would you actually do if you want to challenge yourself with some try to brick this code?
152,    There is loads of info out there about pgp and gpg but I could never find     what I wanted summarized nicely in one place This is my attempt to do that     Feedback is welcome Over the summer I want to put this into a nicely     formatted PDF using LaTeX            PROCESS OUTLINE                Create PGP publicprivate key pair          Backup public key private key and emergency private key     revocation certificate in a SECURE location          Upload public key to keyserver eg pgpmitedu     Keyservers share keys between each other so it     is only necessary to upload to one server          Download the public keys you wish to sign     Signing is a confirmation that a public key user IDemail     belongs to the person it claims to belong to and that     you believe that the private key associated with that     public key is safely kept by that person     THIS IS NOT SOMETHING TO BE DONE LIGHTLY THIS IS HOW A     WEB OF TRUST IS BUILT          CONFIRM THE KEY FINGERPRINT IN A SECURE WAY eg in person          Sign the user IDs that you trust you can sign any subset     of a users IDs Many IDs emails images can be associated     with one public key          Upload the keys youve signed back to the keyserver          Optional: You can also trust a keyID Signing a key is a     assertion of the validity of the key that is the person      with the associated private key is who they claim to be      Trusting a key is local only trust values dont get uploaded      to a keyserver and is an assertion of how much you believe      you can trust other keys signed by that person GPG will by     default trust a key if it is signed by a key you fully      trust or by three keys you partially trust Only      ultimatly trust yourself          Test sending and recieving messages           Note these commands work on Mac and Linux with both      gpg and gpg2 as far as I am aware                     CREATING A PGP KEY                gpg2 genkey           Use 4096 RSA 1      Expiration date 2 to 6 years       Enter real full name      Enter real email address advisable to use dedicated      Enter optional comment shown along with key name to others      Enter a passphrase lenth at least 12 memorableCan be changed      A long passphrase of over 6 words from more than one language      will be very resistant to brute force and dictionary attacks      but can be made easy to type and remember           BACKUP YOUR PRIVATE AND PUBLIC KEY          Export public key     gpg2 export a User Name > userpubkey          Export private key     gpg2 exportsecretkey a User Name > userprivkey          Create emergency revocation certificate     Needed if you lose access to your private key     gpg2 output userrevasc genrevoke key_user_name           NOW BACK THESE FILES UP IN A SECURE LOCATION      SUCH AS CDPAPER IN A BANK VAULT ENCRYPTED DRIVE ETC                MANAGE AND EDIT KEYS                List available public keys     gpg2 listkeys          List available private keys     gpg2 listsecretkeys          Display fingerprint of all public keys     Can be combined with listsecretkeys     gpg2 fingerprint          Edit a key     gpg2 editkey key_user_nameemail     Type help to see list of commands in edit mode                     EXCHANGING SIGNING AND TRUSTING KEYS                     Upload public key to keyserver     This can NEVER be deleted only revoked so dont clutter the server     gpg2 keyserver pgpmitedu sendkeys KEY_ID          Download public key from keyserver      gpg2 keyserver pgpmitedu recvkeys KEY_ID          Signvalidate user ID AKA public key signing     gpg2 signkey key_user_nameemail     Will ask to confirm which user IDs to sign     Can sign specific or all user IDs          Trusting keys     gpg2 editkey key_user_nameemail     gpg2> trust     Default is I dont know     Level of trust is how much you trust both their understanding     of PGP so they wont make a mistake and how much you trust     their commitment to properly validating keys     Ultimate is a special level reserved for your own key                     SENDING AND RECIEVING                 Decrypt file     Spits text out on the terminal redirect to a file to save the message          gpg2 d <file_name>           Encrypt file minimal example          gpg2 encrypt r recipient_name <file_name>           Encrypt sign specify output name      Use a to export an ascii file for copying into a text field and such          gpg2 es o <output_filename> r Recipient <file_name>           Clearsign good so others can verify creator and contents      Encrypts with your private key so only your public key can be used      to decrypt it proves it comes from you          gpg2 clearsign <file_name>          Use u <user_name> to specify a nondefault private key          Note that the keys of the sender and recipient can be seen by a third party     even if they cant decrypt the message The flag below can hid the recipient     See the examples section for more discussion          To hide the intended recepient from a thirdparty     gpg2 hiddenrecipient e r recipient_name <file_name>                EXAMPLES                Recently I was playing on online game of Diplomacy like Risk with friends     and we decided to add a crypto element Below Ill go through how we      communicated via using pgp Now of course you dont have to use gpg or the     terminal to do this but it does give you a better sense of what is going     on behind the scenes          We started off by each creating a privatepublic key pair for the country we     were playing as We didnt want to clutter key servers so all keys were      shared via text on a simple message board my friend programmed on his server               Sharing public key               Export public key     gpg2 export a User Name > userpubkey           Now make a plain text file with your intro message      Sign that file only need u option if you have a different default key          gpg2 u yourCountry clearsign messagetxt          This will output a file messagetxtasc which will have the      message in cleartext and a crypto signature proving the key     which was used to sign it          Now copy the contents of the messagetxtasc file into a message on the board     and then also copy the contents of the userpubkey and append to the same message               Proving your identity               The easiest way is to generate a key fingerprint and put that in a message     on the vDiplomacy site so we know for sure which key belongs to which country          gpg2 fingerprint          outputs something like this:     pub   1024RDB9C59CF 20150113           Key fingerprint = E03D 7518 B11E BE5C 82BE 2143 FB43 9F02 DB9C 59CF     uid       [ultimate] Austria      sub   1024R5CD5DF64 20150113          Now take and copy that key fingerprint into the vDip message board                Checking someones identity                First import their public key     Make a file named country_namepubkey and copy the key into it     Including the BEGIN and END lines          gpg2 import country_namepubkey          Now check the fingerprint          gpg2 fingerprint          Lists all keys on your keyring look for the one you just imported     and check the fingerprint against that on the vDip message board          Check the signature of the message     Copy from the BEGIN SIGNED MESSAGE line to the END SIGNATURE line     into a plain text file: file_nametxtasc          gpg2 d file_nametxtasc          You should see an output like this:     gpg: Signature made Tue 13 Jan 2015 12:45:02 PM CST using RSA key ID xxxxxxxx                                                              gpg: Good signature from user_name                Communicating               To send a signed encrypted message to a single person     create a plain text file as before with the contents of your message     save as something like otherCountry_msg1txt          gpg2 eas u yourCountry o otherCountry_msg1asc r otherCountry otherCountry_msg1txt          Now copy the contents of the newly created file otherCountry_msg1asc     into a message on the board You can make a note at the top who it is for     or just let everyone try to decrypt it          To decrypt a message     Copy the contents from the BEGIN to END lines into a text file     named something like otherCountry_msg2asc          gpg2 d otherCountry_msg2asc > otherCountry_msg2txt          Note that if the command above is used a third party can see who is talking     even if they cant read the message For example a message between Russia and     England when tried to be decrypted by Austria gave the following:          gpg2 d tempenc     gpg: encrypted with 1024bit RSA key ID D6762868 created 20150115           Russia     gpg: encrypted with 4096bit RSA key ID 7D5EF8AB created 20150112           England Anonymous     gpg: decryption failed: No secret key          This can be partially remedied by the use of the hiddenrecipeint flag     but there doesnt seem to be a way to hide the sender Of course the third     party would have to have the senders and recepients public keys for this to     work It also seems to depend some on the software being used I havent quite     figured out exactly how     
153,Im majoring in CS with a focus on software engineering Right now Im proficient in ObjectiveC and learning iOS Development Ive been really interested in learning about how to secure your code security breaches vulnerabilities in code leaks and the likes of that Maybe wold like to hack into a network Not for a bad purpose just to try it Any books or videos or courses would be awesome Im thinking of double majoring in Cyber Security or Cryptography along with my BS in CS
154,Or perhaps a better question: how will quantum computing upset computer safety?
155,I Would like to do it but it seems the challenge page is gone is there a similar challenge available? Thanks
156,Vigenres weakness is Kasiskis test and index of coincidence However if you put columnar transposition on top of Vigenre that weakness is gone The text is now shuffled and you cant search for digramstrigrams because they will give you wrong key length pattern  You also cant solve Columnar Transposition For example you try key length i and you put the text in i columns Normal Columnar Transposition is solved by matching columns with each other and counting how good the match is compared to English text digrams The best match is then the correct column order But because the text is encrypted with Vigenre and letters are substituted you wont get correct result  Is such a cipher considered very good  unbreakable or how does one attack it?
157,So weird thing today I get an email with the subject line Good day johnwlucia from an email address johnwlucia@midtownautoworkscom Totally not my place of work nor the area I live just weird Popped into my inbox on 4162014 @ 11:55AM Body of the message reads as follows:  Ratzinger as John Paul IIs successor Letter to von Meck May 13 1877 But the Bulls easily defeated the Hornets in the next three games of the series  What the hell  I looked up Midtown Auto Works its a company in California that deals in Porches and Mercedes Okay   First sentence of the message body is in reference to who would come to be known as Pope Benedict XVI okay  Second line references the history of Tchaikovskys Symphony No 4 telling von Meck she would find it an echo of your most intimate thoughts and emotions per Wikipedia  Third line just seems like a line pulled from Wikipedia as well regarding the Bulls beating the Charlotte Hornets in the conference finals in 199798  Basically I have no clue what this little snippit could possibly be referring to and it was weird to receive it so randomly from an email address I cant help but feel is illegitimate  Thoughts? Just random nonsense or is there something to glean from this?
158,Well that was supposed to be in
159,Long story short:  Found a bag under a rock against a bridge support  Bag contained:   A mirror marked 1  A slip of paper marked 2 stating Vigenere loves a good petroglyph  A slip of paper marked 3 with a recipe for Caesar dressing makes 3 servings  A page of text: http:pastebincomnN8MZFXe   My assumptions:  Its reversed its vigenere encoded its Caesar shifted by 3  Working off those assumptions Ive been unable to decipher the message  Note:  I posted a line of the text here last week and there were several requests for the full text
160,Based on a nowdeleted comment by uYourResidentRussian I have come under attack for trying to debunk what I believe to be a hoax over in rconspiracy  [This]http:wwwredditcomrconspiracycomments209es8hacked_email_from_us_army_attache_in_ukraine_for is the post in question  uYourResidentRussian asserted:   the Russian senders phone appeared to be tied to cellphone password recovery thus the title of the post hacked email is potentially factual based on the possibility of having stolen the users cellphone   the two Russian emails passed DKIM verification but as mentioned above the account has been potentially compromised   the American email did not pass DKIM verification against googles public key  What I want to know is  Is there a readily available tool easily accessed by the public such as me by which one can manually check the DKIM verification of an email such as the one in this potential  and quite likely  hoax?  When uYourResidentRussian deleted his comments I was left holding this ball as the only remaining person discussing it Id like a little help here please 
161,Ive perused several threads but not found an answer  If I put a random pass phrase into a SHA256 hash generator and then put the resulting hash into a SHA256 hash generator I should have a completely random and virtually brute force proof password right? And then if I ever forget my password I just have to remember my random pass phrase and hash it twice Right?
162,https:docsgooglecomdocumentd1VURirz8xf2Vei3b5cqmNA9gR6nMO_LYAgmoVFt89EXI  Any help what so ever would be great trying to get as many eyes on this as possible  thanks  UPDATED: Link should be public now
163,Im coming into cryptography from another discipline and as Im looking at key distribution mechanisms it seems like most of them are susceptible to man in the middle attacks unless theres a trusted third party or some sort of offline distribution of the keys  Take the certificate authority approach for example  the textbook Ive been referring to says that usually theyre being run by trusted institutions like banks or government agencies which I got a laugh out of  So what can be done to prevent man in the middle attacks if you cant trust third parties? Do we really have no other approach than that?
164,Can you explain what it is in laymans terms if possible?
165,Im throwing myself on your mercy as Im sure the answer to this is simple but I just cant get my head round it  I have an elliptic curve x^3  17 over GF43 and Im lifting points to the same elliptic curve over GF43^2  As someone pointed out in a previous post the field GF43^2  is actually equivalent to the field GF43[i] so the points in that field are composed of complex numbers abi  Now any point xy in the field GF43 when lifted will become x0iy0i in the field GF43^2  because every point in GF43 also exists in GF43^2  But I understand there are 42 other points in GF43^2  that are the equivalent of the original point also  So lets say hypothetically I have one of these other points in GF43^2  for example   623i  10  How do I then lower that point back to a point in GF43 which has only integer coefficients?
166,Im doing an oral presentation on elliptic curve cryptography and I think I have a general understanding of it What I think would be really helpful is an example of a plain text message and the steps to encrypt said message into cipher text then the decryption of this message using the key Could someone provide me with this? Thanks a lot
167,Sorry for the CAPS helps me see the letters  DESIGN NOTES:   SYSTEM PARAMETERS  ENCRYPTION INSTRUCTIONS: CREATE A MESSAGE WITH 1040 CHARACTERS  MESSAGE TEXT SUPPORTS ONLY PERIOD AND LETTERS   NO PUNCTUATION OR SPACES  ENCODING:   1040 SEPARATE SHIFT OPERATIONS  SHIFT COUNT MOD 27 SELECTS ALPHABET AND PLAIN TEXT CHARACTER SELECTS NEW LETTER              FIRST ALPHABET             SHIFT[00] = ABCDEFGHIJKLMNOPQRSTUVWXYZ;             SHIFT[01] = BCDEFGHIJKLMNOPQRSTUVWXYZA;             SHIFT[02] = CDEFGHIJKLMNOPQRSTUVWXYZAB;             SHIFT[03] = DEFGHIJKLMNOPQRSTUVWXYZABC;             SHIFT[04] = EFGHIJKLMNOPQRSTUVWXYZABCD;             SHIFT[05] = FGHIJKLMNOPQRSTUVWXYZABCDE;             SHIFT[06] = GHIJKLMNOPQRSTUVWXYZABCDEF;             SHIFT[07] = HIJKLMNOPQRSTUVWXYZABCDEFG;             SHIFT[08] = IJKLMNOPQRSTUVWXYZABCDEFGH;             SHIFT[09] = JKLMNOPQRSTUVWXYZABCDEFGHI;             SHIFT[10] = KLMNOPQRSTUVWXYZABCDEFGHIJ;             SHIFT[11] = LMNOPQRSTUVWXYZABCDEFGHIJK;             SHIFT[12] = MNOPQRSTUVWXYZABCDEFGHIJKL;             SHIFT[13] = NOPQRSTUVWXYZABCDEFGHIJKLM;             SHIFT[14] = OPQRSTUVWXYZABCDEFGHIJKLMN;             SHIFT[15] = PQRSTUVWXYZABCDEFGHIJKLMNO;             SHIFT[16] = QRSTUVWXYZABCDEFGHIJKLMNOP;             SHIFT[17] = RSTUVWXYZABCDEFGHIJKLMNOPQ;             SHIFT[18] = STUVWXYZABCDEFGHIJKLMNOPQR;             SHIFT[19] = TUVWXYZABCDEFGHIJKLMNOPQRS;             SHIFT[20] = UVWXYZABCDEFGHIJKLMNOPQRST;             SHIFT[21] = VWXYZABCDEFGHIJKLMNOPQRSTU;             SHIFT[22] = WXYZABCDEFGHIJKLMNOPQRSTUV;             SHIFT[23] = XYZABCDEFGHIJKLMNOPQRSTUVW;             SHIFT[24] = YZABCDEFGHIJKLMNOPQRSTUVWX;             SHIFT[25] = ZABCDEFGHIJKLMNOPQRSTUVWXY;             SHIFT[26] = ABCDEFGHIJKLMNOPQRSTUVWXYZ;             LAST ALPHABET   CRYPTOGRAM:  ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX YZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSHH WXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPZVXU UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKRVUIGVV STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGIWSXMFWCC QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWQUDNUCWNCGTNCDQDF OPQRSTUVWXYZABCDEFGHIJKLMOQSUWYBDFHJLNPRTVXZACEGIK MNOPQRSTUVWXYZUJLWEBVZMJRMZSOTVDGGMONYRDSACCQJYZIPO KLMNOPQRSTUJRBPZOOGCXMUAJXOLEVXVJRVBJCAOYNPFTDXNUU IJKLMNOPQIXLOGPXGMBBFVCVWPALYMOGPJZXTZIXMAJFEWMK GTRWTERROQBGUWPXQDTTBWLJFOWSJGPAQCXGAODXMEUGX FFIHLJOLRNUPXRTCVFXIZLAOCREUGXIKCMFOIQLSOURWUYXB EIYBLMWJPMPVOKVULHLVKCYSEYVCGMGYILCPCENOPQRSTUHXQPHX EKVGTALZGJKLMNOPQRSTUVWXYZABCDEFGDNJKLMNOPQRSTQMEQC DXQNDMSFWIUTZTNZDDYKTCIWFRHGCXTJHFIYECMNOPQRSTHS JSRIDBCDEFGNYXLFVTPUZBNWHXYZGFPHVFZPWWJKLMQFURKAOZ KXQRDROUCDEFGHIRZCVMCCJSDESVWXYZBPGDEFGHIEPCFWRQBCQ KZNAYPBHABDGWUZICSQMUDSWSTMCXOCZOGZDETVUNXNXNGIGV JVBZIPFQSSABCISMPVNOBDMNOBRKYGWPFAHAOUCDEFGLXMEYRAH JDUULOAAYZSPWQHEFGHIJKLMNOPQRSTUVWXYZABCDERLIXTZT   DECODING:   1040 SEPARATE SHIFT OPERATIONS  SHIFT COUNT MOD 27 SELECTS ALPHABET  CIPHER TEXT CHARACTER SELECTS NEW LETTER              THE FIRST ALPHABET             DECODECIPHER[0] = ABCDEFGHIJKLMNOPQRSTUVWXYZ;             DECODECIPHER[1] = ABCDEFGHIJKLMNOPQRSTUVWXYZ;             DECODECIPHER[2] = ZABCDEFGHIJKLMNOPQRSTUVWXY;             DECODECIPHER[3] = YZABCDEFGHIJKLMNOPQRSTUVWX;             DECODECIPHER[4] = XYZABCDEFGHIJKLMNOPQRSTUVW;             DECODECIPHER[5] = WXYZABCDEFGHIJKLMNOPQRSTUV;             DECODECIPHER[6] = VWXYZABCDEFGHIJKLMNOPQRSTU;             DECODECIPHER[7] = UVWXYZABCDEFGHIJKLMNOPQRST;             DECODECIPHER[8] = TUVWXYZABCDEFGHIJKLMNOPQRS;             DECODECIPHER[9] = STUVWXYZABCDEFGHIJKLMNOPQR;             DECODECIPHER[10] = RSTUVWXYZABCDEFGHIJKLMNOPQ;             DECODECIPHER[11] = QRSTUVWXYZABCDEFGHIJKLMNOP;             DECODECIPHER[12] = PQRSTUVWXYZABCDEFGHIJKLMNO;             DECODECIPHER[13] = OPQRSTUVWXYZABCDEFGHIJKLMN;             DECODECIPHER[14] = NOPQRSTUVWXYZABCDEFGHIJKLM;             DECODECIPHER[15] = MNOPQRSTUVWXYZABCDEFGHIJKL;             DECODECIPHER[16] = LMNOPQRSTUVWXYZABCDEFGHIJK;             DECODECIPHER[17] = KLMNOPQRSTUVWXYZABCDEFGHIJ;             DECODECIPHER[18] = JKLMNOPQRSTUVWXYZABCDEFGHI;             DECODECIPHER[19] = IJKLMNOPQRSTUVWXYZABCDEFGH;             DECODECIPHER[20] = HIJKLMNOPQRSTUVWXYZABCDEFG;             DECODECIPHER[21] = GHIJKLMNOPQRSTUVWXYZABCDEF;             DECODECIPHER[22] = FGHIJKLMNOPQRSTUVWXYZABCDE;             DECODECIPHER[23] = EFGHIJKLMNOPQRSTUVWXYZABCD;             DECODECIPHER[24] = DEFGHIJKLMNOPQRSTUVWXYZABC;             DECODECIPHER[25] = CDEFGHIJKLMNOPQRSTUVWXYZAB;             DECODECIPHER[26] = BCDEFGHIJKLMNOPQRSTUVWXYZA;             LAST ALPHABET  HERES A VIDEO ANIMATING THE ENCODING PROCESS:  http:wwwyoutubecomwatch?v=ieF3zzMO3v0
168,I am not sure if this is the correct subreddit but it is the only one I know of that this seems the most relevant to  I was helping my parents with scanning old family documents when my dad came across this [photo]http:imgurcomI7KQxvdN5B1aVP  There is some partially legible text and shorthard on the back We would like to know what the context of the photo is and would greatly appreciate if anyone could decipher the text Thanks
169,What I mean by this is that the actual encryption algorithm varies deterministically based on the key  So things like the number of rounds the order of the operations the number of operations and so forth are all determined by the key so in essence the actual encryption algorithm itself would remain a mystery even if the source code were available to an attacker
170,I found this code on a sex MUX and it really tickles me to find out what it says I spent way too much time trying to decode it on my own and Im a dumbass when it comes to this stuff   Please help? Here it is:  Smkftksntzf orapjdm lyv vcvpeshopv shotnsxfldc mzfyrn Nzfdune Delto
171,I have a basic understanding of elliptic curve cryptography Unfortunately I do not have enough mathematics skills to be able to really understand some of the important implications of this form of crypto   I am especially interested in the aspects of ECC that allow for generating  deterministic or hierarchicaldeterministic sequences of keys I am also interested in key splitting for MofN signing or decrypting key backup escrow and recovery   These are relatively advanced concepts but I have seen some simplified explanations of similar ideas before I am especially interested in geometric illustrations of these concepts  Can anyone point me to good tutorials that make it possible to understnad ECC without advanced math but based on analogies geometric illustration simpler math?  Many thanks
172,I am working on a Lamport digital signature scheme and it would be handy to find a hash function that has 128bit output since this reduces the size of the signatures somewhat significantly  While I realize that MD5 itself is considered cryptographically broken my intuition is that composing the functions as above would yield a hash function at least as secure as SHA3  Unfortunately I havent found much info on composing hash functions other than the advice that a direct composition like MD5SHA3m reduces the entropy of the input  Any ideas welcome; I cant figure out how to go about proving or disproving this but I am working through papers on Skein and Keccak as a start  Thanks
173,Hi guys This is my first post here at rcryptography so I hope Im not breaking any rules or some such  Back when I was a teenager before I actually worked in IT Security as I do now I always had a fascination for cryptography I used to send my girlfriends encrypted messages in the hopes that they would somehow know how to decode them and see how romantic I was I recently found one of these old messages and would dearly love to know what I actually saidas I have no idea how I made it  This was the message: 16JM0B79CD9JGGG0G8880GGG00G0080G888088G0800G0080G8GG8GG800G0G008G0GG0888G80G008G0G800GG80GG80  Im fairly certain I encoded it into Binary and then into Base24 however my attempts at reversing this have proved futile  I understand its a strange request but would anybody out there be able to help decode this silly little message?  Thanks
174,Hi  Im not well versed in cryptography or security so Im wondering if this random idea I had is viable  So we all have passwords for various websites  Some sites we dont really care much to use unique and random passwords for  So we often use the same password or some kind of password pattern for most of the noncritical sites  But maybe we want a little more security than that  So my idea is to setup a website or have a mobile app that takes in two inputs 1 the domain name of the website you want to visit and 2your generic often used password    The site takes those two inputs runs a hash function on them like SHA1 and outputs the first 8 digits as your password  On most database password tables passwords are often salted and hashed  I suppose in this case the domain name acts as the salt  Would this be a secure method to protect your commonly used password?
175,Handing a physical usb with one time pad data to someone you trust?
176,The randomness is rooted in quantum mechanics and is very broad spectrum As far as I can tell its as good as it gets  I know that there are various problems with the ways certain systems generate random numbers due to correlations with power consumption and other weird things I think I can avoid those problems and I know the complete chain of trust from raw data to on my flash drive is good
177,Head over to ircirchighwaynet challenge for one hell of a cipher Its an enigma machine message but everyone is stumped
178,So Ive been given an encoded message I need to decipher within the next day or two  The only hint Ive been given is that its a transposition cipher of some sort  Any assistance would be much appreciated  MT NAWYHK YITEOM NOH SOR NGTL LRNAUI HS TIR IEAFRHR NTUTOSHUESCN CFSI IIIR RII ALOR INNF VFVS XEO HENN FVLUX EEEZ TEEE
179,Im not nearly experienced enough and theres no need to inflate his head any more than it already isedit: running it through an ascii converter gives this: 073102032121111117032099097110032100101099105112104101114032116104105115044032073032119105108108032116101108108032121111117032115111109101116104105110103032110105099101032097098111117116032121111117114115101108102046032
180,I have written a detail article on private key creation and public key creation I have also shown how to lock a file with public key and how to unlock file using private key   Remember this is a key based security I have perform this complete lab on Redhat Linux I have shown how to create keys and how to use it to lock and unlock files  If you want details articles on this and want to learn this in few simple steps just read this article  [https:linuxtiwarycom20180825publickeyandprivatekeyencryptiondecryptionlabasymmetriccryptography]https:linuxtiwarycom20180825publickeyandprivatekeyencryptiondecryptionlabasymmetriccryptography
181,Hey guys  Im a compsciinterested student and Im a super beginner in cryptography and encryption  So my question is: if every file has a completely unique sha hash thats very very short compared to the full file it could represent like a video per se then couldnt it theoretically be used for compression assuming you had a superpowerful computer that could bruteforce its way to the original file by guessing?  I know that this is completely unfeasible and makes no sense with current technology but is this how sha works?  Thanks
182,Presently were looking at using Scuttlebot and PGP but are open to suggestion Anyone interested in solving this problem or quite simply reviewing our work please get in touch Thanks
183,I always believed AES256 had a blocksize of 256 bit until I just noticed it affects only the keysize The blocksize apparently stays 128 bit in each mode This detail differs from the original Rijndael Algorithm But why did they introduce 256 bit keysize in the first place then? It doesnt seem to be more secure when blocksize doesnt correlate My trouble: Having a blocksize of 128 bit and a keysize of 256 means for each possible cipherblock there exist 2^128 spurious keys So trying the first 2^128 possibilities have a very likely chance to get a valid  but very unlikely the original key On a bigger plaintext this property will be destroyed when using something else than ECB mode but it still seems to be an important realization for me So whats the idea behind AES256? Why did they choose to not vary blocksize to keep same plaincipher space? 
184,What would be a good start to learning cryptography and what certifications are the best for it?  Im a beginner at it and would like you guys to recommend some good books or sites that will help me figure things out 
185,Hello everyone I have developed an encryption algorithm using the cellular automata rules If you dont know what cellular automata is simply put; its a simulation of life Life is represented by 1s and 0s Those 1s and 0s that are simulated is then used to encrypt text You can use it to store important text encrypted so that no one but you can read it The algorithm requires 3 inputs plain text file txt password and evolution or pin if you like number To decrypt it you need the password and the pin number  Ive also done my thesis on this and I would appreciate any comments or criticism For security people I also would like to hear your opinion it could be related to flaws bugs and security issues If you want to know more I could also put up my thesis Ive made a full post on Steemit explaining how it works so if you wanna know more and see images of course check there : https:steemitcomcrypto@bazmuscellularautomatadataencryptionopensourcefreetouse  Check the github page: https:githubcomkarusb1DCAEncryption  Read my paper here go to section 7 : https:drivegooglecomopen?id=0B5lN3LcYFyuTaG15SHl4S1V1UlE  Presentation here : https:drivegooglecomopen?id=0B5lN3LcYFyuTRmlBck1jZ0llRHM  EDIT: it would have been nice if someone told me that i had a major bug and didnt actually work unless key was longer than the message thanks guys :D Fixed it and posted a [release]https:githubcomkarusb1DCAEncryptionreleasestag12 : 
186,Hey guys  Im writing a seminar paper and want to find out methods where steganography can be applied to fight crime Two examples I already found are the Yellow Dots[1] and wow screenshot watermarks[2]  Thanks for your help   [1] http:scienceblogsdeklausiskryptokolumne20170606theyellowdotcodethatledtoarrestofwhistleblowerrealitywinner  [2] https:wwwgeekcomgamesworldofwarcraftplayersdiscoverwatermarkembeddedinscreenshots1515145
187,Given a passphrase P a salt S rounds R and a key stretching function F with three parameters: passphrase salt and rounds consider the following scenarios:  1 result = FP S R  2;  2 S1 = FS P R; result = P S1 R;  Does scenario 2 provide betterworse security than scenario 1?  Note that the passphrase and the salt are swapped when calculating S1
188,Granted how many jobs in crypto require security clearance I figured this would be a good place to ask this Its sort of a silly question but Im going to take a polygraph this week for a job I applied for and was wondering if I should dress formallybusinesslike or casually for the appointment It wont take place at my employers facility I was thinking casual would be ok but I dont want to look foolish or careless
189,Several years ago I read [Spycatcher]https:enwikipediaorgwikiSpycatcher  in it the author talks about using a onetimepad but it is somehow combined with the Fibonacci sequence If I remember correctly he goes through the process stepbystep explaining exactly how it works but unfortunately I no longer have a copy of the book so I cant check for myself  Has anyone here heard of this technique before? How does it work?  I cant really think how it could be useful Granted Im hardly an expert my knowledge of cryptography is very basic but I always thought that if the key is properly random and only used once then OTP is pretty much unbreakable Adding another layer of obfuscation just seemspointless at best  Ive done some searching but I havent found much information:  [This link]http:scialertnetfulltext?doi=itj20058795org=11 has 2 mentions of Fibonacci but I dont think its referring to the sequence It seems to refer instead to Fibonacci additionsubtraction which Ive never heard of before and cant find any further information on indeed it just seems to be additionsubtraction modulo 10 Not sure what connection it has with Fibonacci  The only way I can think of to combine Fibonacci with OTP would be something like:   Instead of using consecutive characters from the key you use the Fibonacci sequence as indexes  Or perhaps when you add a plaintext character and a key character together you also add a term from the Fibonacci sequence  Actually I can sort of see how these could make character position matter would this then turn OTP into a streamcypher? which might be useful But still it seems to me that if OTP is already perfect then adding complexity is just asking for trouble  Of course its entirely possible that Im misremembering so please let me know if Im barking up the wrong tree here  Id love to hear your thoughts on this rcryptography
190,There are very few Discord servers oriented toward academic and professional audiences but after having success with several other scientific servers I thought I should make one for computer science as well  A permanent invitation link is available at https:discordmecs We hope to see you there 
191,I was wondering if there are computers normal people can buy that stand a chance at cracking codes Quantum and super computers costs millions so that is out of the question Can we use ASIC hardware to crack encryption? Of course it wouldnt be cracking AES or cracking anything within a second like a quantum computer would but is it usable? For example the [AntMiner S9]https:wwwamazoncomAntMinerS9135TH0098WBitcoindpB01GFEOV0Oref=sr_1_1?s=pcie=UTF8qid=1489389994sr=11keywords=bitcoinminer If we cant use ASIC hardware is there anything besides using 4 Titan X Nvidia GPUs we can use to brute force crypto?
192,Hello all like the title says I have some questions on Diffie and RSA For Diffie I know that you have to pick 2 rather large prime numbers to begin with So say prime number p = 10000007 and the primitive root pr = 180989 Alice sends the number 99644076 When I pick my secret number should it be a rather large number as well or can it be any number?  For my question for RSA I dont really understand how to generate a RSA key Ive tried to look online but the explanations are confusing to me So any help would be appreciated  Thank you
193,I am traveling back to the US tommorow and I would like to know what you think I have sensitive data on my flashdrive so I decided to encrypt it but I am worried they will hassle me about it at the airport 
194,An example usage might be a controversial shareholder vote of a large company where the voters are not local to each other and the outcome has a large financial influence so an external auditor must verify the integrity of the vote In most realworld shareholder votes shareholders mail their votes so their identities are known This is also how mailin votes work in some US States But if the vote is controversial voters might not want their votes to be known and might not trust a third party to keep their votes secret  Is there a system that would allow a vote to occur that has these invariant:   Anyone can show that all the votes came from a population of authorized voters  No one knows how an individual voted except for themselves  In general it would also be important to know if any individual voted twice I have an alternate use for a system like this where it is not as important 
195,Hi All  I want to switch to  a career in cryptography in the next 6 monthsI have background in computer science and have about 10 years experienceI have moved to project management for the last 4 years What should i study to be competitive in the job marketWhich companies are looking to hire cryptographers What can i expect my remuneration to be 
196,I know that if you take 2 large prime numbers and multiply them together the result only has 2 factors and factoring the result is hard  At this simplistic level: Whats an elliptic curve?
197,I know some if tge basics if cryptography  and I wanna make My info safer bit I dont know where one would begin Id tgey wanted to steal my info Hiw would they go about it?
198,Hi all   There is something that I dont quite understand about Digital Signatures  It uses a secure hashing algorithm create a digest of the message and then encrypts the digest using the users private key   This can then be decrypted by using others using the users public key  But from my understanding this is the opposite of how public key encryption is supposed to work  Public key encryption allows a user to encrypt using a public key which can then be decrypted using the private key not the other way around so how am I able to decrypt a message using the users public key?  Thanks 
199,I wrote a program for encrypting messages and at this point I am speculating on how I should proceed on showcasing it I obviously dont want to give away too much information on how it works and I am afraid that just showing the encrypted and decrypted message wont draw too much attentions  I am looking for some advice from people that have been in the same situation or might be able to point me in the direction I need I am open for any suggestions and I am happy to hear about peoples experience with developing security technology  PS I hope I am in the right sub If not I apologise in advance
200,Hi there I am running an online playbyemail game which I am also playing As gamesmaster I need to draw a random number without being open to the charge that I chose the number to suit my own purposes as a player I was hoping that I could do something like take an agreed seed from two players involved in a battle probably a seed generated deterministically from details of the battle itself plug it into an online service and get a sharable link to the random output which is in the range I specify  Other players could check the link and see that the deterministic seed had indeed generated the random output Importantly they should not be able to check the results ahead of time and I should not be able to generate the results repeatedly until I get the result that suits my battle needs It should be a onetime generation of an integer that is timestamped and unrepeatable  Any online services like this?
201,I have a history project where I need to interview someone on some piece of history I am interested in so Ive decided to do it on the first crypto war Im looking for anyone really though I would like to interview some activist worked to make encryption public and prevent the clipper chip from being implemented and some developerscryptographers that worked on encyrption methods or technologies that would become the bedrock on the internet and commerce If I could get a chance to talk to members of the EFFespecially the crew that worked on the device that cracked the DES that would be more amazing than any words could do justice   requirements:  only one really just have experience in the during that time and have some level of involvement in the issue as small as an emotional investment in seeing the des fail or cryptography to develop outside the NSA    just say you would be interested and if you dont want to talk on reddit for some reason a place I could message you 
202,For example the SHA256 function If I take a random binary vector with random length and feed it into the hash function Are all output patterns equally likely?
203,Hello so i havent dont any encryption work in a long time Cryptography used to be something I did for fun and now it looks like ill need it again for some help   I made a post in rc418 about his new album which appears to be hiding something in the number strings   https:wwwredditcomrC418comments4115x8the_deeper_meaning_behind_148  If anyone is interested in helping me and udozyjones solve this mystery Shoot me a PM and I will invite you to a very comprehensive google doc where we are working on a certain algorithm the key is possibly either   3214567854382179457898942469214345612342499994524417109424692143  or   3214567854382179457898942469214345612342499994524417214246921444  if it matters These are possibly keys for 3DES RSA Blowfish AES or Twofish  However we do not know what the content is or even how to apporach the different modes of decryption If anyone can help It would be much appreciated   Thanks much
204,Looks like Bruce Schneier is working on compiling a list of cryptographic products to show how futile it would be for governments to attempt to put backdoors in computer security products  If anyone is able to help out [here is a link to his blog post]https:wwwschneiercomblogarchives201512worldwide_crypthtml      He has a spreadsheet up and a way to make updatescorrections
205,Let H be a secure oneway hash function that both Alice and Bob know Alice chooses a secret value x and computes:    K1 = Hx K2 = HK1 K3 = HK2 K4 = HK3 K5 = HK4     Suppose Bob knows K3 Can Bob know the others {K1 K2 K4 K5}? If yes show how; otherwise show why
206,Hi  Ive been playing around with a key stretch algorithm that I have invented and I would love to hear if anyone can find any weakness in it Ive posted it in a few places and so far with the exception of a small flaw that was fixed I haven found any  I base it on the idea that I want to use the simplicity of a one time pad but to have a considerably shorter key Now when I say short key I dont mind a key of many bytes say 256 since memory bandwidth is cheap but I do want one that is extremely fast to precess  If we have a small key we should be able to procedurally generate an infinitely long key from the initial key seed At this point anyone who knows anything about encryption can see an obvious weakness here: the procedural algorithm will produce a pattern that can be found and used to break the key True but that is a mathematical way of thinking about it: a specific algorithm yields a specific pattern But what if the algorithm isnt specific? What if the key describes the algorithm? If the key is data that can be used as an algorithm to produce data then we can create a cycle where the algorithm is self modifying and therefor wont create a pattern if we add the plain text in to this self modifying code then the only way of predicting the code would be to have the plaintext  One way of thinking about it is to imagine the encryption algorithm as a virtual machine that produces a one time pad and new instructions for the virtual machine All we really need to do is to ensure that the virtual machine never gets stuck in a loop where it produces an output that makes it repeat its previous operations over and over  Thats pretty much the basic idea and once you start to think about it you realize that you dont need a full virtual machine you can do something much simpler that has similar characteristics  Here is the algorithm:  pos_a = key[0]  key_size;    pos_b = key[1]  key_size;    pos_c = key[2]  key_size;     fori = 0; i < length; i    {        old_a = pos_a;        pos_a = key[pos_b]  key_size;        pos_b = pos_a  1  key[pos_c]  key_size  1  key_size;        pos_c = pos_a  1  key[old_a]  key_size  1  key_size;        decrypted[i] = encrypted[i] ^ key[pos_a] ^ key[pos_b];        key[pos_c] = key[pos_c] << 31 | key[pos_c] >> 1;        key[pos_a] ^= key[pos_c] ^ decrypted[i];        key[pos_b] ^= i;    }     Lets go over this code and start by first analyzing the key line here:  decrypted[i] = encrypted[i] ^ key[pos_a] ^ key[pos_b];     This is the encryption using a simple XOR XOR in it self is unbreakable because any input can yield any output with the right key value However If we reuse the same XOR key more then once it becomes possible to guess the key The assumption of any encryption algorithm must always be to make the message unbreakable even if the breaker has a part of the message in plain text So the first thing we do is to XOR with 2 different parts of the key; key[pos_a] and key[pos_b] The breaker now knows two numbers that if XORed together will produce the XOR difference between the ciphertext and the plain text if we a working with a 32 bit implementation that means 4 billion combinations Thats a lot but its still a clue So the next thing we do is to destroy that clue:  key[pos_a] ^= key[pos_c] ^ decrypted[i];    key[pos_b] ^= i;    Here we take a third portion of the key key[pos_c] that the adversary still haven got a clue about and use it to destroy one of the two XOR factors To this we add in the decrypted message and a counter that will add a poison pill and prevent the algorithm from getting stuck in a pattern By adding the decrypted message we also add the same entropy as the message it self has to the possible combinations  key[pos_c] = key[pos_c] << 31 | key[pos_c] >> 1;    To make sure we have good entropy we also shift the key one step so that we arent constantly XORing the same bits Then finally we get to this:  old_a = pos_a;    pos_a = key[pos_b]  key_size;    pos_b = pos_a  1  key[pos_c]  key_size  1  key_size;    pos_c = pos_a  1  key[old_a]  key_size  1  key_size;     Here we simply use the key to recursively select the 3 sections of our key we will use in our above algorithm Since none of these position values are exposed they obfuscate how the algorithm work as they will just modify how the algorithm selects its key values they wont actually be used in the math relating to the message Since the keys at pos_a and pos_c will be XORed to destroy the key they cant be the same and since the key at pos_a and pos_b are used to decrypt the message they cant be the same The core idea here is that the adversary can guess the relation shit between two values in the key but not what part of the key as that process is fenced of from the encryption process  I would love to see if anyone can show a weakness in this If you want to try here are a few assumptions you can make: The key is only used once and is random but assume that you have access to both the encrypted and a significant part of the plain text message The encryption should hold up even if an attacker can accurately guess significant parts of the plain text Im very curious as to how the key size and amount of plain text data is given can impact the security of the encryption My guess is that keysize needs to be at least 7 however the above code is 32 bit but on a 64bit processor it would theoretically be twice as fast in 32 bit mode so it may make sense to have 7  64 bit or larger keys  This is one of thous times I wish i was very rich so that i could offer up a big cash price but maybe i can owe you beer if you break it?  You can download source from: http:wwwquelsolaarcomcrypto_testc
207,My app lets users encipher their text messages using 9 different ciphers:   Atbash Cipher  Caesar Shift Cipher  Keyboard Code  LetterNumber Code  Monoalphabetic Substitution Cipher  Morse Code  Rail Fence Cipher  Rot 13 Cipher  Vigenere Cipher   I recently found out about rcryptography and Id love any feedback you guys have or suggestions of other ciphers that could reasonably be used to encrypt text messages  Thanks  iOS: [Cipher Sender]https:itunesapplecomusappciphersenderid548958077  Android: [Cipher Sender]https:playgooglecomstoreappsdetails?id=comhigh5ciphersenderhl=en  edit: Please remember that all of these ciphers are for novelty use only and none of these ciphers should be considered secure Due to their historical nature a method for cracking each one is well documented and they are all crackable with only a reasonable amount of work Highly sensitive information should be secured by much stronger means 
208,Guys Ive no clue where to start to be honest I would like to be able to learn about cryptography Im not even sure if what it is that I am thinking is the right thing Basically I would like to be able to decipher the puzzles in the daily paper I would like to be able to play the puzzle games to sharpen my mind a bit Essentially I would like to be able to write in code that I could then actually read myself   Thanks all 
209,I just started coming up with this idea of a form of cryptography Earlier this year I took an interest in cryptography and read a couple books on it This idea of mine it seems similar to a Vigenere cipher but it moves  I dont really mind people seeing this and Id like some feedback tell me if its already been done or something along the same lines  Anyway heres my idea the number in the topleft of each image matches the step number http:imgurcomaao5bO0  Now to explain how it works  Step 1: Choose a shape and then decide on a box size depending on the size of your shape you should be able to multiply your box size ie 3x3 by the number of corners the shape has and have at least 26          ie I used a square with a 3x3 box 4x3x3 = 36 which is indeed >26  Step 2: Create your boxes in the corners of your shape this is not necessary but definitely helps with organization  Step 3: Now you are going to start the top or topleft of your shape and starting writing down the alphabet I might want to change this each letter you write you go to the next corner going clockwise and write the next letter and so on   Step 4: This is the encryption decryption process So take the word Dad and put it in What you do is essentially turn the letter into its corresponding number So D = 4 fourth letter in the alphabet A = 1 Now you count over that much in the key you have created  In my case it results in BAB  Step 5: Well not very advanced just complicated Thats just the beginning So to prevent people from cracking the code an extra layer of security has been added The next step involves rotating the corners Once the amount of letters youve encrypted or decrypted is equal to the number of corners you have you shift them You can choose the direction it is specified in the key you give the other party Ill explain later  Say the shift is clockwise In my case this message: Hello will become QFVVG For an image of my rotation heres a screencap http:prntscrcom4bvlqv  After Ive done 4 letters everything cycles and I get a G instead of a D  Step 6: Moreover you can also put in the key directions for rotating each corner individually  In my case instead of the first block counting D=1 H=2 L=3 it now reads P=1 D=2 Y=3   The most important part of the encryption process is how you give the key to somebody This is by far the most complex part The key for mine looks like this:  3a3n4nA  The key is basically all of this information: 3x3 corners 4 cornered shape rotate the first cycle and cycle clockwise   To break this down The a and ns around the 3s and 4 represent when to do step 6 Note: A cycle is step 5 The a means a clockwise turn because everybody thinks clockwise first a z would represent a counterclockwise turn everybody thinks of counterclockwise last The ns represent null or in other words you dont rotate The capital A at the end means clockwise cycles whereas a capital Z would represent counterclockwise cycles   So when somebody sees this they know: Its a 4cornered shape the corners are 3x3 cycle clockwise and rotate each corner clockwise the first time we cycle dont rotate the next cycle dont rotate the next cycle and then rotate clockwise again And so on  This is a fairly complicated process but I think its an interesting way to encrypt and decrypt Id love to hear feedback   Thank you for reading
210,I attempted to contact ProtonMail with my concerns prior to this disclosure which is embarrassingly simple to see I received no response  If you send a message to a nonPM user you provide a symmetric passphrase which is then used to encrypt the message and the recipient is sent an email with a link to a webpage that will allow decryption of the message inbrowser  If you load the source code to ProtonMails encryption from https:protonmailchjscomposerjs which is embarrassingly amateurish looking at points you will see the line at which this occurs:       if outside recipeints are encrypted:     if encOutsideis:checked {             encrypt the message symetrically for outside recipients using the message and a hash of the pw       messageBody = encryptMessagemessageBody openpgpcryptohashsha256outsidePwval;             append to the total package and carry on       totalPackagevaltotalPackageval;{emailArray[index] type messageBody};          }       They are not using PBKDF2 scrypt or any other keystretching algorithm allowing for efficient bruteforce attacks These attacks would be easy to perform offline because their method of transmitting the encrypted data is to embed it in a hidden div in the resulting webpage their SSL implementation also does not support PFS They are also apparently reusing key material given that two messages encrypted with the same passphrase will use the same encryption key  Decryption code for comparison: https:protonmailchjsdecryptjs  Relevant application code including the pgpEncrypt code showing an error at the top of the file as well: https:protonmailchmin?g=appjs804   I have serious concerns about a securitybased email platform with code of this quality
211,Ive seen many estimates of how long it would take to break AES128 Very often the numbers are something crazy high like 1E181 billion billion years Almost all such estimates dont account for advances in technologyMoores law Leaving aside the discussion of the sustainability of Moores law I decided to compute how long it would take to break AES128 The answer? 115 years   Im not a mathematician or a professional cryptographer so I would appreciate input Ive posted my spreadsheet I used to do my calculations so constructive comments are appreciated   http:shikhirsinghblogspotcom201407mooreslawandbruteforceforaeshtml
212,Or maybe even a few seconds for it to be practical in the real world
213,Is anyone aware of a cipher that might somehow be tied to Kurt Vonneguts The Sirens of Titan chronosynclastic infundibulum or The Breakfast of Champions?  Ive done lots of googling and checked my stash of cryptography websites with no luck  The message is in groups of four letters like this:  IHWG GVUQ and so forth
214,I have a homework problem asking me how an eavesdropper found out a message sent by one person to 3 people knowing their public keys and the transmitted message Something like this:  Alice is sending a message to 3 people and Mallory found this:  Receiver Encrypted message Public key  Bob 674 3337 3  Charlie 36 187 3  David 948 1219 3  How did Mallory do it? Factoring the keys is not a viable solution At first I thought of trying to find common factors between all the keys as they would have shared private primes using that to find the other private prime then using that to find the decryption key But they dont share any private primes so Im stuck Any help or tips would be great Thank you
215,Detailed description is available on [bittext]http:bittextchuEraFW1b51 or [pastebin]http:pastebincomtsRuVUjY if you prefer  AOTP is an OTP based algorithm to release multiple files to the public without reusing a key but keeping control when a file can be decrypted  It mainly differs in the following points:   Creator decides when parts can be decrypted depending on when he releases them  Only one key is generated per chain The key is only applied to one file no matter how many files are in the chain  The key cannot be constructed from the files it was not applied to  Please tell me what you think about it
216,So I read [this]https:enwikipediaorgwikiCryptographic_hash_function wikipedia article and Id like to know whether it could be possible to develop a human hashing algorithm? This would utilise something that only humans can do and is difficult for PCs does this have a name actually?  Id like to know this because I have an idea to make HumanCoin where humans would do proofofwork I posted [this]http:wwwredditcomrCryptoCurrencycomments1xaaavcrazy_idea_humancoin on the rCryptoCurrency sub
217,I have a pgp key uploaded to a keyserver I now want to share it in my emails via my signature Whats the bestproper way to to this? Should I add my keyID to my email sig or should I use my key fingerprint? Maybe both?   Are there any advantages or disadvantages of keyID vs fingerprint?
218,Before asking my question directly I think it is important that I explain what I am not asking  To be sure I am not making any reference to the recent Intel [RdRand debacle]https:enwikipediaorgwikiRdRand  I fully understand that this kind of hardware randomnumber generation is not provably secure in the same way that open source code eg `devurandom` is  So with that out of the way my question is as follows:  Given that highquality [hardware random number generators]https:enwikipediaorgwikiHardware_random_number_generator appear to  generate their data from quantum processes which are truly random can any such devices be fully trusted?  More specifically:  1 Is it theoretically possible to modify these devices to reduce their randomness such that a security audit would not reveal the backdoor cf `RdRand`?  2 If not are there vendors whose designs and products have been audited in depth?
219,http:enwikipediaorgwikiBirthday_problemCalculating_the_probability  If you want to use all the computers on the planet running for as long as the universe has ever existed to try to crack one private key then maybe it wont be cracked but if you have every computer generating new publicprivate key pairs then how long until one computer accidentally generates a pair that has already been generated?  As I understand the Birthday Problem suggests that this conflict is significantly more likely Is 256 bits chosen to account for that? Im assuming it is but I dont actually know  Looking [at this]http:uploadwikimediaorgmath9c79c7763ad00291fc5be64923ea6d831d3png I think we want to solve kPnk^n =05 where k is 2^256  and then we want to solve for n n would represent the number of publicprivate keys that have to be generated to get a 50 chance of the same pair being generated twice and therefore potentially causing a conflict
220,Pikyxl Xkarvdl pvvl aga vabrmrne th hbv malpmwp rrtscjms hy kmwmtghz buk rvit uxaairq qw cvfal kivtek xhgi hgg V smax hvv lhrhpxvho pwc fref azxh zkvyq rovr gpeke sivx tuh xuhew erjempepe wxzmsi lwe lmg soeh dxohwxnwere aceivric I frzimj iia aw yunthr vhuxmaxa sj xyml wekl ig tsp dsstapv maie Gkenzo qc nipmkrj absp lreobaecpe ir iqrceq ds mklewbq E ei qfvx jsegekglh xmzp whag noj Hdpfyh avoh vaetx poie M txes ljp un zl kbttnft pbal xuh wphmvm  This was found in a wall on a location of the map Origins which was released for Black Ops 2 yesterday Give a go at decoding it and helping out  Video here: http:wwwyoutubecomwatch?v=9kZ3NTX1lYA
221,Im looking for a way of obfuscating numbers so that they dont look like numbers Also prefer that they dont look like strings of letters so no a=1 b=2 type substitution This doesnt have to be something that would withstand intense scrutiny just something that if people looked at it they would not immediately be able to recognize that it was a numeric sequence Bonus points for something that doesnt look absurd strings of weird symbols and also if it can be easily written down Suggestions?
222,Folks  Is it ok to ask for critiques and learning stuff here?  Im studying the design of some crypto protocols and trying to write a program to store a symmetrically encrypted message in a file so I get cofidentiality integrity and authenticity I am writing it for fun and learning only ie not to be used it in an actual product and will like some feedback  The scheme I figured out is basically generate a message digest of my plain text and encrypt it together with the said plain text;  once I decrypt them I generate a new hash from the decrypted message and check if both are equal If true I assume the message was not tampered with  All information publicly available is either encrypted or randomly generated IVs and salts and since the hash is also encrypted an eavesdroper cant tell I sent the same message twice   The encryption procedure in pseudocode:      l = Lengthcm      h = Hl  cm  p     em = Eh  l  cm  p     sm = s  iv  em   Where:   cm is my clear text message zlib compressed but lets forget this for now;   l is the length of my clear text message basically to separate the message from the padding once its decrypted;   iv is my fixedlength initialization vector read from devurandom;   s is a fixedlength salt used to derive the key from the password also read from devurandom Im using a salted iterated hash of the password to get the key;   em the encrypted message;   sm the stored message ie the encrypted message with also the information needed to initialize the cipher algo for decryption;   p is some kind of padding to fit the block size   h is the hash of length message and padding;    The plus sign which spoiled my formatting things of a reddit n00b is string concatenation;   Length is a function which returns the length on an element as a fixed size unsigned int;   E is my block encryption algo eg AESCBC For simplicity lets assume that its already initialized with the initialization vector iv and a given key   H is a secure message digest algo Im using SHA256    Its easy to get the salt and IV from the stored message they are fixed size so I grab them ask the user for the password generate the key and use it to decrypt the secret part of the message  Once I get it I isolate the hash and check if it matches the hash generated from the rest of the message if not the message is corrupted  If the hash matches I use the stored length to get cm back discarding the padding  In pseudocode assuming l is four bytes long ignoring endianess issues for now and h s and iv are both 32 bytes long:      s = sm[0:32]     iv = sm[32:64]     em = sm[65:]     m = Dem     sh = m[0:32]     hc = Hm[33:]      if sh == hc  Message is valid so split the contents and get cm back   Where:   all names from the previous pseudocode stills valid;   : is string splitting so m[0:42] gets bytes 0 to 41 from the string m  Im writing the code in Python BTW;   D is the cipher already set up for decryption with the key IV etc   sh is for stored hash;   hc is for hash candidate;    This looks sound but also its so trivial that I think everyone who played with crypto came out with this design at least once Oddly I failed to find out an explanation about its insecurity  My questions: Is this thing secure?  Any material I should read? Why should I use HMAC instead of this?  Any other critique for my toy protocol? 
223,http:iimgurcomGe6lxpng   Thank you for your help Found this comment Im debating if Im going to check it out or not  Edit: looks like some one figured it out [here]http:wwwredditcomrAskRedditcomments16r2rxwhats_a_secret_you_have_sworn_never_to_tell_butc7z7lk0 
224,edit 20180907: nuked most of my comments in case i said anything dumb that I forgot about
225,Hello cryptography Im posting here because I figured it applied more to you guys than a programming subreddit based on the track record of my recruitment adventures  Im working on a project called [Sidony]https:githubcomStonedEmuSidony It as a multiplatform commandline encryption tool which is completely open both in development and product Its free and will remain free for people to modify and rerelease etc  Right now the core consists of PBKDF2 for 256bit key derivation using SHA256 as the psuedo random function crutch and then actual file encryption is performed using AES Im recruiting developers to help me with the following tasks:   Verify the standing implementations  Help me with implementing Twofish and Serpent  So why do this when other tools already exist for it? Its a personal improvement project really Im in highschool but plan on studying cryptology in college and to pursue it cryptosystems as a career This project has given me the opportunity to learn a lot of cryptographic principles and tools and lingo and etc and if youre as interested in it as I am its a great opportunity for you to do the same  As for the current state it works on both Windows and Mac OSX but Ive yet to port it to Linux just havent bothered to set up a machine for it Anyway the code is portable given a small change depending on the system which I note in the readme A download for the windows version is available on the git not yet true for the OSX version  My girlfriend is a graphic designer and is working on a GUI I can construct it using Allegro in Windows and theoretically also OSX and Linux and other platforms but Ive got no experience with the others  Anyway thats the background and forward motion for the project and Id love to have some folk join me Contact me here or on my email stonedemu@gmailcom
226,TLDR; Looking for indepth crypto book about bits but still easy to understand or a suggestion for an other crypto subject  Hi  As a 6th grade student 12th grade for you Americans I have to do my thesis at the end of the schoolyear Ive decided to do this about cryptography you guessed it :p  because:   Im following MathsScience and Im thinking about studying ICT when I graduate  I really want to know more about cryptography  Im pretty proficient in Java the programming language I plan on writing some existing algorithmes myself  Now I want to talk the most about cryptography on the bit level but Im having trouble finding books which go indepth but still covers the basics  Wikipedia is kind of difficult Its in English and Im having trouble understanding some difficult words and obviously not allowed Cryptography for dummies looked good but it doesnt go deep enough  Perhaps you guys know some good bookswebsites or perhaps you know another subject?  Thanks
227,Hi everyone A friend and myself are studying older cryptographic functions and have run into a bit of difficulty understanding the Hill cipher We both understand Caesar and Playfair quite easily however neither Google nor our texts gave us a very clear explanation and I was wondering if one of you may be so kind as to help us understand how to set up and encrypt a message say Hello Worldusing the key Keya Many thanks
228,Wan Carol eglit waren eleteer  Tri sogal ipi eglit meneseer  Su lapel aka sude seerondo  Wan Carol eglit ipi eglito  Sog John Steinbeck  Los Gatos in the evening  This excerpt comes from Steinbecks handwritten dedication to his first wife Carol after the publication of Grapes of Wrath I got it from my mom who is an English professor and says that there is little to no record of this dedication nor the language online Any help is appreciated  Note: Los Gatos is a town near where Steinbeck was born and had a summer ranch home
229,If one meets a website AdobeID creation is what inspired this question that says no you cant use a : or double spaces in your password and it must be 6 12 characters is that proof that theyre storing passwords improperly?  Any hash function wont care if theres a colon in the input string or not nor if there are 13 characters  With rules like this is it an assurance theyre storing passwords in plaintext?  Is there any way they could be properly encrypting the input AND yet have a legitimate need for these restrictions?  Skip the not less than 6 part and agree thats to keep people from being stupid  Before I get all youre doing it wrong on them I wanted to confirm theres not a way they could be doing it right and have those restrictions
230,I made a [comment about my password]http:wwwredditcomrstarcraftcommentsxypqnbattlenet_important_security_updatec5qrpmx in rstarcraft when Blizzard was hacked yesterday Reading the comments made it seem that I am doing something wrong Further down youll see that my decision to use such password came about the time when I was listening to Leo Laporte and Steve Gibsons podcast I mistakenly attributed it to TWiT but its actually Security Now  If the consensus in the comments is right how can I make my passwords secure and convenientmemorable?  Thank you
231,What are all the cool kids doing these days? Elliptic Curve Cryptography and Quantum Cryptography are being mentioned more frequently Are there any cutting edge algorithms you dont hear too much about in mass media?
232,Assuming you have an accurate enough measurement 
233,Hi I want to get into cryptography and I dont know where to begin I tried looking for material to start with but theres just so much out there and I dont necessarily want to learn computer encryption Im not going to lie my interest in the Zodiac killer is whats getting me interested in cryptography
234,[https:wwwyoutubecomwatch?v=l0WXFhk3dnU]https:wwwyoutubecomwatch?v=l0WXFhk3dnU  The Bitcoin Whitepaper was first released on the cryptography mailing list run by computer security expert Perry Metzger I chatted to Perry about the release and his first reaction upon learning about bitcoin 
235,Hey  I am learning Crypto and have a quick question as I am struggling in my basic learning I am looking at the Vigenere Cipher and a characterbased OneTime Pad   I know that the Vignere Cipher can be broken with statistical analysis even with 1 set of ciphertext but a character based OTP is theoretically unbreakable if it is used only 1 time Vignere Cipher is polyaphabetic and there are multiple statistical analysis attacks against it plus other attacks that are automated OTP can never be broken if the encryption keys are used only 1 time Is there anything else that I am missing?  x200B;  Please remove if this is the wrong place 
236,[http:1droppdfcomfilesStVrmthecodebreakersdavidkahnpdf]http:1droppdfcomfilesStVrmthecodebreakersdavidkahnpdf
237,Ive searched through like 56 websites and loads of videos on how to solve it and I still cant do it Every other cipher Ive learnt so far was a piece of cake but this specific cipher is making me go insane Maybe the code Im trying to break is impossible or something tbh Heres the code incase its not impossible and super easy:   Hirn so xuy tvgx ix olr xsmo eywa xb xanghmk olr ashmaa hgeam ga arxfzwquq  I tried doing something with the orl since it repeats once but it didnt help me at all At this point Im seriously wondering if I should just skip this cipher but my instincts tell me that if I cant complete this that I will never be a decent cryptologist lol
238,Are all cryptography researchers and companies that use cryptographic applications subject to ITAR by default? The regulations seem fairly broad
239,Im not quite sure whether these excahnges actually store the id or if it only stays in temp memory for verification  But lets say they do What measures should  be taken to securely store and encrypt images with sensitive data?  Thanks
240,I want to understand how publicprivate key cryptography works as the its easy to encrypt but hard for an attacker to decrypt even if they know the public key part is confusing to me and I think being able to do the math myself of a very very simple publicprivate key encryption method as in so easy to crack that you can do it with pen and paper would help me understand better  Any ideas?  And if this isnt the right sub would someone be able to point me in the right direction? Thanks :
241,Ive been reading a good deal on the different options out there but Im getting a lot of conflicting information  BCrypt  People arguing that this should be the only algorithm used since its actually using Blowfish  PBKDF2  People arguing that this should be the only algorithm used but use SHA512 with it  Argon2i  People arguing that this should be the only algorithm used because the others have weaknesses  Can someone straighten me out here?
242,Just a for fun question out of my own curiosity  Youve been dropped back in WW2 19391944 ish You know nothing about history or tactics youve been left only with your knowledge of cryptography You are tasked with improving cryptography and communication  Using on the technology available at the time what techniques ciphers etc would you use to be as uncrackable as possible?
243,Wondering if someone would tell me how to crack a private key when I have the public key Its a weak key that was designed to be cracked
244,Im looking for tofn threshold signature schemes that are practical for large t and n with n on the order of 50000 and t on the order of 40000  Most importantly I need the set of data required to verify the signature to be small  The setup should be noninteractive  Ive looked at [this scheme]http:stevengoldfedercompapersthreshold_sigspdf which is amazing but it requires a setup time on the order of n choose t which is infeasible for my case  Any recommendations or ideas are appreciated Thank you  EDIT: swapped n and t
245,Hi I was wondering why in the RSA algorithm they use two prime numbers instead of composite numbers? And does this have anything to do with how secure it is?  Thanks in advance
246,I thought a permutation only reorders a string resulting in a string with the same number of occurrences of each element of the initial string A block cipher on the other hand also does other things such as substitution and XORing with a round key
247,I have been trying to wrap my head around zeroknowledge proof systems as well as its technical definition  I am not talking about nonorminimally interactive ZK  My question has to do with RSA  Now if I provide someone after repeated challenges valid signatures for my known public key I prove probabilistically that I know the private key without actually revealing the private key  Now whenever I read something about Zero knowledge for example Wikipedia:  > In cryptography a zeroknowledge proof or zeroknowledge protocol is a method by which one party the prover can prove to another party the verifier that a given statement is true without conveying any information apart from the fact that the statement is indeed true  So for the statement I know the private key associated with public key X would such an RSA protocol count as an interactive zero knowledge proof?  Or does it not because for each signature challenge SOME knowledge is leaked [solution to each specific signature challenge] even though not specifically the private key?
248,Over the past few monthsyears Ive been dabbling in cryptography I have no formal training in cryptography but I have built some software systems that use cryptography  Two such systems are MultiExplorer registration system: https:autotipioarticle8  And the other is Memo server: https:githubcompriestcMultiExplorerblobmastermemo_server_specmd  Do either of these projects qualify me to get hired by a company to get paid to write cryptographic code?  If not what else do I need to do to become employable as a cryptographer?
249,Can an rsa public key be divided by anything other than one of its two primes and still produce a whole number?
250,Hi  I have a hypothetical problem I wanted to understand a little better and wasnt sure where to look  Was wondering if anyone had some key words I could search for  The basic idea is this:  1 We have correct information signal combined with fake information noiselike  Noise is generated randomly and known to us 2 I have a list of noise and can instantly identify what is signal and what is noise by looking at the list  So the question is in this situation are there some general rules you could apply to optimally hide your information  Are there keywords that could help me look into this question  I am thinking about the idea of what is the best way or worst way to overspecify a system?
251,Hi Reddit Ive recently finished making a dictionary based substitution cipher solver like a Caesar cipher but more general any kind of one to one letter cipher Its open source [here]https:githubcomquackdevsubstitutionciphersolver and currently implemented to solve the [NSAs Crypto Challenge Puzzle of the Week]https:wwwguardsupportcomcryptocryptochallengeasp and post the solution to twitter [here]https:twittercomnsa2ez I know its more a cipher than any real cryptography but Im looking to get some exposure before I present at my Universitys research fair so come follow me on twitter and fork my github repo Id also be really happy to talk about how it works and take some input on ways I could make it better Thanks  EDIT: I just made a website that implements the program on userinput ciphertexts at my university page [here]http:wwwcscolostateedu~jdeneshasubsolverindexphp so you can use it for yourself
252,I have a spare Raspberry Pi lying around and I want to set it up so I can keep my private keys safe their isolated from the internet and forward all my encrypted messages to it and have it display the decrypted message on a connected monitor or something Is there a program that already does this or something similar or am I going to have to write it myself?  Edit: Accidentally put public keys instead of private keys
253,Im sharing this with goodintent as to assist all those who would want to regain their email privacy via using OpenPGP   [OpenPGP encryption best practices]https:blogmailfencecomopenpgpencryptionbestpractices   [OpenPGP digital signature best practices]https:blogmailfencecomopenpgpdigitalsignaturebestpractices
254,Im not really a cryptographer myself however i do know the basics I was wondering how exactly a cryptographer would come up with a new cipher What thought processes do you have are there any specific imaginative exercises you do to help you find something new Also are there any helpful sources to get started with cryptography keep in mind im a secondary school student high school for yall Americans i probs wont understand the complicated ass looking words huge books tend to use PS: feel free to include any examples you may be working onwith
255,I have been studying ciphers such as Playfair  OneTime Pad Morse Code Vigenere keyed Vigenere ect    But I feel like im not learning enough Id just like to have people come and just give me tips on what to start on and learn I  will take every comment to heart And will take all of your advice Anything can help Im just very interested in becoming a Cryptographer Ill be grateful for any reply
256,Hi  I maybe can write stupid thinks but if anyone have time to read this to explain me thinks about cryptography  The some questions can been complicated to explain I understand perfectly that  When is talking about  privacy  I am a fan of security   1 MD5 i know that use mathematical equations to make a HASH code but how he works?     Its a secure option to use ?   2SHA1 and SHA254 : that ciphers use the same stile MD5 to make the HASH code?  3RSA: How RSA is created by server and how is verified by client?  For now its all  if i found answers i will see if i have more questions Thanks   
257,I want to write a dissertation on some aspect of the history of cryptography and crypotanalysis in the AngloAmerican world I want the topic to speak to contemporary debates around national security in particular the privacy and state surveillance debate kindled by Snowden and wikileaks So this would be an intellectual and political history rather than a technical history solely about hardware or the development of mathematical ideas   At this stage Im reading very broadly in related topics the history of computing for example for themes and ideas I could pursue   Maybe users here could suggests questions concepts or events within crpyto history that they have explored or have wanted to explore further z
258,The new hash function SHA3  ie Keccak  has considerably fewer rounds than its predecessors which made me wonder how exactly the number of rounds necessary are determined for ciphers   The papers on rotational cryptanalysis of skein suggested that for ARX ciphers the number of nonlinear operations in total should be comparable to the desired security  ie 128 additions for 128 bit security though careful choice of round constants can apparently improve the situation to get away with 07 times the desired security number of additions   Is similar reasoning used for ciphers where the nonlinear step is bitwise AND  as is the case in Keccak ? Keccak seems to perform 5 bitwise AND operations per round for a total of 120 operations If we somewhat arbitrarily assume  I know I know  that its security is affected in a similar way to ARX ciphers That is that attacks similar to rotational cryptanalysis might apply then that would seem to imply that the 24round versions have a security of at most 171 bits which is less than the claimed 256bit security for the 512 bit version   Are there other factors that lead us to expect a greater security for Keccak than the ARX networks? I guess 171bit security is in practice incredibly robust and to my knowledge nobody has demonstrated an attack on keccak similar to rotational cryptanalysis but I also see no immediate reason why one would expect one to not exist
259,Im specifically asking what your setup is  For example you could have your entire system partition encrypted with Veracrypt and have your files stored on a second partition that automatically mounts after the system boots  Im specifically interested in finding out the setup for people who have password managers and who encrypt their system partition  I dont want to memorize two high entropy passwords but reusing a password is bad practice    I had tried a setup where the system was unencrypted and all that was on it was veracrypt my password manager and my password manager database file  All other files and applications were stored on a second veracryptencrypted partition  However that didnt work well because when the system booted it looked for default applications and couldnt find them plus other issues related to running applications from a partition that had to be mounted    So thats the crux of the issue: How do you have a high entropy password for a password manager AND your hard drive without reusing the same password?  Should I just suck it up and use the password twice? 
260,Hello redditors  I havent found  something like this:  given a public message m distributed at a time t  n the algorithm is able to mathematically ensure that the message will only be opened at time t by anyone with access to the message  Has this concept been studied? Is this even feasible? Do you know any related paper?  I cannot distribute a hypothetical key in a given time t  m  because if I do so there is a high probability that the key reaches the different receptors at different times  Thank you very much and sorry if the question doesnt makes any sense
261,Hey Im new to the subreddit though not to cryptography and Id like to know what some of your favorite tools are for enciphering or deciphering messages Python modules get double points
262,Hello   Im writing a paper for my university about file safety against encryptions and I must present some sort of solution against these malicious programs  Ive been thinking about a Honeypot it would look something like this: a file is created in a directory typically attacked first like Recycling bin and if it is modified by a certain program or user they are immediately denied access to any further files I do not know how much this is practical Another way is poking around Windows API but its a more difficult topic for me and I havent found any information on using API against encryptions  Now I know this is a wide question but Im having a hard time gathering useful information and would appreciate straight answers or useful articles If you know of any useful articles please share them  I will continue researching this on my own but anything helps  Thank you
263,I am rather newly interested in cryptography and I have heard there ways that votes can be done without a central authority using cryptographic techniques Votes can remain anonymous yet the winner can still be universally determined I tried to look into this a bit but I havent found any good sources Is this correct? Is it going to be over my head? Thanks
264,Me and my mother found a paper in my grandfathers underwear drawer I will post a photo We think its a message for us but not sure Any thoughts would be helpful  http:imgurcom7rDimpQ  He was a Korean War veteran in the army Im not sure if that might be helpful in some way
265,Im pretty new to cryptography and this is a passing idea that I had but to me it seems like if something like this were realistically implemented there would be no practical way to even discover a vulnerability thats faster than brute force Heres how it goes  Almost every encryption algorithm Im familiar with uses a single algorithm with the key or keys as a parameter In other words its a function that acts on the plaintext with the key as a parameter And the algorithm itself is identical from cipher to cipher with the parameter itself being the only thing thats different   So if a vulnerability against that single algorithm is discovered every cipher encrypted with that algorithm is vulnerable This is pretty obvious   But imagine theres a hypothetical way of encrypting data that consists of two algorithms X and Y For each encryption key X takes the key as a seed and generates an algorithm Y thats unique or relatively unique for each given key Y can be something like an invertible sequence of bitwise operations on a binary block Then that algorithm Y is used to encrypt the plaintext Y may or may not take the key as a parameter   To me it seems like if the hypothetical X can be found a function that takes a key and produces a unique invertible bitwise algorithm then to break the encryption would be impossible since every possible version of Y would have to be analyzed and Y is unique to each key So even if there were a vulnerability for a particular version of Y it would only work for ciphertexts encrypted with only that specific key  Assuming this algorithm X can be discovered think of something like a cryptographic hash function with the hash being an algorithm is my logic correct or is my idea just a day dream?  EDIT: further description  The way I imagined this would work is by having a set of some number of unique operations on a block like xor with zeroes reverse order modular addition etc and having each subkey of the key correspond to that basic operation Then Y would simply be a sequential operation of all of those smaller transformations on the binary block in the order of those subkeys in the key That way the actual transformation thats performed on the plaintext cant be easily simplified down to an xor with a mask derived from the key only the mask would also vary by the plaintext or down to a version of OTP encryption Im not a coder but I have a basic working proofofconcept implementation at https:githubcomthesephistvoyage if you want to look further    
266,http:imgurcomlUs7ACQ  Any idea why this pub arcade machine would need DES encryption? Presumably its old hence DES It doesnt take cards so is it encrypting game state?
267,It doesnt need to be NSA proof I dont have any government secrets  just a reliable and consistently updated software I could use to encrypt sensitive documents tax forms financial documents confidential personal information that a determined and sophisticated hacker would not be able to crack   I was wondering if you guys had any recommendations? Upon some reading it seems like Truecrypt was the standard but its no longer being updated To be honest I dont even know if Im going about this correctly Encryption software is the way to go right?
268,I know letter frequencies are easy to find for English like [here]http:enwikipediaorgwikiLetter_frequencyRelative_frequencies_of_letters_in_the_English_language or [here]http:norvigcommayznerhtml but where could I find characters frequencies lists that include spaces commas dashes question marks etc? If this isnt easily available where can I find a bunch of representative text to do the counts myself?  I need it to find the key length in a repeating key XOR cipher like Vignre but XOR instead of letter substitution using index of coincidence
269,Ive been looking around to find out how fast a modern computer would decode an Enigma code message Problem is when you ask the question that way everyone goes off thinking the answer is using a brute force type of approach No what I really would like to have answered is if we programmed a computer with all the algorithms there was a lot of work up front to pear down possible combinations the cribs and the basic operation of the Bombes how long would it take Given the memory all the crib info and military terms used by the Germans and speed virtual rotors are not limited to some rpm of modern computers how long would Turnings team approach take to crack a code?  Can anybody answer that?
270,I know the theory of it exists but Im wondering if you can currently actually use quantum cryptography as an encryption system
271,http:wwwcenociphercryptto  CenoCipher 20 is a completely free and open source software tool designed to allow regular mainstream internet users to easily carry out secure encrypted communications across cyberspace It was built from a devotion to digital privacy in the hope that it will be useful to the public  Specifications are as follows:  Fully open source and written in C  AES and Twofish algorithms layered together for performing combined encryption of messages and files  PBKDF2  HMAC  SHA256  ISAAC used for construction of keys authentication code initialization vector salt etc   The interface and program usage are simple and straightforward so as to enable easy manipulation by normal mainstream users  Any comments questions bug reports feature requests or suggestions are welcome 
272,from reading the wikipedia page it says SHA256 is secure by 128 bits i understand this to mean that a brute force attack to find one collision takes about 2^128 hash computations are there any ways to find collisions faster than this brute force method?
273,When i asked a friend of mine for her phone number she gave me an encrypted number The encryption was easy all numbers 3 Now in return i want to do a step up I need your help to encrypt a line of 8 numbers The encryption should preferably be solveable without a compurer and make you feel stupid when you final solve it
274,1 74 6865 786E696E 657465656E746878 707265736964656E7478646F6573786E 6F74786C696578616E797768657265786E6561727874686973786275696C646 6E677A6275747174686572657869737161797472656576626568696E647769747A6F6E78746865786E6F7274686561737478736964657A746861747169737175 6974656B66756E6E796A73686170656471616E6479696E6B746869736A74726 5657A77657877696C6C776C6561726E 7A6D6F726578616 26F75747 6746 86 5 73 6571 7065736B 7978 68 7 56 D616 E7 3 
275,So I open up my schools website http:pacybercom and it loads up this: http:pastebincom3FZ8DSyj   No idea what it means no idea where to start Im just very curious as to what it is Could just be a servers dying words but regardless there is an element of mystery to it I dont have any Bitcoins or whatnot just curious  Thanks in advance
276,Tracey Patient was 13 years old when she was brutally murdered in West Auckland New Zealand   She was last seen alive at 930pm on January 29 1976 on Great North Rd outside the old Henderson police station She had been with a girlfriend and called out goodbye as she crossed the road She asked an elderly couple for the time and after realising she was late home became upset and ran off Her home was just 16km away but Tracey never made it Her body was later found in the Waitakere Ranges by a man walking his dog She had been strangled with a pantyhose   Two years later Traceys signet ring was found in a rubbish bin at the Avondale shopping mall   An anonymous caller tipped police off to the ring and quoted the number 126040 Detectives have never been able to trace that caller or decipher the numeric code   Traceys sister Debbie 15 at the time of the murder recently spoke about the last time they saw each other The sisters had been grounded but Debbie nagged her parents until they let her go to the Doobie Brothers concert at Western Springs in Auckland Tracey was also allowed to go and see her friend They left home together and when they parted ways Tracey said see you later then  Some people have been working to try to figure out what the numeric code could be at [this link]http:wwwgeekzoneconzforumsasp?forumid=48topicid=96481page_no=2  Any ideas?
277,I came up with this little algorithm but havent thought of a way to reverse it without brute force I tried hillclimbing on all the secret values S P and T to no avail too many local maximums [Heres some Python code which implements the algorithm]http:pastebincomeKARz1VM Anyone have any insights or ideas?  Begin with an ndigit value called S Use [chain addition]http:wwwquadibloccomcryptopp1324htm on S to get n more digits called P Permute S with P to get T Add T and P to get K The challenge is then to recover S given only K  Examples:      S = 432     P = 759     T = 342     K = 091      S = 84577 89231     P = 29245 71543     T = 98517 37284     K = 17752 08727  Note: The range of K is about 60 of the domain; over half of valid K have a unique S whereas the rest have multiple S that all generate the same K tested with n = 4 5 6
278,I hope this doesnt sound too remedial I know very little of this subject  If I know the plaintext cyphertext and algorithm used to encrypt could I also determine the key used reliably enough to decrypt other cyphertexts encrypted with that key?  For example suppose you know the following:          Plaintext: Hello World     Cyphertext: giuyrwkmns:{?     Algorithm: Simon  Could you find the key and use it to decrypt supposing the same key and algorithm was used:      Vaqd@qMQXa  Would it be easier or harder with more data? or is it just trivial  nearimpossible regardless?
279,So I am writing a secured chat system for a school project and I was wondering if anyone would mind looking at how I plan on doing it and telling me what problems it has thank you I was planning on having a server that holds a database which will include all users usernames hashed and salted passwords their public key and and their private key encrypted with their password When user X sends another user Y  a message the program will find Ys public key and decrypt Xs private key Then it will take the plaintext hash it and put that aside and then encrypt the original plaintext with a symmetric cipher then take the key for that cipher and encrypt it first with Ys public key and then with Xs private key Then it sends all of that data to Y who decrypts the message hashes it checks it against the original hash and if they are the same prints it out to user Y if not it alerts both parties that the message was not received as intended My primary concern is with the database if that would be secure at all as well as if there is any problems with how i plan on going about the actual encryption For the ciphers I was planning on using SHA3 for the hash AES or serpent or both for the symmetric and probably RSA for the public or elliptic curves If I can figure out how to implement them Im writing this in java if that is important sorry for the wall of text thank you  Edit: Any suggestion on specific ciphers would also be very helpful thank you
280,So lets say I encrypt a 200character block of plaintext using not one but three different key tables  The first digraph is keyed to the first key table the second digraph to the second table and so on in a repeating sequence   Any estimates on how much this would slow down a digital hillclimbing attack?  My very very amateurish noob guess is that it would present a formidable obstacle because without knowing how many key tables are involved or how they map to the digraphs no output solution would really make any more plaintext statistical sense than another so the computer would never really have much to build on   Could the Playfair ciphertext ever be made effectively machineunbreakable through hillclimbing at least with the addition of even more key tables say 5 10 20?    
281,Hello I recently was sent a cipher and was wondering if anyone here could crack it? I dont have the solution but I pasted it below  823457 611261963 6232615806
282,Hi rcryptography I am trying to make the software end of [this]http:wwwinventgeekcomProjectsalpharadoverviewaspx from scratch and need some help figuring out how to get to usable random numbers  My idea so far is as follows:  1 Get a frame from the camera 2 Count the number of hot pixels in the frame the pixels with a brightness above a certain value represented by the variable numPixels 3 Check to see if the value of numPixels is == 0; if so start over If numPixels > 0 then proceed 4 get the xy coordinates of each hot pixel and store them somewhere probably stored in an array or something  Example coordinates total image size in this example is 1024768: 599300 802228 12070 95655  This is where Im stuck I cant figure out a good method of distilling these values down to usable random numbers My initial idea is to simply multiply the x and y coordinates together to reduce the amount of numbers but even after that I am still left with rather large numbers that I believe to be far to repetitive lots of repeated digits mostly 0s  The goal of this project is quality not quantity or speed  If anyone can help me work this out or even suggest a completely different method that they think might be better I would be very thankful as my knowledge of the deep internals of encryption algorithms is sorely lacking despite my love of cryptography
283,Ive heard that a weakness in cryptography is that PCs random number generation is not random enough and also that radio static is used as a convenient source of random noise Does anyone know of using a computers radios to obtain noise or have insight into its feasibility?
284,So first off I am still fairly new to reddit  Now to the real part So recently a friend and I created a Cryptography and Steganography Club at our High School but we are having issues attracting members planning weekly events and just creating a community around codes and cyphers Any help would be greatly appreciated
285,I am trying to configure a piece of software to work with a new camera we got I found the file which has the configuration but the strings are in some encoded format I dont recognize It looks familiar but Im drawing a blank I just need to know what the encoding is so I can write a new definition  The strings are all similar to this: JvE0XUKnVvZ2JvLpYQ=1ZGjoVvZ2MvupZhS=4hgiXGN   Here is the full record in XML http:pastebincomhQ2mUWfc  edit: fixed formatting
286,Regarding [this arcticle]http:wwwtechnologyreviewcomnews512051googlewantstoreplaceallyourpasswordswitharing explain password rings to me like Im a STEM graduate student  Where exact implementation is unknown or multiple implementations exists simply choose any method that would work  I simply want to understand in my head what happens in the background during the interaction and why the ring is so robust to identity theft sans stealing the ring   1 Who verifies the key? Is it one source like Google or can it be any website that chooses to use the ring system  2 How is the ring registeredassociated with your account on a website?  3 What information is stored with the server?  4 What happens inside the ring?  5 What information is returned to the server?  6 What should be required to obtain the ring? Do you need proof of ID?  a passcode? Are the rings unique?  7 If lost or stolen what happens?  Buy a new ring and reset your ring on every website like you would reset a password?
287,I would like to be able to produce the same hash value from both C Rfc2898DeriveBytes and Javascript easypbkdf2  Is this possible or does the pseudorandom aspect of the algorithm mean that different implementations will give different results?
288,Lets assume I were to have some random data but the source might have recorded it ex: [this site]http:qrnganueduauindexphp Lets say I were to create an algorithm that would mix up the data based on user mouse position and general entropy Would this make the data less random or affect the randomness?
289,Not sure that is the best title for my question but I cant really think of a better one  Im working on a game where all players move at the same time In order to avoid a player gaining an advantage by pretending to make his move and then waiting to see the others before making his actual move Id like to somehow make this impossible without being exposed  Obviously if Im making the game I can ensure quite a few things as Im in charge of the clients but assuming an open API to play the game and a malicious player looking for an advantage Id like to curb that before it happens  For the ease of use lets assume two players Honest A and Betrayer B  How do I force B to be honest when telling A hes ready to reveal their moves for the turn? And how do I ensure that B doesnt get his hands on As moves before hes committed to his own?  I keep circling around the idea of a time dependent signature or signature derived from the moves you will play but Im not sure if thats even possible or safe  I suspect my biggest problem with figuring out what to do is my lack of terminology Its easy enough to read up on a subject but if you dont know the terminology used you cant find the subject to begin with
290,I am currently reading [The Code Book by Simon Singh]http:wwwamazoncomCodeBookScienceSecrecyCryptographydp0385495323 and it is a great book Are there any other books like this? Also are there any easy to understand but with quite some technical knowledge books?
291,In my spare time im going to have a go at creating a password manager for personal use and I have made some progress I was wandering how secure are the encryption methods I am using? The way that I Store data for next use is by writing it to an XML file the contents often looks like this:`<HashedKey>Y8EOH0QelF3mK7u7TRdGz7gBvk6p41Ilp8Jmrh3WoN6aNTQtmTK8CKoVO5Le4p<HashedKey>   <Type>UL7HJDlwr54Jut2pZmyIng==<Type>   <Username>ITaGv41MAasgoiTvoh8Q==<Username>   <Password>ov6prgPX3bxTCbWJC9vVw==<Password>   <Notes>a6gr5iy4MN5QYP4tDl0iQ==<Notes>`     My question to you is how easy would this be to Decrypt provided that you dont know anything about the program itself?  For those of you wandering this isnt any of my real data this is some dummy data that I made up and keyed it into my program  Thanks in advance  PS: If anyone has any insight on how to create a custom file type that will store all of the xml files inside it like a database then please get in touch with me as at the moment it looks like [this]http:iimgurcomUPLLLYCpng Thankyou                  
292,I received two text messages from a number 51090 that I havent had past communication with The two messages came with a few minutes of each other Texts are below just looking to identify what they are decrypting them is not necessary unless its going to be easy  but providing instructions on how to decrypt them would be helpful  ulsoNFckGR62P3dBoGe1ZPUVD7LYDnPT3WG28MTiymc=  qzuJlmtKVZ5ciUNmkGDARV5elUbVYAK9dulYyVPME=
293,What is a basic cryptography project I can do for a high school IB HL Math project? It is supposed to be an exploration into an area of mathematics leaving it open to do almost whatever I want as long as I use higher level mathematics Cryptography has really interested and Ive been watching lectures on coursea about it I was thinking I could prove that a modern hash function or cipher is secure for my project Maybe I could create my own secure cipher  How would I go about doing that and where could I find resources?
294,Here is the code: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::  ::::::::::::::::   I tried morse code but came back empty handed The hyphens are obviously segmenting the words but as far as making a cypher or finding what kind of code this could be I cant turn up anything in a google search or a search on reddit Anyone here got any clues?
295,glTpDybI acYQxFls goVNxuip zgSVaufp xbteKRbU pniuWiFc  grHOqDfE xzFAzsiv edRGctzx
296,I NEED YOUR ASSISTANCE Hey guys  This year my reddit santa is an evil bastard and sent me this coded hint as to where to find my gift Im stumped I figured out that the letters over the circled words have the letters A through K above them When you arrange them in order from AK you get DFHDFUELFFA Thats as far as I got Any help is appreciated Link:http:iimgurcomrInTojpg UPDATE: THE CODE HAS BEEN SOLVED Would you like the answer or did you want to keep working on it? Thanks for all of your help
297,Basically Ive found an old encrypted container from when I was in middle school and want to decrypt it I think I know the password since I used the same password for almost everything back then but Im not sure what program I need to decrypt it  I think I encrypted this around 20052006 but Im not sure what program I used Is there any easy way to look at the file and determine it? The utility I used was free to download but beyond that I dont know much about it  If anyone has any ideas Id love to hear them  Okay so here is a bit from the beginning using a HEX editor:  6E 4E 66 87 87 25 47 63 72 BB 52 BD D6 AF 1B 35 29 FA 4C A1 AB 60 D8 55 7E 4E 15 F2 53 A5 A5 A9 E1 1D 07 FF 49 23 F2 D0 F1 7C 20 17 2D 7E 8F C7 B9 C5 43 F2 D6 F5 5B 08 6D 73 41 9F DB B5 19 64 0F C1 D2 C4 8E E4 5A BC 01 72 B3 45 D8 BE 66 F1 E7 87 15 FA 48 E1 F9 03 5B CB 9A 5F F0 46 F9 BD A3 E6 2C 41 B2 FD 9A F9 0E 22 E6 13 D0 D9 72 9A D6 1E 4F BA 30 6C F9 9C 96 9C 25 B6 78 C6 71 C1 6A 16 6A 1F B6 4B 16 C3 CF D4 91 A2 82 79 69 32 41 42 5F 3F 05 1A 01 3C 1D B7 7D C4 24 A1 0C FD CA 66 88 79 FD E7 54 D0 CC 7B 6D CA BC 5F BE   EDIT: cut down some of the hex it was way longer than needed
298,Hi  Ive taken a few college classes on asymmetric cryptography but wasnt assigned a book for the course  Im hoping you can recommend a few good books on the number theory behind cryptography  I have some good books on application and if the book included some down to earth explanations that would be awesome but I am primarily interested in theory on various cryptosystems the creation of cryptosystems and things of that nature  Thanks 
299,Hey guys Im about to finish my degree in pure mathematics I was looking to move to Australia to do a Master of Cryptography but it seems most university just offers statistics Any idea? Also Im willing to travel anywhere in the world for that so it doesnt have to be in Australia :  edit : also I live in France
300,Im trying to solve this:  http:mediatumblrcomtumblr_mb3s1tUHHG1r11nz5png  The creator says This symbology here is the key to win  This was posted as a hint:  http:25mediatumblrcomtumblr_mba3ucE4qf1rhpk8ro1_1280png  Which says:  Chaos is my  Master and zero  Is my purpose  Reverse the answer  To find the true chaos  Ask the master  Of nothing  Which was then responded to with this The clues are in several places:  http:mediatumblrcomtumblr_mba7tltn4x1r11nz5png  And then this was posted:  http:24mediatumblrcomtumblr_mbfuot1OJI1rhpk8ro1_1280png  Which says:   Dont be fooled by tricks   The truth is on the flipside    All help is greatly appreciated :
301,Im pretty new to encryption and using Blowfish CBC mode to encrypt a few small strings to be stored into a database is it safe to reuse the key for every entry?  The IV is generated and tacked into the end of the string thats stored into the database    Also does it help to double encrypt a string?  For example encrypt with blowfish then base64 encode it then encrypt again with AES?  Or is that overkilluseless?
302,Would repeating the same password passwordpassword result in a much harder to crack password? Or do algorithms that crack these things have a way of dealing with that?
303,HPGUDXMIU NZ DBX BMXZNPU JHD; NX NZ KNXRND  EUBIEU UCNBX
304,Hey guys just came across this sub today and thought I would try my hand at making a cypher Nothing used except a pen and paper  Id love to see if anyone can crack it and how long it takes  No doubt it will be very easy  LMES QGPL NSII RS  Edit: Here is a longer version of the encrypted text:  LMES QGPL NSII RSSD KCLT GMTJ ZRWJ X
305,Greetings I am from cryptography community I highly suggest you move there as we are active and continuously growing The server continually undergoes changes and the people are experienced in a multitude of fields EnjoyThe server makes no plans to decrease in activity or size ever It currently has over 150 members and has major plans on creating active ARGs in the future Many of the ciphers posted in the server have paid offers The invite link is shared below Seeking active members and cryptographers Hackers welcome of all types  Our [discord]https:discordggHMbrGGy server  discordggHMbrGGy 
306,Hey yall  TLDR?: what courses in linguisticsif any would be of any use in the field of cryptography? Also what other courses should I be looking at that would help my journey towards cryptography?  Im a math major interested in cryptography Im staying an extra year and Im trying to double in stats and probability or at least minor in it since 1 I figured it would may be of use for cryptography 2 Ive been enjoying my stats and probability class so far and hoping I can get into the stochastic process class next quarter Ive also been hired for a student position in IT for one of the schools departments with the hopes of getting enough experience to jump into an entry level security analyst position Novacoast has a position available and it seems I could have qualified for the job but its grave yard shift so rip Anyways I was wondering what courses in linguistics would be of any use in the field of cryptography? Also what other courses should I be looking at that would help my journey towards cryptography? Im also looking for internship certs in cyber security and trying to set up  supervised independent study with a professor on mathematical cryptography and mathematical logic I really enjoy Phil logic since my school doesnt offer that 
307,in this post I may say hot computer to refer to an internet connected device and cold computer to refer to an always isolated  never connected one  lets say in scenario A you want to decrypt something with a key that has never been exposed to the internet and you receive this text online  In scenario B you want to sign something youre going to put online using the same private key that is never exposed to the internet  You dont want to connect your cold storage device to the internet ever  You dont trust any kind of wired connection between computers or Bluetooth or any network of any kind  You also dont trust the method of moving removable media back and forth between them tell me if you think this is irrational  so whats left?  all I can think of is having a designated QR code scanner for each computer  One for each in case theres a backdoor in the barcode scanner itself so the cold storage computer gets a cold scanner that never sees an internet connected computer as long as it lives  you know in case the barcode scanner cant be trusted lol  in essence this is a wireless solution that doesnt use a wireless standard in the conventional sense  this could also be used as an offline pw manager  You could enter your master password on your password manager on your cold computer to gain access to your account passwords then display as a QR code and scan them into the password field when logging in with your hot computer  Thus never jeopardizing your master key by having it on a connected device  Wouldnt protect you from a software keylogger but afaik no password manager has any features that prevent a virus from catching your passwords when you enter them anyway   edit for clarityTL;DR:  to be clear this approach is not something Im recommending Im just wondering if theres any simplereasier but justaseffective alternatives or if anyone sees any holes in the method that I outlined  The objective in a nutshell a practical way to protect sensitive information including but not limited to passwords  private keys while keeping them relatively easy to use
308,This is a follow on from a previous thread where I shared my work on a cryptography project Ive been pursuing in my spare time You can read that [here]https:wwwredditcomrcryptographycomments8ppxwoive_just_created_my_first_cryptographic_function and download the project from GitHub [here]https:githubcomNextLevelCoderUUAS  I originally wrote a really long piece on all the changes Ive made to the algorithm but Reddit deleted what Id written when I selected to post here I cant be bothered rewriting it all and the changes should be fairly obvious thanks to the documentation provided both incode and on GitHub  Soon I hope to implement BigNums in place of doubles use an approximation of the exponential function whose value is not system or language dependent and remove some of the metrics currently used which may or may not be redundant such as which offsets have been used the sum of vector components and the number of components to the vector Until then please give me whatever feedback you can on it and Ill work to improve it
309,Can anyone who closely follows academia please point me to what you would consider top professorsgroups andor cs departments working on interesting and imppactful projects in cryptography eg one comes to mind Dan Boneh of Stanford  Thanks
310,What is a good way to start learning cryptography fundamentals ?
311,Ive heard around 1215 alphanumeric characters may be acceptable to be practically crackproof these days But whats the rough formula for the amount of time it takes to bruteforce an x length assume random alphanumeric password? Assume AES256 encryption  Example formula: 62^x  00000001 seconds I just made this up but its just to give an example; 62 simply represents all letters including capitals and numbers 09  If x is 10 then thatd be almost a million days to check through all permutations  Should we replace 00000001 with some other number to be more accurate?
312,Hey So I have a background in cryptography I studied computer science and had some lectures on various stuff I know the textbook variants of stuff like RSA ElGamalDSA DH and 12 other lesser known asymmetric schemes I have a decent understanding how it is applied in modern protocols like TLS and so forth I got the basic algebranumber theory  So with this background in mind can you recommend a good book or article about ECC? I want to learn about the basics first Ive already read a thing or two but Ive never had a proper introduction into the topic I would be interested in some real world considerations as well Since ECDH and ECDSA are the most common applications Id also like to read a little about that
313,Spain cracks King Ferdinands 500yearold secret code  http:wwwbbccouknewsworldeurope42931940  Wasnt able to find any info on how the code was actually broken  If anyone has any info would be appreciated
314,https:enwikipediaorgwikiNeedhamE28093Schroeder_protocol   Symmetric NeedhamSchroder aims to establish a secret key between two parties A and B and it uses a trusted server S  1 A>S: A B Na  2 S>A: {Na Kab B {Kab A}Kbs}Kas  3 A>B: {Kab A}Kbs  4 B>A: {Nb}Kab  5 A>B: {Nb  1}Kab    What is the point of steps 4 and 5? By this protocol only A couldve got {Kab A}Kbs to send to B and if Kbs is not compromised then whats the point for B to make sure that A has the Kab? 
315,Lets say we have a server whose job is to sign documents using a secret key  Lets say that theres a bug in the software and the secret key gets stolen  Im interested in mechanisms to mitigate the damage  Q1: Instead of giving a the server a single secret key youd give it a sequence of secret keys  The node signs doc1 with key1 doc2 with key2 etc  When its done with a key it throws out the key completely so that key cant be stolen any more  There must be some mechanism to procedurally generate the sequence of keys but I dont know the name of the technique to google it  Anybody know what this is called?  Q2: are there any other cool techniques that can be used to protect the secret keys?  
316,I used to use Truecrypt til it died and recommended me to use Windows Bitlocker  Now Im using Linux and was wondering if there was a better option than resorting to Dislocker to use my Bitlocker crypted flashdrive  Thanks in advance for your assistance
317,Greetings  I posted this over in randroidapps and was recommended to post here    I was recently playing around with custom InputMethodSevices for Android and I ended up making an Enigma machine I thought it was cool so I published it :  nbsp;    Link to PlayStore: Enigma Keyboard  nbsp;    Technical Android Fun:   Uses InputMethodService so that you can use this keyboard in any application  Uses ACTION_PROCESS_TEXT receiver to allow you to translate text from any app  nbsp;   For an introduction to enigma machines I recommend watching YouTube: The Enigma Machine Explained
318,Hi  I had an idea for a situation which is actually slightly different but roughly translates to let valid participants of a system to say whatever they want without revealing their identity They also need to be assured that their message can never be tampered Now what I am unsure of is the validity of the cryptography I plan to use to achieve it Itd be great if you guys could read through and answer a few doubts at the end thanks  1 A person provides a few details about himself initially If the details are satisfactory a code say smart contract is made to run to generate a pair of public key and private key This public key is added to a public ledgerpool and no association is made with the person The private key is then securely handed to the person And no association is made with the person and the private key In essence the person now has a private key and doesnt know his public key The public key rests in a public ledgerpool for everyone to see  2 This is repeated for all the persons wanting to be a part of the system  3 A global key word is selected say Hello Hello  4 Any person now wanting to broadcast a message can create the message say  Hi How do you do? and encrypt the global key word Hello Hello with the private key and create the hash of the concatenated message HHi How do you do? || EHello Hello and submit all the 3 strings to a mem pool  5 To validate messages from mem pool multiple people can then attempt to decrypt the encrypted global key word part of the message with the public keys from the public ledgerpool If the message successfully decrypts then it is proof that the person is a participant of the system and that he is authorized to say whatever he wishes If the message fails to decrypt for all the public keys then it is a farce message by unauthorized person and can be ignored  6 On multiple confirmations it can be added to another public ledger And so at all times the message creator can be sure that the message hasnt been tampered with and that it is known to other participants without leaking any identity   tl;dr:  So this relies on the fact that if a public key form the pool has been able to decrypt the key word then clearly the person must be a valid participant because they posses the corresponding private key  Is this method faulty in any manner? I hope it made senseIf it all it does has this been conceptualized in some manner already? If yes what is it? Has it been improved on? Is there a better method?  Any comment is appreciated Thanks  EDIT: I might be away for a few hours Sorry if I cant respond asap But i do plan to go through all the responses 
319,Is there a way you can force a torrent connection to use SSL so that your ISP cannot see you were using torrent file sharing? 
320,Im new to cryptography my experience is basically the Coursera crypto course  The wikipedia entry for CBCMAC explains how using the same key for encryption and authentication is very bad https:enwikipediaorgwikiCBCMACUsing_the_same_key_for_encryption_and_authentication  In the case Im looking at the key is shared and the CBCMAC is run on the plain text However the CBCMAC uses an all 0 IV recommended practice it seems but the CBC encryption uses a random IV which is sent in plain text prepended to the cipher text  The wikipedia section explaining the attack method says We assume for the purposes of this example and without loss of generality that the initialization vector used for the encryption process is a vector of zeroes The without loss of generality statement sounds like I should be able to set the encryption IV to anything and the same argument applies But that doesnt appear to be the case unless my MAC IV is modified to match the encryption IV Do they assume the MAC IV is the encryption IV in this attack?  For example I can:   1 MAC plain text P with IV 0 and key K  2 Encrypt P with IV 0 and key K to get C  3 Modify a block in C not the last one  4 Decrypt C and observe that my MAC hasnt changed  But if I replace the IV in step 2 with something other than 0 the same attack doesnt work  I suspect a 0 IV for MAC and random IV for encrypt is insecure in some way when sharing the same key I just cant figure out why given the details in the wiki 
321,Say I dont want anyone to know I have evidence that a document existed at a certain point in time  I generate a random number A and a document I authored B I use a oneway function to make a new number C It is hard to calculate A from B and C and I keep A private  I publish C as a message on some cryptocurrencys blockchain paying a small mining fee The message and its time stamp are now permanent and public  As the only person who knows A I can prove that the data in B must have been known before this time stamp Since C is meaningless on its own I can keep it a secret that I have the ability to provide this proof  The unfortunate catch is that someone can claim I stole B from them before this time stamp and so this doesnt provide an earliest possible authorship date  I can now challenge someone who claims they authored the document after this date unaware of the time stamp that proves its prior existence Or if I prove a longstanding maths problem and Im worried someone else will publish it before I can produce a tidily formatted academic paper I could broadcast the encrypted proof to a blockchain  Can anyone think of any more exciting uses or have I just wasted the time of everyone unfortunate to get this far into my spiel?
322,I have a client whose web site is configured with SSLTLS certificate from a popular CA The site uses several popular administrative utilities that are popular targets for bots and hackers Ive been tasked with protecting these utilities using client authentication certificates I would like to avoid using a self signed CA because I would then have to distribute that along with the client auth certs I have the original key and csr for the domain and the cert issued by the CA has the following features:          X509v3 extensions:             X509v3 Basic Constraints: critical                 CA:FALSE             X509v3 Extended Key Usage:                 TLS Web Server Authentication TLS Web Client Authentication             X509v3 Key Usage: critical                 Digital Signature Key Encipherment             X509v3 CRL Distribution Points:                    If I create a new key and csr for each user can I create the client auth certs using the SSLTLS cert without involving a third party? If not can self signed client certs be bundled with the self signed CA cert to ease installation by the client? Thanks for your help
323,Is there any research or established term for a cipher text that can be decrypted into multiple plaintext messages depending on the schemekey being used?
324,I recently created a small simple Golang passwordbased file encryption tool At runtime a userspecified file is encrypted using AES and the key used for encryption is derived from a userprovided password using PBKDF2 Is this approach somewhat secure or is it essentially useless at the hands of an attack?  The code can be found here > https:githubcomaunyksquandary
325,[Original post]https:wwwredditcomrcryptocomments6njsfgstateoftheart_in_program_obfuscation  Im writing a blog post that briefly touches on program obfuscation and whether a defender can stop an attacker from learning crucial details about the program or merely slow them down Im curious to know what the latest theoretical advances are in obfuscation  My understanding:   General blackbox obfuscation is proven impossible  Indistinguishability obfuscation is more limited but its possible and potentially useful  We dont have any practical IO algorithms because the existing ones are weak? broken? havent been studied closely enough?  I dont really know what the current stateoftheart is but would like to become familiar with it Directions to resources for learning more eg whats possible with indistinguishability obfuscation or suggestions for related topics eg are there other approaches besides indistinguishability obfuscation that are being researched? would be greatly appreciated  To be clear Im not talking about adhoc obfuscation that you see in DRM applications compiled JavaNET programs etc Im asking whats theoretically possible and what the latest research is I liked [Matthew Greens overview of an advance from 2014]https:blogcryptographyengineeringcom20140221cryptographicobfuscationand but Im wondering what advances have been made in the last 3 years and are there related advances that Green hasnt covered?
326,Is realcomplex analysis useful for cryptography?
327,Is there any sort of public key method that can be done with only pencil and paper?  It doesnt need to be anything too fancy or even be used for large messages  But is there any sort of asymmetric cipher that can be used without the aid of a computer except maybe a small calculator?
328,HelloI would like to know some tips and tricks from both sides of the spectrum of cryptography from creating or solving  any tip or help is gladly appreciated
329,Hi  Are there any real Enigma messages on the Net with codebooks available for em? Id like to try receiving these messages with an Enigma simulator
330,Hello people of rcryptograpy Right now Im reading The Code Book by Simon Singh and I have a question to ask When describing the Enigma Singh does a pretty  sweet job of explaining how the rotors work but theres an extra  element that he decided to omit which is a ring setting Singh mentions some extraneous reading to get an understanding but none of its been  useful Is the ring setting something that separate to the spinning rotor piece? If so could you guys explain how it works?  Id like to be able to program my own version of the Enigma but the whole ring setting thing and how it affects rotor wiring is really messing with me  Some info would be really awesome
331,Keen on learning more about decryption and encryption and how it could be used alongside web scraping Has anyone used [CryptoJS]https:codegooglecomarchivepcryptojs for DES purposes in particular?
332,Is there somewhere a collection of tutorials for specific aspects of cryptography proofs basic and advanced primitives number theoretic settings etc?   I am thinking of texts such as   [How to simulate it]https:eprintiacrorg2016046pdf and  [Pairings for beginners]http:wwwcraigcostellocomaupairingsPairingsForBeginnerspdf  which have a narrower focus than an introductory textbook would have  EDIT: There is now a book called [Tutorials on the Foundations of Cryptography]http:wwwspringercomgpbook9783319570471 which includes the aforementioned How to Simulate it along with other theory related tutorials
333,Is it possible to give the recipent the key to a One Time Pad send your message and include the key for the next OTP in it? Are there digital OTPs?
334,Hi everyone I am working on solving a puzzle and I need help with figuring out what classical method of cryptography may have been used  To sum things up I am looking to find a method of cryptography that can be used to hide a specific word inside a few sentences of text  There are a few rules: The letters in the text cannot be rearranged in any shape or form and it does not involve a substitution or any other type of cipher that involves changing anything  My initial guess was a form of stegonagraphy or a null cipher but I havent found a pattern yet  You are to be able to solve this without any outside information but the sentences you are given  Any ideas? 
335,Sorry for my noob question im new in this field but im curious Ive found an xml file with two fields: DATA and SIGNATURE DATA is an Ascii text SIGNATURE is an SHA1RSA1024 string composed by 256 hex characters 128bytes  I dont understand how can bi obtained that signature from the data field: the data is elaborated with the RSA and then with SHA or it is the contrary? Im studying RSA and i think i should find something like this: 00 01 FF FF  FF FF 00 DigestInfo MessageDigest  But it is not true: my signature data doesnt contain that string Can you explain me the procedure used to obtain the signature? Do you have a link with an example maybe in Python due to its simplicity?   
336,Im encrypting user data for a game using a standard algorithm which I didnt write The algorithm encrypts based on a key stored within the game and a nonce to be written into the stream Are there best practices about making this less obvious to decrypt if the user guesses the algorithm and tries the first bytes of the file as the nonce?  Im currently thinking to XOR the nonce before it is written to the  file header using some data stored in the application Is this a horrible mistake? Im properly nervous about making any improvisation in the implementation of cryptography The world will not end if its broken The goal is to make it harder  Is this sane? Is there a better way to obfuscate data than to say here is the data here is the nonce now you merely need to find the key within my binary? That seems to easy  Edit: maybe also storing the nonce at an offset into the file would be a good idea It would have random bytes before and after until the data portion starts
337,To clarify by storing it steaganographically I mean splitting up the encrypted bitstream into arbitrary lengths and concatenating them with an unencrypted bitstream also split into arbitrary lengths ie:       assume encrypted string is already the value of the encrypted string     steg_concatencrypted stringUNENCRYPTED STRING     >> UNencrENCyptRYPed strTEDi STRngING  Assume for the sake of argument there are also no markup tags or delimiters specifying the change from unencrypted to encrypted bits maybe the lengths are just the results of a splitting function with the total bitstream length as the seed  My first instinct is that it would be mainly neutral  maybe slightly positive while providing only a base minimum level of pseudoencryption for the unencrypted stream But there are many things about cryptography which seem counterintuitive for me so that makes me curious to know if something has established this as a weakness
338,The last version of Truecrypt only supports HMACRIPEMD160 for full disk encryption of a boot drive so is it still considered an acceptable choice in 2016 ?
339,Total newb here: does it make any sense at all to encrypt an already encrypted file? 
340,Im looking at some encrypted data Im pretty sure it uses TripleDES as the algorithm the encrypted data has some peculiar features of it I have the ability to encrypt any string I want using this mechanism but its much of a blackbox Here is the string password encrypted and Base64d and in Hex  >  KsSF4tIfkTy0XwkTmwqu7rRfCRObCq7utF8JE5sKru60XwkTmwqu7rRfCRObCq7utF8JE5sKru60XwkTmwqu7g==  >  2AC485E2D21F913C B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE  Note the last 7 blocks are identical password is exactly 8 bytes which is a full block the rest of the block im assuming results from 0s being encrypted  Anyways curious to note that passwordpassword encrypts to   > 2AC485E2D21F913C 2AC485E2D21F913C B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE  so we can see that each 8 bytes of plain text encrypts to the same cipher text It is my understanding that CBCCFB and a few others would not exhibit this behavior and that only ECB would Is that correct or are there other block modes that would exhibit this behavior?  Other interesting piece is that when I take this encrypted value and decrypt with CBC mode using an arbitrary key and IV i get the repetitive pattern of the blocks in the decrypted data which I wouldnt expect based on how CBC uses info from the previous block during encryptiondecryption  Additional crypto output for password1 is  > 2AC485E2D21F913C AF7C16589ECBA74D B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE B45F09139B0AAEEE  So we can see that even having a single byte in a block causes the entire block to change ruling out the idea of some stupid xor crypto that works per byte or something  Any thought on this would be appreciated
341,Up front complete cryptoignoramus here but I find myself baffled How does salting a hash using a method such as PBKDF_2 increase the complexity of cracking a password?  Assume that a database leaks: username salt and the derived hash become readily available  If I know the iterations and the HMAC used 100000 SHA256 for example what prevents me from creating a table with the 10000 most common passwords or any other method and checking the derived hashes against the created table?  Is there solely a processing time penalty?  Anything else? Thanks
342,Hey all I know very little about cryptography but I was wondering if somebody could answer my question: does an algorithm exist that can take a plain text message and encode it as another plain text message with completely coherent sentence structure but about a different topic? Im not talking about something like the eagle has landed but a seemingly normal communication For example:  Original message: Go to 25 Oak Street at 8:00pm on the 11th You will see a man in a red shirt waiting for the bus Ask him if he has the time He will hand you your next instructions  Encoded message: Hey John  I thought your presentation today was pretty good but I have some concerns: if we are to go with your plan how will we turn a profit without demographic B? Also wouldnt it be better to use supplier A in the long run?  Regards Smith  It wouldnt be a onetoone mapping but I could kind of see this working by exploiting higherlevel sentence structures Anyways what do you all think?
343,I have no idea what im talking about so forgive me If something is being encrypted and i know the encrypted and the unencrypted text can i figure out the method it is using  example encrypted:   GZJLM1C8Mo4mKI_Bc_wFCK4ZhcQiCk9eP80KbWKQsj8  Plain text solved: 9467459173893570  the last 22 digits of the encrypted string never change  any help is nice or point me in another direction thank you  
344,The [77graph]http:mathworldwolframcomM22Graphhtml is a unique Steiner system S3622 on 22 points  It can be represented with the following list of 77 words as the vertices The edges of the graph are vertex pairs that share no letters  abcilu abdfrs abejop abgmnq abhktv acdghp aceqrv acfjnt ackmos ademtu adinov adjklq aefgik aehlns afhoqu aflmpv agjsuv aglort ahijmr aipqst aknpru bcdekn bcfgov bchjqs bcmprt bdgijt bdhlmo bdpquv beflqt beghru beimsv bfhinp bfjkmu bgklps bikoqr bjlnrv bnostu cdfimq cdjoru cdlstv cefpsu cegjlm cehiot cfhklr cginrs cgkqtu chmnuv cijkpv clnopq defhjv degoqs deilpr dfglnu dfkopt dgkmrv dhiksu dhnqrt djmnps efmnor egnptv ehkmpq eijnqu ejkrst eklouv fghmst fgjpqr fijlos firtuv fknqsv ghilqv ghjkno gimopu hjlptu hoprsv iklmnt jmoqtv lmqrsu    Id like to transform this into a list of actual words for a card game or something with as many real words as possible  The letters can be scrambled in each word  Is it possible to get up to 30 40 50 actual words with letter substitutions and rearrangements of the letters?  
345,Im learning the basics of cryptography and network security stuff right now but im a little bamboozled by NTRUEcrypt and lattice based cryptography  can someone maybe break it down a little simpler for me on how it differs from ECC and RSA?
346,Im considering writing a story about Leuven University in Belgium as this place that noone has heard of but is one of the worlds leading centers for cryptography research   Can you tell me if youve heard of Leuven and their crypto work and if theyre considered world class?  Id need to get outside opinion before I make the decision on whether to travel there or not  Many thanks Amir 
347,I posted this in ELI5 but didnt get any response so I thought I might post it here What exactly is it? I read up on it in wikipedia but dont really understand the concept or its role in cryptography  If anybody could provide an extremely simple explanation that would be great Thanks :
348,My understanding is that the plain text message should be signed by Alice with her secret key and that the resultant signed message should be encrypted and sent   Again to my understanding only this proves to Bob that the plaintext message itself was actually signed by Alice that she is responsible for the plain text   In what circumstance would it benefit Alice to encrypt before signing a message?   Thank you in advance
349,FYI  NIST announces FIPS 202 the SHA3 Standard and FIPS 1804 in the Federal Register today Please see the Federal Register Notice for details and for NISTs comment resolutions for DRAFT FIPS 202 and DRAFT FIPS 1804 FIPS 202 SHA3 Standard: PermutationBased Hash and ExtendableOutput Functions August 5 2015 NIST published a Federal Register Notice 80 FR 46543 on August 5 2015 announcing the approval of FIPS 202 SHA3 Standard: PermutationBased Hash and ExtendableOutput Functions and a Revision of the Applicability Clause of FIPS 1804 Secure Hash Standard FIPS 202 specifies the SHA3 family of hash functions as well as mechanisms for other cryptographic functions to be specified in the future The revision to the Applicability Clause of FIPS 1804 approves the use of hash functions specified in either FIPS 1804 or FIPS 202 when a secure hash function is required for the protection of sensitive unclassified information in Federal applications including as a component within other cryptographic algorithms and protocols For details on NISTs cryptographic hash project please refer to this page: http:csrcnistgovgroupsSThashindexhtml For details on the SHA3 standardization effort please refer to this page: http:csrcnistgovgroupsSThashsha3sha3_standardizationhtml
350,Can any of u help with a good explanation I understand?  I posted this to rmath  http:wwwredditcomrmathcomments38lnniwould_p_np_mean_hash_functions_like_sha256_must
351,So I have recently got interested for cryptography and I was wondering if there were any good tutorials that could show me the basics of cryptography Any suggestions?
352,Im very much a crypto layperson so please bear with me I would guess that encrypting a message with multiple public keys making it viewable to more than one person would decrease the security of a cipher more and more with the addition of each key Is that true? Does anyone here know how to very roughly quantify this effect?
353,Hi all so I am trying to write a frequency analysis softwarefor fun  But I have some questions   Is  [this picture] http:uploadwikimediaorgwikibooksen118Letter_frequencyPNG or [this]http:imagescnitblogcomblog486782201301100851221e59dfcda3de4008a2d80bdd7b62a6capng accurate??   How to decrypt this:  > encrypted_letter = 40000  Oct of the letter2  So the word Test will be displayed as:  | 24624 18975 13431 13104  What If I multiplied the the encrypted letter by a random generated number would it be possible to break the algorithm?? For example: encrypted_e = 18975 The computer generates a random number between 1 to 3 and multiplies it So the new possible values of the encrypted_e are 18975 37950 56925 For the letter a it would multiply it by a number from 4 to 6 for B it would multiply it by a number from 10 to 12 etcWould it be possible to break it through frequency analysis? If yes then how to do it using frequency analysis?  Thanks in advance :D  EDIT: I forgot to write have in the title xD
354,As far as Im concerned enigma had two weaknesses one is due to the behaviour of the operator which can be easily fixed and the important one is a design problem the fact that a character can never become itself which helped Turing to exponentially reduce the number of combinations his Bomb machine had to try in order to crack a message If we fixed  those problems would an Enigma machine be very strong having 15 million million million combinations? Does it exist? PS: sorry for my English
355,Its ok if its software both parties need  Would be great if it worked with email too  But like I said Im new at this and only understand encryption from a logical viewpoint not from a technological viewpoint    I just have some work conversations I would like to make as private as possible and I have no idea where to start  Google search just makes me wanna puke at all the top companies guaranteed encryption unbreakable unbeatable etc     I do know that no encryption is 100 secure I feel like I do know that but what Id like is something that works well and is designed so if someone was interested in the info they would have to go through great lengths to get to it   Thats enough for me not hiding illegal stuff just confidential and proprietary information shared with colleagues  
356,Hi Im  a programmer studying crypto and I built a little block hand cipher Ive tried to keep it workable with pencil and paper so it relies on simple arithmetic You can find it [here]https:gistgithubcomaynik9f2664908b8cd4f5c98b explained and implemented in javascript runnable with nodejs Now apart of brute forcing the key which can be arbitrarily long what other attacks could be performed on it?
357,Im struggling to get my head around the concept of differences between MAC and PRF My understanding is a PRF can be used when generating a MAC and is generally considered a more secure approach Whats an example of a MAC generated not using a PRF?
358,Ive only started reading about cryptohashing last week so please forgive and educate me on things Im misunderstanding  So lets say correct horse battery staple is hashed If a thief has a dictionary of words and knows the amount of words in the passphrase its only a matter of time before the correct phrase is figured out  My question is would it make a difference if the passphrase is actually text in a gif? That way instead of the hash being created from 28 characters its kilobytes worth of info getting hashed  I assume the thief would not be able to directly test passphrase hashes  they would have run each passphrase through the algorithm used to produce GIFs and test the GIF Would that slow them down any significant amount?
359,Ive been trying to get my head around how some codes can be so unbreakable  namely the immense trouble we had with Enigma even after we broke it its my understanding that even though we figured out how to break the code there were days when we still werent able to decode anything from it before the cipher would reset at the beginning of the new day  I know some codes might be straight gibberish Voynich Elgar but some like the Kryptos are legit yet unbreakable  A lot of these methods of manual encryption  I dont even know if thats the right word but its what Im using to describe some chump sitting down with pen and paper and obscuring the text with letters and numbers until it looks like total gibberish as opposed to some of the other methods Ive seen that involve generating md5s and other such business  Anyway a lot of the methods Ive seen just boil down to a multilayer substitution cipher This to me seems like it should be a simple matter of pattern recognition No matter how many layers you try to bury it under youre still just substituting A for B right? So why cant we see the patterns?  I guess obviously if we knew why some codes were unbreakable we could solve them but is there any theory as to where were having trouble?  If you cant tell Im asking from a stance of total ignorance and minimal exposure If clarification is needed let me know
360,Is there a reason I should be using escdsa on my ssh keys? Are using RSA for the key generation considered insecure? Are there anything that I missed where RSA is considered insecure? backdoor weak crypto 
361,Ive been told it is a bifid cipher to solve it      This is code: TF RO PC LR SO KL XK GF PN IL RL UM PG GJ IL AF AY MU SM BL KP GG RA EA RP NI LJ     Fairly certain they keyword is LSU only other clue is top right          This is the post:  Top Right   TF RO PC LR SO KL XK GF PN IL RL UM PG GJ IL AF AY MU SM BL KP GG RA EA RP NI LJ   No Q  2013 CFBHC National Championship Team   5D T  120   Password  Do not post answer in this thread   Most of it is selfexplanatory  The 2013 CFBHC National Championship Team is LSU which is why I think that is the keyward  The answer is a password to another forum with another quest
362,There is a mystery from the game Grand Theft Auto V that the people over at rchiliadmystery and elsewhere have been trying to solve for a while involving a strange code written beneath a sign for Famous Hamburgers   [A thread on the subject can be found here]http:wwwredditcomrchiliadmysterycomments217zi3we_should_look_at_the_clues_that_we_have_famous  [The Hamburger Sign]http:oi39tinypiccom2w4wgu9jpg  The text:   JD O  19390  J6 JEFF  FIGO  0Y  I thought I would post it here at rcryptography to see if any more experienced puzzlers might want to take a crack at it :
363,Im currently working on a project which involves making attempts at breaking the fourth part of the Kryptos sculpture in the CIA headquarters I was wondering if anyone had any ideas on a specific preferably not attempted previously method I should try for solving it Im currently working on using matrix decryption The 2x2 matrices have turned up nothing so far and Im working on 3x3 matrices as well
364,Professor gave us this code for extra credit I believe it is randomly assigned letters as well as a Caesar Shift You guys might will most definitely have a better idea of whats going on here I just cant decipher it The farthest I got is to thinking the first seven letters spell Susanne? Heres what it is:  GJGEVVRNRHFYFRURUGFAEFRAHYRERNRUJGUOAHNLIR  Any help?  EDIT: A frequency test got me here:  mfmillsasheresosometiesthrsisasofmouthands  What other steps can I take to decipher this?  EDIT2: The prof revealed it is a cypher and a rail method can you guys do this within the hour? ;
365,I have been toying with something I came up with one day when I was bored in class I found out after a while that I could use it as a method of encryption The only problem with it is that the key to decrypt the information is dependent on the message itself I have been trying to find a way to use a predefined key but keep running into roadblocks Im reluctant to talk to anyone about my methods yet as I want to work a few kinks out and maybe explore my ideas more in graduate studies  How bad is having the decypher key be dependent on the message?
366,So Im experimenting again with ideas on solving ECDLP and have come across a stumbling block with doing Extended GCDs with polynomials  I have the following polynomials in x :  dx = 8x^2  60x  49  fx = x^2  2  gx = 12x^2  20x  20  Imagine if you will that Im looking for the result of a division modulus some integer thus :  dx  gx == bx modulus fx  Im trying to solve this using Extended GCD where wed be looking for :  dx  axfx = bxgx  Where ax is arbitrary and bx is the eventual quotient answer to the modular division that Im looking for  So what are the steps necessary to arrive at ax and bx ?  Any help will be greatly appreciated
367,Carl has a secret message for Bob PASS Carl gives Alice the secret message to give to Bob but Carl doesnt trust Alice who may maliciously change a letter so he gives Alice additional information 1 P 3 A W S 2 S Bob has the 1 _ 3 _ W _ 2 _ to decrypt the message and knows to not trust the information if these are tampered with What is this called?
368,Random s are critical to cryptography but how cando we verify that they are truly random? At first thought you could just take the average of a large sample However I realize this wouldnt really show if the method produces random s For example I could have a method that simply alternated between 0 and 1 The average would be 05 but the method is still predictable and the s arent random
369,Lets say I generate a particularly large set of truly random data Using something like [LavaRND]http:sourceforgenetprojectslavarnd or using similar means as those used by Randomorg  equal in size to the data I wish to encrypt If I perform a bitwise XOR between the random data and the data I wish to encrypt the result is a file which is indistinguishable from randomness  but if XORed with the original random data set results in the original message  How secure is this assuming I can obtain truly random data in the first place?
370,Ive been struggling with a cipher encoded in a base4 system for the past two days and could really use a hand  [Here]http:iimgurcom099bKm6png is a snapshot of the puzzle Its titled Even the Royal mail has its own code and the hint says Please note: four to a pair  The code is based on the Intelligent Mail Barcode but when I threw it into a IMB reader it said it was an invalid string Real IMBs are I believe only 65 characters and the three strings given are 84 84 and 12 characters respectively  Here is a transcription of the code reading left to right from top to bottom using T for the dot Track A for the upper bar Ascending D for the lower bar Descending and F for the large bar Full Note: the clue said four to a pair so Ive split it up as such although in the original puzzle it is only split after every 84th character:  >FADT ATFD AADD FDAT ATDF FDTA ADDA FADT ATFD AADD FTAD TFFT ADAD FTAD FDAT FDAT FADT FTFT FTDA DADA FDAT  >DFTA AADD FADT ATFD AADD FTAD TFFT FDTA ATFD FDAT ATDF FDTA FDAT DFAT TFFT ATFD FDTA TFFT FADT TFFT FDAT  >DTFA DTFA TTFF  I noted a couple of things here F is by far the most common first letter Out of the 45 4bit strings 21 start with F 13 with A 6 with T and 5 with D  Also a base 4 string with four digits has 256 possible values so I tried translating it into ASCII I tried all 24 possible combinations of ADF and T equaling 012 and 3 and for each translated all the base4 strings into base10 and then into ASCII but it was always gibberish so I think that route is unlikely  It struck me that even though there are 256 possible 4bit combinations with this system only 17 are expressed in the puzzle I assigned each unique 4bit sequence an arbitrary alphabetical value Here is the puzzle reprinted with that system:  >A B C D E F G A B C H I J H D D A K L M D  >N C A B C H I F B D E F D O I B F I A I D  >P P Q  A few things stood out here D FDAT in the original notation is the most frequent character appearing 7 times A B and I 5 times C and F 4 times H 3 times E and P twice and G J K L M N O and Q just once  Also the pattern A B C appears 3 times and is followed by H I twice D E F also appears twice Other than that it appears fairly random I tried running the letter sequence I came up with through several Patristocrat solvers but nothing helpful emerged  And now Im stuck The puzzle is originally part of a game called Qwyzzle and based on the complexity of its other puzzles it seems unlikely that this is anything more complex than a substitution cipher although I have not conclusively ruled that possibility out It may also be that the route Ive gone with this is totally off but based on the hint I think Im somewhere in the ballpark  The solution to the overall puzzle will likely be a word or phrase in English but there is a chance its a number  The title mentions royalty and the hint says four to a pair so I thought the solution might have to do with card games or something along those lines Ive been trying brute force attempts at the solution with poker related terms and the names of British monarchs Im just taking shots in the dark at this point Maybe theres something about the Royal mail hint I havent thought of I dont know  If anyone has any thoughts ideas or hints Id be much obliged  edit: fixed transcription error
371,Hey  Any help in deciphering this code would be very helpfulthanks guys  Any thoughts?;  30313031303031313031313031303131303031313130303130313030313031303031303130313030303131303130303130313030303031303031303130313031303130313030313130313030303130313031303130313031303131303031313130313031303130303031313031303131303130303031313030313031303131313031303130313131303130313030303130303131313130313030313131313031
372,For example RSA and ECC security is greatly weakened by Shors algorithm but various other ones such as some latticebased  codingbased cryptosystems are not  Is there something inherently difficult in the mathematical operations for quantum computers in these other schemes?  I know RSA is based on the belief that it is very difficult to factor large numbers but what are some key features about the other schemes which inhibit quantum computers from cracking them? Thanks very much for replying :
373,What I mean is this; is the ability to encrypt at the highest levels accessible to anyone with a dedicated team or single trained cryptographer or does it take a large amount of resources that only a 1st world power could easily provide?  Edit: Thank you for your help I now how a much better understanding of the big picture I do plan to do more of my own research I realize that I could have come into this better informed 
374,Imagine the following scenario: an encrypted documented needs to be decrypted only very rarely so that one decryption is allowed to take arbitrarily long   Could I use a weak password provided that I stretch it with bcryptscrypt in such a way that the stretching takes a very long time say 10 minutes 30 minutes or even one hour?  Example: a normally very weak password say 6 characters ~28 bits of entropy is stretched with scrypt with parameters tuned such that it takes one hour to perform the stretching Then a brute force attack would need ~15000 years on average to crack the password  Assuming scrypt is not broken is this method secure or is there something else that needs to be considered? 
375,I had never heard about this standard before today A conversation between my grandfather and I about how best to encrypt files transmitted via insecure means lead him to mention an application he was trying out called Encoding Decoding Free It claims to use something called Ultra 3 encryption Further investigation lead him to find that it was referring to the Ultra Encryption Standard v3 and [this paper PDF]http:wwwmecspressorgijmecsijmecsv4n7IJMECSV4N77pdf about the cipher Further digging uncovered another incarnation of the standard called UESIV presumably a revisiting of UESIII  Im no mathematical expert but I am fairly familiar with the concepts of symmetric key and asymmetric key cryptography Unfortunately Im not familiar enough to make any sense of the math they were claiming in their documentation for UESIII Im hesitant to trust anything Ive never heard of before much less something I cant find mentioned anywhere except in a few scattered PDF files on various academic hosts I was hoping that there might be someone or someones here more adept at analyzing these kinds of things than I am who might be able to advise on whether or not UESIII is something which would be a suitable alternative to a more traditional application like TrueCrypt or GnuPG for encrypting and decrypting our files  TL;DR  Im no good at high level math and was hoping someone might be able to look over the documentation found [herePDF]http:wwwmecspressorgijmecsijmecsv4n7IJMECSV4N77pdf and advise me on whether or not it seems legitimate or just snake oil
376,What is a 4 letter keyword that when used in a Vigenre cypher leaves the original message unchanged? I cant think of what it might be and I cant seem to be able to work it out using the standard cypher table
377,When I was younger I used to make codes forboredom at school  Now later Ive stumbled across one No answers in sight so I thought lets ask the reddit ppl what it could possibly mean  Shouldnt be too hard I think I think  2VBU 2VI2 USN7 NKEJ  DB2VI RYG8RME JDPK 53QY 4KZM RRJDPK3QY4KZM  I have no idea what its supposed to mean It cant be that complicated right?  right?
378,Im playing around with twisted curves and I have run into the following problem :  I have a very simple curve x^3  7 mod 43 and a twist x^3  17 mod 43 Now the first curve has 31 points and the second has 57 points This all works fine in MAGMA as the following tests demonstrate :  F1 := GF43; P1 := EllipticCurve[F1|00007];  P1;  F2 := GF43; P2 := EllipticCurve[F2|000017];  P2;  Gives 31 and 57 respectively with all points as integers mod 43  Now Im trying to lift those two curves to mod 43^2 because I read in some literature that those two lifted curves should have the same number of points ie 1767 which is the product of 31 and 57 and that there is an isomorphism between them MAGMA also bears this out :  F3 := GF4343; P3 := EllipticCurve[F3|00007];  P3;  F4 := GF4343; P4 := EllipticCurve[F4|00007];  P4;  Gives 1767 and 1767 which should be correct  However the points themselves dont seem to be integers anymore? When I try to list the points Im seeing results like :  0 : 1 : 0 1 : F21^858 : 1 1 : F21^1782 : 1 F21^2 : F21^500 : 1 F21^2 : F21^1424 : 1  Which seem to be powers of something? Furthermore even though it reports the number of points on the lifted curves as 1767 when I manually try to create the integer points I get point counts of 1333 and 2451 respectively ie 31x43 and 57x43  What am I missing? Why cant I keep these points in the field of integers? Am I declaring GF4343 incorrectly?
379,are ther any tools for testing hill cipher with just knowing matrixbecause i have seen people answering with just the cipher and the matrix lengthis ther any scripts?or websites?or tools which can crack hill ciphers
380,Could you please help me think of possible strategies for cracking a code that involves the following circumstances?   the ciphertext is only 100 chars long   a plaintext fragment 10 chars is known   the encryption method involved 2 steps Either a singleletter substitution ie Vigenre first and then a diagraph substitution ie Playfair second or vice versa  Is it possible that the plaintext fragment could help reveal the keys that were used?
381,Earlier this morning I started to play around with the idea of creating a PRNG and I was curious about how secure it would be ie: whether it could be considered cryptographically secure highly unlikely or if it would be good enough just for a noncrypto purposes The state of the number generator is a SHA1 hash which is initialized to random values taken from either devrandom or devurandom when you seed the generator you take its starting state and combine it with the unsigned integer designated as the seed When you generate numbers you take the first four [sizeofunsigned int] bytes from the state hash throw it into an unsigned integer value and thats the result but every time you generate a number you take the SHA1 hash of the current state hash plus the value just generated What could be done to improve this and how secure would it be considered as it is? Just for a note this is just for experimentations sake this isnt going to be used anywhere serious [Thar be code]http:pastieorg8390863
382,>72T2101a5 2117o11E57198 4s12412281o8790661Z152507111111111450215192y81121211182220429117611251114898185168914595158211612151391  Spaces are intentional Im trying to solve this but Im just asking for a point in the right direction
383,Given we already have tools like GPG  public key encryption for crypting Is it totally out of the question that services like hotmail and google could implement a modified scheme of their own?  I was thinking along the lines that GMail or Hotmail could host a public repo to look up the keys for your client or their webclient to encrypt the mail before it is sent Pretty sure there is a public repo for GPG keys already so this doesnt seem so crazy  Given the implementation in use at [Cloudfogger]http:wwwcloudfoggercomen namely  A keykeys are generated then encrypted using the users password which the company?client? generates at random The encrypted keys are then stored on their server for download by the user   Obviously this key generation if done server side does mean they could disclose or save an unencrypted key so youd have to trust the company Equally in this case I suspect that you could get away with generating the  decryption key on your client and uploading it preencrypted with your password   In fact I am not entirely clear on how Cloudfogger handles the multple generated decryption keys for each file whether they are generated server or client side I suspect the latter and that when you login they do not decrypt a stored key to verify your account Rather using the normal password hashing mechanisms for authentication risk of NSA intercept leakage of the password when hashing to compare though it would be pretty difficult to do so compared to decrypting a single key unless its for a single simple verification file  More details on Cloudfogger [here]http:supportcloudfoggercomindexphp?KnowledgebaseArticleView137whattypeofencryptiondoescloudfoggeruse  A service like Google could host both keys If technically possible decryption can be done client side then they have no access to the email nor can they decrypt anything that is sent recieved  Depending on implementation they could display via the server with a cached decryption key which is more risky but also more convenient and transparent to a user Or send all crypted information including emails to the client For server side it would preserve hotmail and googles ability to serve targetted adverts  Again issues are presented by a server side service as the cached decryption key could be subject to an NSA intercept or a security compromise of some sort  To me this doesnt sound like an impossibility or even that difficult as a project if done server side Client side however would present more challenges but I believe given the revelations about the NSA and GCHQ Totally worth it  Opinions? I tried finding a GoogleDev but theyre surprisingly elusive  ps Im trying to find a better PDF file that explained Cloudfogger but no luck so far This also might be unclear or a bit crazy had surgery with general anesthetic today
384,Hi All  I am trying to make my own encoding function to get a better understanding of how encoding works I am encoding ASCII text to a base89 random alphabet I generated I would like to then reencode that to a base55 alphabet that is my base89 alphabet from [054]   Much like hex to octal I think this is possible My question is: how do I account for the overflow encoding characters being the same as those that arent overflowed? Example: base55[2] is j but if i encode something that has value 57 and its modded it goes to base55[2]  Here is the link to my python code: http:pastebincomKJPz5Fpg  Thank you
385,Crypto noob here so bear with me  I am analyzing HTML requests of a game called Clash of Clans in which the content field is encrypted using an algorithm that looks easy to understand Ive uploaded a couple of samples of just the content field [here]http:wwwmediafirecom?7wwmfzx175u2p2u2Civ2p7p8sb94sqrh View in hex editor  There are several sections of raw data that are repeated across all requests like this hex sequence 09 02 0B 00 10 and content is not fixed in length So it cannot be a block cipher? am I correct in assuming this?  And all the requests start with similar sequence with a byte changed here and there If anyone needs more samples andor the complete HTML request Id be happy to upload You can also find me in Cryptocat room r_cryptography
386,Ive figured out to encrypt messages using the VIC cipher thanks to [this amazing site]http:wwwquadibloccomcryptopp1324htm but I cant find anything on how to decrypt   Can anybody help? Thanks in advance
387,Ive recently been wrapping my mind around the US militarys [DRYAD]https:enwikipediaorgwikiDRYAD cipher which I understand to be a [polyalphabetic cipher]https:enwikipediaorgwikiPolyalphabetic_cipher  As the code currently stands where every message is substituted for the letters in a randomly sorted alphabet I can understand why this is insecure For example if the alphabet used was:      ABCDEFGHIJKLMNOPQRSTUVWXYZ     ZPKULANQDYEGCSXMOIHTRVBJFW  So if I wanted to say FLEE Id say AGLL This understandably can be reverse engineered since the structure of the word is still intact just with different letters So far so good  However; what would happen if every letter of the ciphertext was substituted with a letter from a different randomlyshuffled alphabet? In this case; 26 different alphabets each titled A B C and so forth  For example after converting our F in FLEE to an A we would grab the letter one character to the right in this case N Using N we would go to that associated alphabet:          ABCDEFGHIJKLMNOPQRSTUVWXYZ     N = FXJHODYSGZERKBILUWCTPQAVMN  Next we would take our next letter in our message L and encode it from L to R Following the above pattern wed grab the letter one character to the right K and go to the K alphabet and so on  Why is this insecure? How would it be cracked? I try to conceptualize how I would break it but the number of possibilities hurts my head
388,I was reading some stuff about it on the wiki and some of it concerned me Do you think its safe?
389,I was reading [this pdf]http:scimathunleduMIMcoursematerialsfilesNUMBER20THEORY2020CRYPTOLOGYB20Course20Notebook20Handouts2020SolutionsCourse20Notebook20HandoutsAFFINE20Ciphers[1]pdf on affine substitution ciphers and on the third page it says   >As we mentioned earlier ane ciphers are not secure because theyre really just special examples of substitution ciphers and so one may use frequency analysis to crack them However we can tweak the idea a bit and consider ane block ciphers instead The mathematics is the same only now instead of encrypting one letter at a time we encrypt a block of letters together As an example suppose we want to take our blocklength to be 4 This means that we divide our message into blocks of 4 letters and encrypt each block separately The largest number we could end up with is 456975 corresponding to the highly unlikely 4letter block ZZZZ and so we need to be sure that our modulus is greater than 456975 We could use 456976 but its just as easy if not easier to use 1000000 Now we proceed just as before We choose a and b and set m = am  b mod 1 000 000 As long as weve chosen a so that gcda 1 000 000 = 1 we can nd an integer x such that ax  1 mod 1 000 000 In this case our decryption function is s = xsb mod 1 000 000  So why do we use 1000000 here when we only used 26 when we were dealing with a 26letter alphabet? Is it arbitrary as long as its greater than the number of letters in the alphabet as long as its coprime with the multiplicative element as well? Can anyone point me towards or explain any of the mathematics behind the choice of the modulus in this case and its relevance to the security of the cipher?  I also found [this]http:wwwstaffnclacukpeterjorgensenMAS3214Week4pdf which says:  >There is another vulnerability in the above setup: It turns out that a ciphertext letter in an even position depends only on the plaintext letter in the same even position: The second letter of the ciphertext depends only on the second letter of the plaintext and so on This is precisely what one wants to avoid by using digraphs or longer blocks  referring to using digraphs for an affine substitution cipher  It goes on to explain that we can use an alphabet of size N for the plaintext alphabet and an encryption alphabet of size M > N and then choose a modulus L st N^2 < L < M^2  But it just says to do that and doesnt explain the mathematical reasons behind that choice of L or anything like that I think its the summary of a lecture I could do with the full lecture notes or an equivalent
390,Ok I wrote a short introduction to cryptographic concepts I titled it [Street Cryptography]https:wwwsmashwordscombooksview179867 Id like for someone to write an honest review of it If youre interested in doing so get back with me and Ill arrange you to receive a free copy to review
391,amarididwnxitwnunidogx  ipamarxuoseonapegxagunwnitutxatwnisxabseugupetxwnetarunxipamarxidirapak xogwnot  arirapamxarutapwnogarogxidaripiparunxonetxipamarxetipirunipxwnatxirxipam unararxidaripiparunxitwnunogxipamarxetupiraparetxagaripitararutxitwnunogetxirunarxu girunegarogxitonipamxirutxisx  
392,So in English customers in HSBC have been given these new keypad looks like [this]http:wwwdkpwcoukwpwpcontentuploads201107hsbc1jpg for their internet banking It works like this:  1 Youre sent this keypad when you log in you give them the serial number on the back  2 You generate your own 48 digit code you then press a button and a new number is generated No internet connection or anything instantaneous  3 You give this newly generated number as part of your log in details and if correct you log in successfully  So how does it work? All HSBC know is the serial number Is it just that each keypad has a unique set of randomish numbers that correspond to each serial number and the code you have to type into the keypad is just a way of accessing one of these numbers? So all HSBC have to do is check a database that shows corresponding generated numbers to serial numbers Is this right or are they doing something more complex here?  I guess its a help as it makes you keep this damn keypad with you whenever you log in  
393,Is it save to use an Ed25519 private key as a passphrase for a symmetric encryption algorithm?
394,Hello can someone help me with this task?   Alice uses a XOR cipher to send messages to Bob She sends two messages C1 = M1  K and C2 = M2  K Eve captures both ciphertext messages but mixes up their order Fortunately Eve knows that the plaintext M2 must be one of the messages How can Eve recover the correct M1 and is it also possible to retrieve the exact key K used by Alice? 
395,If there are any good libraries for them in any language do share the same  Preferable libraries in python go and nodejs
396,Hi Guys  Im trying to learn about simple reverse engineering of XOR algorithms Are there any good sites or tools for beginners you would recommend for me? What Im looking to learn is really simple stuff but Im a total beginner basically I just want to be able to reverse engineer simple hex algorithms when I know both the potential hex inputs and the hex outputs   As a simple example I know that each of these lines derive the 1 byte hex output from some combination of all or part of the 3 byte hex inputs always in the same order of bytes and I know each line uses the same algorithm   E5839D=78  7FDD25=5A  657FAC=C9  In this case the algorithm would be Byte1 XOR Byte 3 = Output because:  E5 ^ 9D = 78  7F ^ 25 = 5A  65 ^ AC = C9  Are there tools where I could just enter each line of inputs and their corresponding output and it would guess at possible algorithms and narrow down the guess the more inputsoutputs I out in? If not what is the process I would go through to go about trying to reverse engineer these types of algorithms when I know all the inputs and outputs?  Another example of a more complicated one that I dont know the algorithm for and am trying to solve:  E0040100A46676B4=A9  E0040100A4664AED=DD  E0040100A4666491=28  E0040100A4666EB4=A2  E0040100A6BC64D4=9C  E0040100A6BCA071=01  E0040100A6BC6D6F=E6  E0040100A4665186=CA  Thanks in advance for any help or tips 
397,I have an idea for a video In it I want an alphanumerical code to be clearly shown written on a paper in the film Later I want to be able to prove I filmed it by showing myself with a key Key plus code should do something that will make people think ah that proves it  Is this possible? Whats the easiest way of going about doing it?
398,Hi Guys  Newbie here I am trying to ramp up on AES encryptiondecryption I have read the wiki page on AES CTR mode and cant figure out how the receiver the side doing the decryption figures out what the nonce is The diagram on wikipedia is not very intuitive with regards to showing how the nonce is figured out on the decrypting side Ive tried googling this with no avail Any helpdocumentation to make sense of this would be greatly appreciated  Thanks
399,Hi Im working on a project and at some point Ill need to encrypt and securely store a json object with sensitive data Neither efficient use of computational resources or speed of encryption are important in this case We just need to use the strongest algorithm According to google AES with 256bit key is the way to go Do you agree with it? If yes which mode of AES CBC ECB  would you use? And I know it would be hard to determinate at this point but would AES survive when quantum computers arrive? Again in this scenario Im looking for the strongest one no matter the speed or the use of resources 
400,Im trying to find an actual historical case of someone XORing their malicious message with a portion of the ciphertext for which they know the corresponding plaintext  But Google isnt helping
401,Yo people Im fairly new to cryptography but am extremely interested in it and find it beyond fascinating Im a cyber sec major sophomore and am looking to improve and learn more about the subject Anyone know good intro resources and such to get acquainted with crypto and work on skills Thanks people
402,Does anyone know a good 6 color based ciphercode? Im trying to make a virtual Rubix cube thats got information encoded in the order of the colors on its sides Im thinking that itll be on a webpage that has a link to the 2D schematic of the cube in the source code The 2D version is the one where the colors will read from left to right top to bottom Each message will have to be composed of 54 colors since thats the amount of squares on the cube It doesnt have to turn out to be a legit Rubix cube when solved but itll have to look normal at first glance when scrambled 
403,Does this indicate someone is someone attempting to cause trouble on Public Key Servers?  I went to pgpmitedu looking for PGP users with the domain wius  What I found was a single key that has a UID which appears to be megabytes in size apparently in binary  It fills my browser window and leaves no room for other entries  Because the UID is so long it happens to contain my search string  Direct link to the search page may crash or hang your browser https:pgpmitedupkslookup?search=22wius22op=index  Small image capture of the output: https:iimgurcomK3eGWD4png
404,Hi it would be amazing if people here might be able to help me in someway as I have very little knowledge on cryptography  I am writing a story where a character is presented with code like programming language however its something thats never been seen before  in the sense that its made up various different languages like Perl C etc and also symbols which havent ever been seen before or would never be used in code The key is that no one knows what this is only that theres a message in there somewhere that they need to decipher We later come to realize that this code has come through a secret group perhaps not even from earth   Our character who is a bit of a genius at crypto and debugging has to find patterns and clues in the code to help figure out what it means and where it came from   What Id like to know is are there any practices an experienced cryptographer would use to find information in code  puzzles Do you learn to start looking at it in a certain way or an area of it Are there pieces of software you can use to test theories  parts of code to see if your theories are correct   Its a bit of an out there concept but I want to ground it in as much reality in terms of the procedure as possible to add more legitimacy to it all To do so Id love to know how you would go about debugging something Are there common terms  practices the more jargon the better   Thanks so much and please do ask if Ive not explained something very well
405,Ive seen some blog posts on the ZCash website as well as some medium posts from Vitalik Buterin that give a highlevel overview of how ZkSNARKs work However Im wondering if anybody knows of informative resources which go in depth on how computations are actually transformed into arithmetic circuits one of the first steps in making a ZkSNARK Thanks
406,What are the best books to read when starting to learn about cryptography  cryptanalysis? for self study though collegiate textbooks are welcome as well
407,AFAIK PGP encrypts a message with a symmetric algorithm like AES256 and then encrypts the key using public key encryption My question is: In the encrypted message are several copies of the key provided each one encrypted for every recipient or is some kind of math used so that only one encrypted key is sent and any recipient with a valid private key can decrypt it? In other words if a message is encrypted for 1000 recipients will the key occupy 1000 times more space than one encrypted for a single recipient?
408,Hi all my friend and I have been working on this cryptography challenge online : http:wwwloyaltyorg~schoenrsa   It is essentially a challenge to look at 100 1024bit RSA public keys some of which share common factors The goal is to use information that to attack the keys find p and q and then recover d and read some messages   I now have pqe and d does anyone have advice on how to go from here to a functioning pem private key? I looked at this but my vrsion of openssl doesnt seem to have this function?   https:linuxdienetman3asn1_generate_nconf   Id appreciate any help
409,Want to learn finite field mathematics Im not sure what its actually called for cryptography and error correcting codes Goal is to implement these algorithms on hardware FPGA Im good with numbers but not very good with theoretical mathematics so some easy to start and brief source would be ideal Thank you
410,Hi  I really enjoy ciphers and solving them and have recently started trying to solve the Ethree ARG But I know I lack alot of knowledge and I use too much guesswork IMO Where do you guys suggest I go in terms of expanding my knowledge of cryptography and cryptanalysis? Book wise? Webiste wise? Any materials to learn common types of ciphers and solution finders? Pardon me in advance for sounding like a noob Im trying to make this a side hobby outside of work and gaming My mind is the one that likes to solve puzzles and I was always into things way over the heads of my peers in school anyways But I am no good at math lololol
411,This is the video: https:wwwyoutubecomwatch?v=GSIDS_lvRv4t=2s  I did leave this question in the comments but havent had a reply so Ill ask here:   I really love this explanation But does RSA encryption work in this same way When looking at RSA encryption online I came across key generators online but the public keys and private keys were different lengths One website also had a little encrypted and decrypt function but it did not work backwards like how you explained but just spat out an error when entering plain text into the decrypt field Can anyone shed some light on where I am getting confused  I am unsure if this video is actually talking directly about RSA or not?
412,For a school project I had to code some basic encrypting methods for data Id Im trying to figure out what theyre actually called In one method I shifted around the order of a binary number into a consistent pattern kind of like a Caesar cipher but not necessarily shifted over by one position ex abcdefgh ijklmnop> habcgfde pijkonlm but with ones and zeros Does that still count as a Caesar cipher or substitution cipher?  Thanks in advance
413,Hello to all  {First of all I really ask you to forgive me if all this bla bla bla will sound nosense and stupid for you but Im only a noob that want to learn from testing himself the whole thing And also Im sorry for my really bad english : }  In my free time I like to program some algorithms programs e etc The past year I have become obsessed with the cryptography world so I have decided to make only for fun and for my own aknowledgment a personal algorithm writed in C  Basically is only a CBC XOR cipher with an true random IV and the help of SHA256 to get some random bytes to make more noise But forcely based on the private key size the block size of the encrypted data is equal to the key size The algorithm work and is faster only with key sized of 128bit 256bit and 512bit If you try with another block size you will notice an really data information loss and slow calculation problems especially with 192bit blocks  In pseudo code is like this:  The user insert an array of byte data a password and set from an enum the key size Will be generated a random IV that will have a size exactly like the key size an hash box to add more noise and confusion of a 256bit fixed dimension is obtained from an SHA256 hash  Logically the plain data is padded with null bytes and the last 2 bytes will be used to store the padded bytes length If you know C I know the algorithm for the plain bytes padding is a crap xD  After this the encryption process starts The data is encrypted block per block so 128 256 or 512 bit at a time and when a new block is being prepared for the encryption the algorithm will compute a new SHA256 hash value from the previously hash box this to try to make more and more noise The first block of plain bytes are XORed with the hash box and also with one more fixed hash value that contains the Password hash and the IV hash after this will be also XORed with the IV  From the 2nd plain block and more will use the same process for the first this time without XORing with the IV but will also XORed with the last encrypted block  And finally the algorithm will encrypt also the IV XORing himself with the last encrypted block and the password after this is attached at the ending of the last block encrypted  And this is not a layer in plus of security is used only to make more confusion on the finally encrypted data The whole encrypted data will be passed through 2 algorithms that will split and rotate all the data in a fixed and predictable way  Here you can see the source code in C: https:pastebincomzn9AsjvS  And from this link you can see an image encrypted with my cipher with a 128bit key and also the original one processed in 126ms on a shity notebook: https:imgurcoma2OKLL  And this is a text encrypted and encoded in base64 using a 128bit key: rIsGjnZazhHfVhSod4AXwpvxhWTpUSzqEeKTLAY=  Now you can kill me D:
414,Hi rcryptography I was wondering if anyone had a good resource or paper that explains how one might go about implementing the Oblivious Transfer Extension primitive From what I have found online there hasnt been a ton of work done in creating this so I was thinking about implementing this primitive myself Note: it was implemented [here]https:githubcomencryptogroupOTExtension but I couldnt really figure out how to use that code modularly which is the goal of what I am about to try to create   Thank you
415,Background: dmcrypt on linux actually hashes whichever key512bit maxkeyfile 8MiB max for use in encrypting hard drives  Academic papers show AES can be broken with related key attacks  Goal: every 8MiB of hard drive space should have its own hopefully distinct keystream in an effort to starve cryptanalysts of data AES is chosen because of robust hardware support Each 8MiB of HDD will be referred to as a distinct cipher block dcb  Hairbrained scheme: use an 8MiB master key wrapping around to the beginning as necessary Move the keybeginning one bit over within the Master Key for each dcb This dcbspecific key will be defined as the dcbkey  So far this sounds like it should be weak to relatedkey analysis   Caveat: reduce the iteration count from the dmcrypt recommended 10002000 each contains AES256s 14 rounds to something much simpler I wanna see if 1100 would be sufficient since were only using each dcbkey for 8MiB Then use the relative glut of processor time to hash each dcbkey on its way into the AES function  As hash functions can be used as Random Number Generators this seems ideal Would we still expose ourselves to relatedkey attacks? Would such an attack on such a scheme be a way to hunt for weaknesses in the hashing algorithm? What weaknesses does this approach have?
416,I have a nagging cryptography question I have yet to find a good answer to:  when Alice sends an encrypted message to Bob what is to prevent Eve from operating on the encrypted message somehow corrupting the data so when Bob decrypts all he gets is a meaningless message?  Or worse how would one prevent Eve from corrupting an encrypted key being sent to Bob using some hybrid cryptography technique?  I understand there are techniques one can use to circumvent some of these issues like message authentication but are there ways to lock a ciphertext so that it cannot be altered in transit?  If so how would you do this for ciphertext encrypted with a homomorphic encryption scheme?  Thanks and happy holidays
417,I am curious to know if there are any publications on zeroknowledge proofs being quantum resistant? 
418,Proof of concept and otherwise experimental is fine 
419,Im curious to what extent signing messages with a private key so that the message can be verified by the public key erodes the security of the private key and makes it easier to bruteforce The reason I am asking is that I am working on a project that uses ECC secp256k1 and requires keys to do a significant amount of signing  Does anyone know of any resources to help get a better understanding of this? Or have any insight they can share? Thanks : 
420,All I can really find online is that CBC requires padding whereas CFB does not  CFB can reveal the length of the plaintext I believe but doesnt require padding  What else should be used to decide between CBC and CFB? Are there any rules of thumb?
421,Looking to securely store a bitcoin seed in non private living conditions like a dormitory  Veracrypt container? Keepas?  Secretly write it into the pages of a nondescript book?  Anyone have any ideas for a cold storage seed to be securely stored?
422,As stated Id like for a group of people that have exchanged public keys using some asofyet undetermined asymmetric cryptographic scheme to be able to sign an arbitrary message in a way that does not reveal which specific user signed it but that it was one of the group members   Also there should be no way to tell which messages have been signed by the same key at least not without access to that particular private key  Is there a way to do the above? There are a bunch of additional requirements and complications but for now Im just interested in bare minimum feasibility to figure out if Im going about this the right way
423,Lets say I have a document  I want to give you a copy and then I want to prove that I gave you a copy  Ie I want some kind of digitally signed receipt from you  If youre dishonest you may receive the document and then refuse to give me a receipt  I would like some sort of cryptographic protocol that provides some sort of simultaneous swap  I give you the document you give me the receipt  Does anything like this exist?  PS Im happy to do the research myself but I have no idea what terms to google for  Proof of disclosure definitely isnt the right search term  Update: Ive been told that the correct term to search for is fair exchange  Bingo
424,I have two such devices and since they became useless in terms of cryptocurrency mining Im thinking about other opportunities   My suggestion is: This thing can encrypt something at a very fast rate For example combining software like VeraCrypt with such device may result in an encrypted volume that couldnt be maliciously decrypted for a lifetime of the Universe   Am I right or terribly wrong?
425,Hello rcryptography I have a question about compressing keys for use in One Time Pads OTP  First we have the OTP where you take a set of random numbers and pad them against your plaintext PT to produce a ciphertext CT  PT  PAD = CT  If you subtract the PAD from the CT you get the PT  CT  PAD = PT  One of the flaws with the OTP is that you require exactly one byte of PAD for every one byte of PT that you have This means that exchanging future keys must be done out of band  From this I have a question about compressing the pad KEY  Say you have a key with values of  :  SET A = [123 42 64 200]  255  Which is 4 bytes of key  And perform an operation which adds each value of the set to the other values of the same set with two exceptions   Exception 1  You do not add the value to itself Exception 2  You ignore instances of the commutative property Such as 123  42 = 165 42  123 = 165  These values can be be expanded to :  SET B = [165 187 68 106 242 9]  255 Which is 6 bytes of key  You then use SET B to encrypt your message This would mean that you could encrypt 6 bytes of plaintext with 4 bytes of key  Assuming you follow the usual rules with using OTPs using truly random numbers to generate SET A and never using the same pad twice does SET B have the same level of entropy as SET A?  Is this an acceptable way to handle compressing a key? How could you derive SET A from SET B?  I appreciate all of your thoughts Thanks for the help
426,Hey I know this may be a very very broad questionconverstationsubject but I am really confused  Last few years Ive heard about Quantum computers quantum cryprography etc Questions are  1 Wtf is quantum computer lol and how different architecture will have compared to the von Neumanns archtectures used by current computers? I dont know quantum physics but as everybody I hope I have a some physics knowledge  2 Given that quantum computers will have a different architecture how this will affect current algorithms? I mean will we see strange changes in the way computer scientists think? Like for example getting the max element of an unsorted array in less than On or some other strange stuff?  3 Based on the previous question I heard Shors algo will be able to find prime factors of a number in polynomial time? As far as I understand Shors algorithm is based on some hardwarephysics stuff I cannot understand From what I know quantum computers will be really really fast compared to the current ones However if quantum computers use the same algorithms as the current computers big O notation is a mathematical notation applying on in theory and not always in practice Mergesort and quicksort is an simple example What I also mean is that for small sized inputs almost every algorithm runs as linear but in theory it may be On So would a quantum computer find prime factors of a number in a theoretical or a practical polynomial time? Why RSA would be considered useless after quantum computers become available? How would it be able to crack a 10100 RSA key? Yes if we could store a bit with a single electron there are not enough in the galaxy to store this key according to a theory  Thanks in advance for any brave person willing to help me :
427,I am attempting to implement Threefish especially the 1024 version However the skein 13 paper does not provide test vectors for Threefish Even after googling I could not find any  Are there any test vectors for Threefish 1024 and where can I find them?  Edit: To answer my own question after desperately searching KAT vectors can be found under https:sitesgooglecomsitebartoszmalkowskithreefish
428,What would be the most practical way to prevent something from being accesseddecrypted until a given amount of time has elapsed? Im open to using projections of future computing power problems which require 10 years to break ??? and other such things  Edit: I was hoping for a solution such that the encrypted format could be published to the world and that the key being released wouldnt be relying on anything like a trusted party
429,From the tutorial here https:wikiopensslorgindexphpElliptic_Curve_Diffie_Hellman the authors say:  Also note that the derived shared secret is not suitable for use directly as a shared key Typically the shared secret is passed through some hash function first in order to generate a key  From my understanding the elliptic curve diffie hellman algorithm gives you a great shared secret why do you have to hash it too?
430,So a coworker and I have a bit of an elaborate inside joke that basically boils down to telling the other person Youre awesome   For my birthday they mailed me a big box covered in tape with the russian nested doll idea of eventually revealing a tiny scroll that read Youre awesome Their birthday is about 3 weeks away and I want to get them back with a riddle and a cipher  Im going to start with a riddle that leads them to a book cipher using a book we read as a company that will give them the letters:  `H A P P Y B I R T H D A Y`  From there I need to find a way to transform it into:  `Y O U A R E A W E S O M E`  13 letters each   Is there any way to transform one into the other with some sort of simple key? Ive never done this before and Im sure they havent either so it will need to be fairly straightforward to solve Im more interested in them spending the 1020 minutes to look up the letters in the book and trolling them with the end result  I thought about having them get the you are awesome message straight from the book cipher but I would still want to scramble it so they dont realize my troll after looking up the first 3 letters  Any ideas? Ill be sure to post an update hopefully a video when they solve it so you can share in the fun at the end :
431,I posted this on Bipolar Reddit and I was told to repost it here for answers  My brother has undergone numerous changes over the last couple of years He used to be vibrant; hes now unemployed for over 18 months now He hasnt told us why he resigned and we dont know if he resigned or was fired He gets money from our mother as he refused to seek job He claims he wants to be an entrepreneur and has been demanding over 32000 from my mother although the family makes just a little over half of it per annum  He seems to love betting these days as his bank statement reveals numerous Neteller payments  We dont even know whats going on in his brain Wed love to receive a bit of help from you  Heres an album that has pictures of the numbers he sometimes jots down What could these number mean? Is this bettingrelated or something more complicated?  http:imgurcomaurxr3
432,Ive been lurking around this sub for news in the field but it is not as active as Id hope it to be So what are some resources to stay current in the field? Researchers to follow sites and organizations dedicated to the field any journals that primarily publish research in the field etc
433,I see many posts looking for recommendations on textbooks geared towards novices and beginners of the subject something like a gentle introduction This is not what Im looking for  I know most of the basics of cryptography but want to become an expert in the field Im looking for a book that covers most if not all of the topics of modern cryptography that appear in practice today I have a very strong math background and want something that doesnt shy away from the details  Ill be looking for a job in the industry sector within about a year and want to be competitive when I graduate
434,I really tried to look it up Im think theres some kind of failsafe in place
435,Hey all you can call me Arat I took calc 1  2 in college but was more into organic chemistry so I have some math background but not much and Im 26 that was 6 years ago that I took those classes biochem major  I fell for a Microsoft scam and it actually sparked my interest in computers I was blown away that I could enter some commands into my computer and BAM some scammer from India was in my computer moving the mouse and typing So I wanted to know more Got my computer cleaned ASAP after scam and didnt pay any  for anything to the scammer  Anyway I learned about Tor became fascinated Learned about ICAAN Learned about popular scams Learned about virtual machines and VPNs Just surface knowledge enough to know what they are   Then I came to crypto and I am in LOVE The math the passion for privacy the dedication and creativity put into it the hard work the programming its just fascinating to me But I know NOTHING I have about 20 pages left in Crypto by Steven Levy I know about the DES from the 70s and the RSA algorithm and some other stuff  Anyone have a second to share some links some info some advice on where to begin? Thank you so much
436,How can I measure time taken for veracrypt to encrypt my data? Axcrypt has debug log with all events and timestamps  In perfect case I could measure both system and volume encryption 
437,By now you know I like posting to this sub  So heres an interesting question:  if you give me an encrypted document that secretly says one thing and the original unencrypted document saying the same thing and I know both documents say the same thing AND I know the algo you used to encrypt it whats keeping me from comparing the two documents and figuring out the private key?  I know youre probably rolling your eyes going like oh god this guy knows nothing but Im new to the whole idea of encryption   Update: it makes sense that you cant recover it from an rsa encrypted document but what about a DSA encrypted one? Eh? They actually use the private key to encrypt it in this scenario and yes they use a random number called k to mask this but whats keeping you from figuring it out even with this number? 
438,and if its too long like more than a few weeks could there any middle ground?  I understand that its been said that getting bits flipped by cosmic rays may be more likely than a false negative from a probabilistic test assuming its a good test done correctly Thats fine got it But setting that aside the question still stands  
439,Hi I am currently developing a side toy project called [decraneio]https:wwwdecraneiojh with basic cryptohashencoding tooling My current goal is to have there a library of hash functions including those that are not that popular for example JH and other SHA3 finalists are pretty hard to find online  I am trying to use publicly available implementations but I am fastly running out of them  What I prefer   Pure client JS no transports of user data to the server  Ability to handle binary data  ideally in form UInt8Array or just not parsing the input during the calculation and not using wild adhoc formats is sufficient  Generic for the given function  if the function supports multiple digests sizes I expect that the implementation will as well  Huge plus would be if the implementation supported bit level granularity On the pages I am using currently byte level but bit would just be better and more generic  What I am looking for and not able to find a good ones: Groestl Haval Blake RadioGatun SHA0 Any suggestions are welcome
440,If it is are there any efficient implementations?
441,I already understand that there are different types of backdoors: for example backdoors targeted at the processor and thus the random number generation process    Most secure communication today that people deal with though is in their phones and widespread instant messaging services   Therefore I would assume that these services are what such backdoors would mostly be targeted at   After all anyone who really want to communicate securely could just buy an old laptop never connect it to the Internet and do all encryption on there before sending the message via any service   Thats why  I would think  its already too late to weaken cryptography  as all the algorithms are publicly available  for people who know what theyre doing and therefore any backdoor laws can only be targeted at the masses iPhones iMessage WhatsApp etc  If there was a governments public key hardcoded into these deviceapplication  the actual integrity of the encryption could remain secure while also allowing governments a backdoor access    This of course requires that the private key doesnt get compromised but as far as I know this hasnt happened to any of the root keys our devices use in daytoday life    I would love your guys take on this What kind of backdoor is being proposed and why is a hardcoded public key not a solution?   Thanks
442,Im not a cryptography expert Im building an application that utilizes crypto and want to make sure I do it right My application encrypts some secret information like this:  var encrypted_password = CryptoJSAESencryptSecret Message password;  Then sends the encrypted password back to the server If an attacker got ahold of the encrypted password and they know the message is Secret Message then can they be able to extract the plain text password?  I understand there are things like modes of operation and also padding schemes that maybe can be tweaked to achieve this effect?
443,What is meant by the Feistel Network being invertible and what is the advantage of being invertible?  
444,Ive got the base system up and running but I guess there are issues with the systemd hook for decryption It actually uses the systemdaskpassword socket but I dont think its being called during the password prompt window  Video for information on the products involved: https:youtubep_M0YEEesA
445,I thought about it after listening to the latest [Common Sense with Dan Carlin]http:wwwdancarlincomcommonsensehomelandingpage Obviously the concept of a mobile voting system or some other similar system isnt new but do we have the cryto available that could secure a system that would ensure voting integrity and allow every vote to truly speak on an issue?
446,As far as I understand utilizing endtoend encryption in a messaging service requires exchanging public keys I dont understand how services like WhatsApp and Telegram can support endtoend encryption in a way where they literally have no access to the message contents  For example Ive understood that utilizing PGP safely requires the participants to meet IRL once to exchange their keys  Is this based solely on trusting these services to get rid of the keys after theyve been exchanged successfully with both participants in a chat?
447,Hi guys so Im trying to understand some basic block cipher features and one thing I cant get my head around is why one would bother using a complicated key schedule or round constants for a cipher   I get that the roundkey cannot be the same for each round because slide attacks would then break the cipher but if I have a cipher with N rounds why cant I just split the key into N pieces and add one piece per round?  Ok so each subkey becomes smaller but the total entropy can never be greater than what is in the key to begin with and if I just split the key in pieces that should guarantee that they are independent whereas a complicated keyschedule runs the risk of introducing some exploitable correlation between the roundkeys  The best reason I could come up with is that it might make the algorithm vulnerable to particularly weak key such as the nullkey That would perhaps be an issue if the cipher is to be turned into a hashfunction but even then it seems that it would just be a matter of making sure that your initialization vector or salt has a large hamming weight  So yea say I make a simple SPnetwork similar to AES but instead of using a complex keyschedule I just split the key into an equal number of parts and add one part each round What goes wrong?  I guess if I have very many rounds as in Threefish the amount of key material added each round might be too small to make them unique  say it comes out to just 4 bits for 80 rounds for instance but that would seem to mostly be a matter of what size the key should be In principle there seems to be little stopping me from just specifying a 1024 bit key which even for a cipher with 128 rounds would ensure 8 bits of keyentropy per round   I guess if I want a MerkleDamgrd construction for a hash function I cant have too large a keysize since it would prevent me from hashing small messages but even that is alleviated by just ensuring that there is an adequate amount of salt  So aside from permitting the use of smaller keys without the need for a keygeneration function what exactly is the purpose of the keyschedule? 
448,Thats all it says Vasco Go3 When I press the button I get 8 digits that seem to change based on time  I closed that account years ago is there anything I could reuse the token for? Im thinking 2FA on Linux systems or anything else interesting rather than throwing it away  I hope this is the right place to ask if not please point me to the right r
449,Id like to install Veracrypt on a dualboot ASUS machine but the installation failed with an error message stating that the VeraCrypt Boot Loader requires at least 32 KBytes of free space at the beginning of the system drive  The message said I need to repartition my disk and leave the first 32 KBytes of the disk free in most cases Im required to delete and recreate the first partition  How exactly do I do this?  How do I ensure that 32 KBytes remaind free if I delete and recreate the Windows partition C:?  I posted on sourceforge with a screenshot of the error message attached to the post: pveracryptdiscussiontechnicalthreadf4f1fb60
450,I dont really know where to start Can you recommend any books online content?
451,Lets say I have N random keys k1 k2 kN and a message Mess  How can I construct a key K and encrypt the message so that M participants out of N can decrypt the cipher EncKMess ?  The traditional secret sharing schemes that I have looked at such as Shamirs doesnt able me to fix k1  kN before producing the message
452,First of all sorry if the post is not suited for this subreddit I checked several subreddits and this seemed like the best place  Im learning about frequency analysis as a way to crack simple ciphers that is substitution ciphers You check the relative frequencies of each character in the ciphertext and compare it against the language typical letter frequencies That way you can make guesses that help you crack the cipher  My question is: given the relative letter frequency of a ciphertext and the letter frequency of the language that the original text is written in in which order should you check your guesses such that the ones that are more probable to be correct are checked first?  To illustrate this lets say that I have some text that has been ciphered with an affine cipher In order to make a guess I need to make two correspondences In this case the most probable correspondence would be the first and second most frequent letters in the ciphertext matched with the first and second most frequent letters in the original language respectively How can I know the next most probable match?  Thank you for your responses
453,Hey all Im a PhD student in a math program whos doing research in the cryptography area specializing in the mathematical side of things I have the intention of working in industry after I graduate although Im not exactly certain as to what kind of job Given my area and my career intention Im wondering if its better to publish papers in a cryptographymath journal or to try to present them at a conference like Eurocrypt PKC etc I asked my advisor about it but he didnt seem to give a clear answer although he said its probably a good idea to have a mix of both  Im wondering if theres one specifically I should push towards and why?
454,Hi folks I am running an online game requiring submission of orders Imagine the game Diplomacy  though its not quite that I asked this forum for help with a public randomness beacon and got pointed to NIST which was great but I have a new question Five players are in different time zones and need to submit orders to each other that can only be read when the last player has set orders I would like players to be able to submit orders in an encrypted form but have their orders decrypt by a certain time  Encrypting with keywords known to a third party would be fine if the third party then released the keywords later  So for instance I could use a site like https:encipherit   but enter a time instead of a keyword When the time has expired that keyword enters the public domain and decryption is then possible  Does such a service exist?  
455,I am a cybersecurity student and I just started I am taking a cryptography course and one of the questions in my book I just can not figure out to save my life Can someone help me or at least point me in the right direction We are just starting to study symmetric encryption and the question that was asked is this:  Consider the following Message: SIDKHKDM AF HCRKIABIE SHIMC KD LFEAILA  The ciphertext was produced using the first sentence of The Other Side Of Silence: The snow lay thick on the steps and the snowflakes driven by the wind looked black in the headlights of the cars  What is the encryption cipher algorithm How secure is it?  I dont expect an answer but I have no idea where to go I have looked through all the ciphers Caesar Hill Playfiar Vingere etc that we have looked at in class so far but I am still extremely lost
456,Not sure if right sub ill try though   I am looking for a specific hashing algorithm with specific traits for a project which are:    A Asymmetric duh    B Output not longer than 1216 characters    C Takes a seed  not sure if it actually exists but just an extra value that will be taken into account when hashing the given plain text perhaps an alphanumeric sequence? EDIT: Seed = key in cryptolingo  ^sorry for the newbie question  Thanks
457,Hello I am an intermediate C programmer working on a small project For now it will be a game which supports multiple users and all the users personal data will be stored in separate folders and the shared resource will be stored in the main folder   I am looking for an extremely small encryption decryption method that I can use to encrypt the data and decrypt it as well Please make it reliable and if each user has their own key then that would be great Thanks
458,My long term goal is to make a tool similar to boxcryptor but first I need to learn how to program and how to properly implement AES So far Ive been using Python for simplicity but I plan to use a compiled memory safe language in the future As far as I understand rolling your own crypto is a bad idea and should be left to experts Im experimenting with this precisely because I want to become an experienced cryptographer :  This is what Ive got so far  https:shareriseupnetYlQ9FuSQxVF49phfquWnSA  To my knowledge      The IV doesnt have to remain secret and can be safely stored next to the ciphertext     The data has to be in chunks of 16 bytes     The keylength must match that of the cipher     Data should be checked for integrity  Now Im sure my implementation has a lot of flaws so please do correct me   UPDATE: Ive addressed most of the issues now Heres the updated code Its now a library used from a GUI  Crypto: https:shareriseupnetbepquqWJ8Z8BneB5Ro8uEA  Library interacting with Crypto: https:shareriseupnetCFHGuiBGgIlzFV6R8WYR2w  Main GUI: https:shareriseupnetBi4W6RFuR1WMRqbx1Dahg  I checked the data for integrity by taking a hash of the plaintext Bad idea as some of you mentioned it leaks information about the data Now Im taking a HMAC of the ciphertext  randomIV using a key derived from the encryption key with SHA512 The encryption key is now derived from the passphrase with PBKDF2 with a random salt also stored next to the ciphertext Random keyssaltsIVs are created using osurandom  PS you can run the above libraries assuming you have Python 27 Tkinter and PBKDF2 https:pypipythonorgpypipbkdf2    
459,I created a protocol for accessing protected resources in a server including files directory and accounts It works by exchanging tokens to generate unique key that will only work within a session under a limited permission Server applications or any connected nodes must use the same algorithm to validate and generate hashes  If you have ample time <hoping> to read the wikithough Its not refinedplease let me know your insights about this protocolWiki could be found at https:githubcomjkgaPAPwiki  Thank you in advance 
460,Im starting my Masters in Electrical and Computer Engineering and Ive been really diggin the cryptography area Also my supervisor is very interested in Genetic Algorithms and metaheuristics  I came across this github repo: https:githubcomlylenelsiga The results seem pretty interesting  I thought about maybe writing a thesis based on a comparison between Genetic Algorithms for cracking SHA1 and MD5 and brute force GPU based methods  I dont feel totally confident about the actual relevance of this comparison though Anyone with more experience on the field could give me some inputs?
461,Hi guys I dont quite understand why the hashfunction itself cannot use a key that defines how it hashes The literature I read talks about that Hk ||m is not secure where ||means concatenate this is clear But in general when we prove theorems we consider families of hash functions indexed by a key s: H^s where s is not a secret Because else an adversary could compute H in constant time But why can s not be secret and define how H^sm maps the message? Highly appreciate your time and explanation Thanks in advance
462,Ive been trying to understand the recently standardized SHA3 algorithm which uses Keccak but the choice of 5 lanes for the nonlinear step puzzles me At first I figured it was just an artifact of the desired state size but RadioGatun uses a similar construction  albeit with more lanes  and that also uses an odd number of AND operations for each round  Ive tried to read the referenced PHD thesis which explains its properties but frankly it is beyond me   So is the choice of an odd number of lanes arbitrary or is it an important part of the security claim? Is there any reason to think the algorithm would be less secure if the same function was designed with an even number of AND operations or even a power of two? 
463,So I have a VERY basic understanding of cryptography  But the thing that bothers me is that even with a 2048 bit encryption which results in a 600 odd digit number how many prime numbers can there be?  Surely it wont take too long to test all prime numbers in that rangewil it?  Edit: thank you for your responses I should clarify what bothers me is how many prime numbers do we have access to I keep on hearing of how prime numbers are harder and harder to find the laymans interpretation that supercomputers are struggling and pop out a new prime number once every month or so And even if there are lets say x prime numbers what if weve only found a fraction of them
464,I apologize if this is not the correct place to post this  Im currently taking a Cryptography course at a USbased university The course requires proofbased solutions to problems and even though they seem basic Im struggling because I do not have a lot of experience with this sort of thing   Id love to hire a tutor to work through some class material with me Please pm me if interested  Thanks
465,Hey so one of the easiest questions in the CTF competition is a file that is named Dropped a filef7f97be1a5a2dmg and i was wondering if that has any significance at all btw i am also very new to Cryptography so anything helps   i also have another file that has a password it says it is CRC32 and the code next to it is 9BD829B5 but that doesnt help me either   thanks in advance
466,So im Doing a CTF soon based on last years Challenges this is the only one i cant get can anyone help me out  explain how this one works iv no clue how to do this one Also this is a good brain teaser  Thanks all  Weve stumbled across a secure military bunker with a keypad on the door to gain access We know that the access code consist of 3 parts 1 The first part is a random number 199 inclusive 2 The second part is a random letter azAZ inclusive 3 The third and final part is a random number 0999 inclusive For example 19f599 or 0a159 could be possible combinations There are no 0s for blank spaces for example 0a001 is not valid It would be 0a1 Weve been struggling to make progress but weve just managed to get access to the hashed access code which will hopefuly give us a breakthrough There are plenty of supplies inside so its worth some effort Find the original access code  2a10CvhHXntAbMoFbZ9fFNbeNdi26sc15eo04ruHTfk8xhuza88xq6
467,Hello   Im trying to analyse an RFID chip for a university project first by looking at its protocol Ive used a snooping device to snoop on the transactions between the tag and a reader and it all looks pretty standard for 1356MHz chip ISO14443A up to a point Once the standard protocol stuff is out of the way past the anti collision and selection it starts some form of proprietary protocol:  1 The tag sends 4 bytes of some form of number with 4 bytes of 0 preceding or succeeding it  2 The reader sends back those 4 bytes decremented  3 The next time the tag gets to this point in another instance of the protocol it sends back to the reader what it was sent in part 2 and the reader decrements it again  In hex:    TRANSACTION 1:  Tag > Reader : 00 00 00 00 FA FA FA FA  some bytes that dont change  Reader > Tag : F9 FA FA FA  some bytes    TRANSACTION 2:  Tag > Reader : F9 FA FA FA 00 00 00 00  some bytes  Reader > Tag : F6 FA FA FA  some bytes    TRANSACTION 3:  Tag > Reader : 00 00 00 00 F6 FA FA FA some bytes  Reader > Tag : F5 FA FA FA  some bytes    This occurs every time with the 4 bytes of 0s alternating each time  It is also odd because each byte decrements in an odd way:  FA > F9 > F6 > F5 > EA >  > 0A > 09 > 06 > 05  Upon the first byte reaching 05 the second byte starts to decrement in the same sequence So 05 FA FA FA > FA F9 FA FA  Has anyone seen anything like this? Is it some form of odd counter of interactions? And why does it go down instead of up? Any ideas?   I have run the snoop over many iterations of the tag interacting and managed to get it down to FA FA F9 FA and I assume once the 3rd byte reaches 05 the 4th shall start decrementing too  Thanks in advance  Edit: Ive been down voted if ive broken some rule or something please do let me know Im posting here as a last resort really as my lecturer had no idea and all my course mates dont have a clue either
468,Im studying programming currently but very interested in hacking cracking and general encryption and security stuff I dont want to just be using other peoples scripts or programs I want to learn to break and crack things myself and want to know if I should try to learn all sorts of mathematical patterns and common patterns used with the alphabet or morse code etc Or is this all taught in typical cryptography courses tutorials? any advice or opinions are greatly appreciated :
469,TL;DR: Looking for a very simple asymmetric free cipher that doesnt have to be very secure but should be easy to implement preferrably in a few lines of C  So heres the deal: For a little project think of a crackme Im doing some obfuscation of internal dispatch tables Currently Im doing it with a symmetric cipher good old broken insecure RC4 for giggles; however it would be fun if this was something asymmetric  Theres no need for this to be secure in any way because anyone who knows how to use a debugger and a disassembler will be able to extract the dispatch table in the clear without going through the effort of breaking the obfuscation itself And thats the whole point of the project: Showing a nontrivially protected program that goes beyond a simple replace if license_key = installation_key then abort with jump over test to break it but where there is an easier way to go about it than breaking the crypto
470,Hi all  As a little project I have been trying to recreate an enigma machine in python Though I feel I have a decent understanding of how things work now maybe I have hit a small stumbling point with decoding messages I was under the impression Enigma was supposed to be entirely reciprocal ie I put in X I get Y I put in Y I get X how when I try and implement this I hit on a stumbling block  take the hypothetical and rubbish 5 letter engima here   Rotor 1:  ABCDE  BCEAD  Reflector  ABCDE  DEACB   Rotor 1 Reverse  BCEAD  ABCDE  If I were to put CAB through this with no rotation I would get ACD however when I put ACD through again I get DAE Clearly thats not quite right now obviously I could decode the first message by flipping the rotors round but that doesnt feel right for a mechanical device Can anyone tell me how decoding the enigma actually worked and therefore where I am wrong please?  
471,Ok so for a project in python programming language I decided to build an Enigma machine I want your feedback to see if this is how it works     You type a letter that letter goes through the plugboard which connects letters to letters example being A goes to G and B goes to J     Then it goes to the first rotor it encounters the right one which basically works like a substitution cipher Then it clicks down like a clock iterating the substitution cipher down one A>B now A>C    Then it repeats for the following 2 ciphers    Then reflects back through all 3 rotors    Then back through the plugboard   once the right rotor iterates 26 times the middle rotor iterates once and once the middle rotor iterates 26 times the left rotor iterates once    Correct?
472,Hello I dont know much about cryptography but Im learning python and decided to make a program that would take a string ask for a password and output the encrypted string to a file   Heres the encryption function:        imports     from random import sample seed shuffle     from string import printable      printEnter STOP to stop recording your message     string =         Im probably going to turn this part into a list comprehension     for line in iterlambda: input>>  STOP:         string = line  \n       password = inputPassword:      seedpassword     chars = sampleprintable lenprintable     e_string = [chr128  charsindexchar  i  128                       for i char in enumeratereversedstring]     seedpassword; shufflee_string    I collect lines of input from the user then create a shuffled printable string   printable contains a string all printable characters in python    To encrypt it I do:   128  the index of the character in the chars string  index of the character in the original string  128    I then do chr on this new number to get an ascii character    I then shuffle that list so the order is random I use a seed so I can decrypt it later   This is an encrypted message w a password of 123 will encrypt to:   Wp[w6Mh10Ye@s3LF    My question to you is: How secureunsecure is this? How can I improve it?     
473,In other words: Do our lives really depend much on assymetric encryption and would hell brake loose if someone finds a way to crack it?
474,At first I thought That would be a bother Then I started to think about it seriously  Obviously day to day banking and stuff would be at risk  But then what about stuff stored on servers I am sure the NSA has petabytes of encrypted data just waiting for the day they can crack it Other countries would have similar Secure entry points for control systems like Dam Floodgates Not a good day to be an undercover spy  What thoughts do you have what other repercussions would coming out of RSA being broken? 
475,Not sure if this is the right place for this If it isnt Im sorry I have around 80 independent paragraphs that I want to make simple codes from Im basically looking for something that will let me put in the input text and then write what I want the code to decipher to and then the program will reference lines and characters in the different paragraphs to quickly create simple codes It would just look something like this: 712355948  And that would correlate to the seventh line first character second line third character and so on I realize this could easily be done by hand but with so many I wondered if there was a way to somewhat automate the process Thanks
476,Does anyone know where I can find the original triple DES paper? I have been looking for this for some time now and havent been able to find it
477,Hi I want to design a FOSShardware encrypted keyboard consisting of the following:    put an arduino in a keyboard in series to the computer  have arduino use strong encryption to communicate to a kernel driver I will use linux  have the kernel driver perform decryption and send keyboard input to the kernel   The purpose of this will be to make it more difficult for an attacker to use a keylogger Even if they physically tapped the lines or sniffed the wirelessbluetooth if I made a wireless version  the user would still be protected Obviously there are still weak points such as if they opened the computer and tapped into my kernel driver but Im not going to worry about securing that yet My aim is just to make a deterrent against keyloggers  As for loading the key I havent decided how to do that yet Either a master password that puts the AVR into program me mode or one static key or maybe even physical DIP switches I will work that out in time  My question is: what type of encryption is best for this ? At first I was thinking AES but then I thought there could be major weaknesses or it might not work at all sending one encrypted byte at a time So then Id need to send blocks of ballast data which then could be a crypto weakness in itself how do I choose the ballast ? So then theres RSA which Im thinking might be better in this case since so much has gone into SSH and theres a ton of opensource code for me to draw from So now I turn to you for advice At this point Im not sure however that an AVR can handle RSA I know they make hardware modules for that but Im not sure I have the hardware expertise to make them work and Im not sure if they have backdoors   Keep in mind I do not want to produce a toy I want to make a fullstrength at least the parts I attempt to strengthen tool that will make some contribution to peoples privacy So I would prefer not to mess with any weaker types of crypto Although I suppose that could be useful for getting proofofconcept  Thanks
478,im taking precalc next year im 14 now what should i do in the mean while to get better? just study precalc now or what i wanna study cryptography when i go to college
479,A friend introduced me to this concept You have two people wanting to communicate securely What they do is they choose a book preferably a very rare book but the best way would be using a book that has never been released They could write it together or maybe even have a computer that never goes online generate the book by writing random words to a text file   When these two people lets call them Bob and Alice want to communicate a secret message they start from the beginning of the book and look for letters corresponding to the letters that want to use in the words that are communicated   The code is created by referring to the position of letters in the book When Bob wants to encode the word code it may for example look like this: 134 145 167 183 These numbers consist of pagewordletter; page 1 word 3 letter 4 as in the case of the first letter   To further increase the security of the message one should never refer to the same letter in the book twice instead go through the book from beginning till end when using the same letter again in the message not include spaces between the words as those would be self explanatory for someone able to decode the message and make it more difficult to crack the code based on length of words  One should also only use the same reference book for a limited amount of time The message could be sent in a letter instead of through the internet for the sake of the argument as computers and the internet opens a whole other can of worms   Im far from an expert on codes and cryptography and please forgive me if this is not relevant for this subreddit I am interested in codes and codebreaking and please poke holes in this method and share possible weaknesses or ways to improve this method From my understanding the only way to decode this would be to have a copy of the book or somehow be able to reproduce the book
480,Hi all  Im making my soontobe 6 year old nephew a birthday present and was wondering if someone could point me towards a code thats crackable for kids   Thanks in advance 
481,Hi my grandmother sent me this [page]http:imgurcomGp2eFDb from a diary by a swedish priest The diary is spanning the years 18171845 Anyone has any ideas?
482,Hello Im mostly an rhacking resident but Im working on an interesting problem and could use a hand from a cryptoguru I understand your algorithm rule  I think mines AES 256 and and am looking for confirmation or dismissal of that claim Please let me know if Im in the wrong place Ill take this to the next best subreddit Id also love to find out how to break this drive if anyone has some creative ideas or advise  I have in my possession a secure USB drive that Im not convinced is secure Its got a keypad to enter a pin code and claims to use real time 256bit AES encryption You enter the pin insert the drive and it works If you do not enter the pin the drive does not register on the system Im a Linux if you follow dmesg output shows nothing unless the pin was entered  There is a reset sequence in case you forgot the pin After resetting the pin to the default you can use the default pin and the drive becomes available to the system seen in dmesg but needs to be partitioned  formatted So whats in this nowavailable unpartitionedformatted space? This is where you come in  If I zero the drive so the input is known reset the device and make an image I can inspect the contents There is some kind of encryption taking place I see a repeating 512 byte pattern through the entire disk This doesnt seem right Im curious about a couple things:   Can AES produce a repeating block of output given repetitive input?   Can you even use AES 256 on on 512 bytes of data without padding?  Wouldnt realtime AES 256 encryption be a bit heavy to compute on a thumbdrive?  Finally I experimented with zeroing the drive entirely and immediately resetting the pin to default without partitioning formatting or setting a nondefault pin Each time I do this I get different output data Ill drop two hexdumps of the first 512 bytes below as an example Each repeats through the entire drive unless something had been written to the drive eg if I partitioned  formated the first 512 byte sector looks different because of partition  format header  Output 1:      00000000  00 a6 63 9d 6b c4 4f 58  c2 53 e1 f6 f4 df d3 d3  |ckOXS|     00000010  fd 86 69 5f c4 54 65 09  2a ce 46 76 44 8a 3d be  |i_TeFvD=|     00000020  81 4f f0 13 92 f1 4d ec  4d b5 b3 47 87 53 ef ab  |OMMGS|     00000030  17 39 89 42 40 88 b2 7b  52 5c 14 45 5d a9 19 c7  |9B@{R\E]|     00000040  78 11 98 df 98 93 be 84  7f b8 82 5e 1c c3 51 b9  |x^Q|     00000050  78 9e 75 fa 1a c6 2c 90  ea 90 0f 8e 37 f4 5a 76  |xu7Zv|     00000060  71 cc 00 34 f3 d0 49 f1  5a 34 bb f7 58 ef d0 12  |q4IZ4X|     00000070  22 73 02 c1 0d 3e 1c bf  44 96 ee 0a 48 90 b0 c0  |s>DH|     00000080  3d b1 f2 0f ed 91 78 67  c1 05 c4 8a 13 73 79 f6  |=xgsy|     00000090  32 aa ab a2 80 09 5e f6  cf 03 45 2f 1a 3f 3e 82  |2^E?>|     000000a0  2c e8 56 49 44 e0 88 b8  18 18 ce 7c ce aa 04 ee  |VID||     000000b0  0e cf b4 75 56 62 c7 92  e5 79 ee 04 33 20 95 9a  |uVby3 |     000000c0  aa 3d 65 b5 a8 52 e1 b6  88 88 ca e4 55 88 56 72  |=eRUVr|     000000d0  e6 d9 b0 0f d1 21 e0 f5  13 77 d3 dc 4b 21 1a e8  |wK|     000000e0  d7 2a 45 a2 60 c5 ac 34  3c 8a 28 ea 9f a4 c0 2a  |E`4<|     000000f0  ba 74 bc c3 9f 25 31 95  3c 59 b7 36 33 08 5f e5  |t1<Y63_|     00000100  87 6d 52 5e 07 d7 69 a5  d6 66 a1 37 54 71 a5 51  |mR^if7TqQ|     00000110  ac 45 77 b5 2d f7 29 e8  aa ca b3 c0 6c 56 5c cc  |EwlV\|     00000120  8b 5e 06 23 d8 5d b3 1c  14 3c e9 72 8e ca 3a 5f  |^]<r:_|     00000130  18 88 a2 89 82 0a fa 39  34 15 4a b0 ef 90 a7 98  |94J|     00000140  0a fe a0 ff 00 fa cd 13  a8 6e b2 4e ad 58 e3 d7  |nNX|     00000150  53 dc b4 80 24 1d 79 17  b5 78 16 07 a9 16 75 f8  |Syxu|     00000160  82 d7 74 25 72 6a 7f 84  b4 5d 52 96 26 60 61 49  |trj]R`aI|     00000170  9d 7e 99 60 40 64 8c 63  c7 08 8e 20 6f 2e 5a 12  |~`@dc oZ|     00000180  7b 59 b7 06 28 e6 e8 46  ce 13 4c 22 ca e4 1e 72  |{YFLr|     00000190  ad e8 61 59 f9 e3 df df  4b 56 7c e1 c8 5a 20 25  |aYKV|Z |     000001a0  06 4d 45 92 04 c2 a9 1d  32 e5 49 60 f3 f0 0a 70  |ME2I`p|     000001b0  4e 6a 9e a6 c7 dd e6 0e  55 0b cf b7 74 4f ba 4b  |NjUtOK|     000001c0  f4 37 6d ca cb 79 2e 98  16 71 83 37 c5 21 91 5f  |7myq7_|     000001d0  a7 c3 af 5b 00 47 e1 34  9e 56 f9 79 6d bb c5 d5  |[G4Vym|     000001e0  0d 48 27 14 b5 cb a6 ca  cc 67 29 2d 0b c3 ca 4a  |HgJ|     000001f0  bb 9a 16 b5 da ac 05 e8  2e 9d 3b 03 7f c1 29 2a  |;|   Output 2:      00000000  35 5d 94 8c c5 dd 18 91  61 7c 4b 7c 16 c8 de ff  |5]a|K||     00000010  23 e8 e9 25 a2 13 cd 37  a5 f6 ed 2f 83 ad ad fc  |7|     00000020  9c 66 2a a3 2b ed 2d d5  6d b8 d6 e0 b7 15 82 3f  |fm?|     00000030  15 fd 54 40 25 f2 35 2f  09 4f 1a 06 bc 28 4a 27  |T@5OJ|     00000040  98 c5 6f 6a 88 2c e0 f4  e0 68 b5 5f 9b 9d 53 94  |ojh_S|     00000050  f3 b7 4e 5a fc 26 19 90  c4 c6 e6 d1 d7 3c b9 39  |NZ<9|     00000060  85 e4 93 35 cc 96 ac b2  56 d8 8c b9 cf 18 9b 69  |5Vi|     00000070  c1 db d4 9c 16 e9 a1 be  a3 27 bb 19 32 0c c6 4c  |2L|     00000080  c4 fb b4 cc 8f dc 8f ee  e7 e4 3f 4d 26 9e e8 f9  |?M|     00000090  81 28 e6 75 23 1c 39 2c  2e e1 8c e9 a3 58 35 15  |u9X5|     000000a0  3a c1 a6 04 5f cd 03 23  d9 1c 79 23 2d d2 ab d9  |:_y|     000000b0  9b 39 91 e8 ec 11 ab 9c  5e ea 58 2e 66 98 8b 73  |9^Xfs|     000000c0  ec cd 47 f5 93 35 d3 6f  19 65 e3 5f d3 f1 00 23  |G5oe_|     000000d0  a9 bc 10 c9 04 47 02 30  b6 7e 60 f5 13 3c 15 f0  |G0~`<|     000000e0  a8 5a b1 48 b6 42 5c d0  77 44 86 aa fb 13 e9 26  |ZHB\wD|     000000f0  35 af 16 d5 a3 a3 7b 69  cc 33 aa c2 cf 61 94 d1  |5{i3a|     00000100  73 61 43 f0 4e 1e bf c0  7b 1a ea 8a d9 7d 69 e0  |saCN{}i|     00000110  5b 27 88 81 8a 7d b0 f9  f8 49 51 e1 79 67 e4 fb  |[}IQyg|     00000120  65 c4 ea 67 75 64 10 4a  dd 11 d5 71 37 3c af ae  |egudJq7<|     00000130  70 ba e8 aa 1e 76 09 6c  3e 0d 5e d2 a3 39 b5 e2  |pvl>^9|     00000140  1a cb 1b 11 56 79 2a 7d  2b 71 96 77 b7 f0 d8 5b  |Vy}qw[|     00000150  7e 96 c7 32 3e 19 c3 11  9b f4 c9 71 d4 6e 64 11  |~2>qnd|     00000160  00 d5 3d a9 4d 47 96 54  e8 4e 91 52 db 79 3b 15  |=MGTNRy;|     00000170  a9 32 27 a4 a1 43 fc e8  80 03 60 da 0e 76 ec fb  |2C`v|     00000180  4c aa 43 1a 75 94 17 a6  01 76 4a 28 23 96 56 1e  |LCuvJV|     00000190  76 84 ac e1 1d 54 12 9d  19 33 4f d5 42 13 85 76  |vT3OBv|     000001a0  a7 77 3c bb a6 c1 f6 39  f5 80 6b c2 57 34 9b 06  |w<9kW4|     000001b0  e1 55 87 d6 a2 4c 94 8c  6a 5c b1 d6 92 50 56 b8  |ULj\PV|     000001c0  73 ca 85 b5 15 bf e8 d5  00 e2 72 ca a4 bf f7 8b  |sr|     000001d0  27 df 78 7b 30 58 a9 a4  a9 27 b1 5e 68 e1 49 fa  |x{0X^hI|     000001e0  9c 29 c9 fe 17 c3 2b b3  6a f7 ef 5a d2 03 c9 c9  |jZ|     000001f0  50 8e d0 fc 70 5a 28 31  07 23 3d 0c 82 94 3d 76  |PpZ1==v| 
483,Hello to rcryptography  Ive recently been assigned an argumentative research paper for my World History Class as a senior in high school The restraints include a flexible time period for sources of between 17702005 the focus must take place outside of the US and I must argue a point  Id like to do this paper on cryptography as Im interested in the subject Other options include artificial intelligence or neuroscience or anything to do with technology or computers really  Im not at the stage of writing such a paper yet but only the ideas stage Obviously it would be unprofessional to ask for help with the writing however Id like to post to the subreddit in search of ideas Maybe there is a large debate in cryptographys history that I dont know about or something that one of might have an idea of that they would like to suggest that I research argue and write about   Id love any suggestions within the realms of any of those interests however Im leaning towards cryptography due to its heavy involvement in world issues in communication especially in conflicts and wars
484,Hello all  Im looking for a program functional with Windows that can test the encryption andor decryption speedstimes for RSA encryption at different key sizes [something where I could get my own data for a graph like this? Figure 1]http:wwwjavamexcomtutorialscryptographyrsa_key_lengthshtml   Hopefully this is the right place to ask  Any chance anyone could point me in the right direction?
485,http:imgurcomWfy2v8L  N DD MMMMM W DDD MMMMM
486,ANSWERED  Heres the link: https:wwwkhanacademyorgcomputingcomputersciencecryptographycipherspxorexploration  In the editor on the left the last question is whether a combination of AND and OR operators would actually scramble the image XOR I assume being the standard   To me it sounds like yes because AND eliminates I think 25 of the options for higher colors and OR eliminates I think 25 of the options for lower colors so doesnt it cancel out? Or am I missing something?  Thanks
487,Ive recently come across what appears to be a rather insecure ciphering system between a computer and a device Ive managed to figure out how the algorithm works and my work with it has been successful However Im not certain what this algorithm is or if it has a name Im inclined to think its a LFSR but beyond that what gives?  Ive translated it into Cpsuedocode Could anybody here identify it and have something to say about how it works?  Important parts involve cipher which updates stored_key1 and the the updating of stored_key2 when receiving messages        uint16_t stored_key1;     uint16_t stored_key2;          void cipheruint8_t buffer size_t len     {     uint16_t key1 = stored_key1;     uint16_t key2 = stored_key2;     uint8_t xor_byte multiplier;          while len {     xor_byte = 0;     for int i = 0; i < 4; i {     multiplier = xor_byte << 1;     if key1  1 {     multiplier |= 1;     key1 = key1 ^ key2 >> 1 | 0x8000;     } else     key1 >>= 1;     xor_byte = multiplier << 1;     if key1  0x80     xor_byte |= 1;     }     buffer ^= xor_byte;     }     stored_key1 = key1;     }          void make_initial_connection_to_devicevoid     {     stored_key1 = uint16_trand;     stored_key2 = 0xA0CB;  Fixed          uint8_t buffer[] = { stored_key1 };     somehow_send_it_to_the_devicebuffer 1;     receive_message_from_device;     }               void send_message_to_deviceuint8_t buffer_to_send size_t len     {     cipherbuffer_to_send len;     somehow_send_it_to_the_devicebuffer_to_send len;     }          void receive_message_from_devicevoid     {     if len < 2     return;          uint8_t buffer_received;     size_t len;     somehow_receive_data_from_devicebuffer_received len;          cipherbuffer_received len;          uint8_t mutation = buffer_received;     buffer_received;     len;          stored_key2 = stored_key2  0xFF | mutation << 8;          somehow_do_something_else_with_received_databuffer_received len;     }
488,Given a random function `[; f:\{01\}^n\mapsto\{01\}^n ;]` what is the difference between `[; f\cdot ;]` and `[; ff\cdot ;]`? eg is there any difference in their distributions?
489,I just started an online course at coursera about cryptography but there are some assignments that need programming some cyphertexts I also started a course on python and I installed Visual studio express 2013 and python 34 For this task Ive been trying to install pycrypto but I wasnt lucky to install it Is this a good way to start or there are other tools that could I start with better than this? I would love a walkthrough
